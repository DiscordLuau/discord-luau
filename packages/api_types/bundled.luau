--!nonstrict
--# selene: allow(unused_variable)

export type ActivityObject = ActivityObject__DARKLUA_TYPE_aU
export type StickerPackObject = StickerPackObject__DARKLUA_TYPE_cs
export type StickerFormatType = StickerFormatType__DARKLUA_TYPE_d
export type ModifyCurrentUserVoiceStateRequest = ModifyCurrentUserVoiceStateRequest__DARKLUA_TYPE_dq
export type PollResultObject = PollResultObject__DARKLUA_TYPE_bY
export type SchedledEventStatus = SchedledEventStatus__DARKLUA_TYPE_H
export type CreateAutoModerationRuleResponse = CreateAutoModerationRuleResponse__DARKLUA_TYPE_eh
export type ReactionObject = ReactionObject__DARKLUA_TYPE_bH
export type BulkOverwriteGuildApplicationCommandsRequest = BulkOverwriteGuildApplicationCommandsRequest__DARKLUA_TYPE_dS
export type ActivityButtonsObject = ActivityButtonsObject__DARKLUA_TYPE_aT
export type NSFWLevel = NSFWLevel__DARKLUA_TYPE_A
export type GuildEmojisUpdatePayload = GuildEmojisUpdatePayload__DARKLUA_TYPE_hq
export type GetCurrentApplicationResponse = GetCurrentApplicationResponse__DARKLUA_TYPE_ea
export type ActionTypes = ActionTypes__DARKLUA_TYPE_t
export type DeleteWebhookMessageResponse = DeleteWebhookMessageResponse__DARKLUA_TYPE_gD
export type AutomoderationRuleObject = AutomoderationRuleObject__DARKLUA_TYPE_bf
export type WebhookObject = WebhookObject__DARKLUA_TYPE_cc
export type GetWebhookResponse = GetWebhookResponse__DARKLUA_TYPE_gs
export type DeleteGuildApplicationCommandResponse = DeleteGuildApplicationCommandResponse__DARKLUA_TYPE_d5
export type EmbedType = EmbedType__DARKLUA_TYPE_P
export type GuildRoleObject = GuildRoleObject__DARKLUA_TYPE_a2
export type ActivityPartyObject = ActivityPartyObject__DARKLUA_TYPE_aQ
export type DeleteAllReactionsResponse = DeleteAllReactionsResponse__DARKLUA_TYPE_ev
export type DeleteAllReactionsForEmojiResponse = DeleteAllReactionsForEmojiResponse__DARKLUA_TYPE_ew
export type Snowflake = Snowflake__DARKLUA_TYPE_R
export type BulkDeleteMessageResponse = BulkDeleteMessageResponse__DARKLUA_TYPE_ez
export type EditChannelPermissionsResponse = EditChannelPermissionsResponse__DARKLUA_TYPE_eA
export type PremiumTypes = PremiumTypes__DARKLUA_TYPE_S
export type GuildScheduledEventObject = GuildScheduledEventObject__DARKLUA_TYPE_bt
export type MutableGuildFeatures = MutableGuildFeatures__DARKLUA_TYPE_3
export type GetChannelInvitesResponse = GetChannelInvitesResponse__DARKLUA_TYPE_eB
export type BulkOverwriteGlobalApplicationCommandsRequest = BulkOverwriteGlobalApplicationCommandsRequest__DARKLUA_TYPE_dR
export type GetReactionsResponse = GetReactionsResponse__DARKLUA_TYPE_eu
export type GetGuildWidgetResponse = GetGuildWidgetResponse__DARKLUA_TYPE_fD
export type GetApplicationRoleConnectionMetadataRecordsResponse =
	GetApplicationRoleConnectionMetadataRecordsResponse__DARKLUA_TYPE_ec
export type EditFollowupMessageResponse = EditFollowupMessageResponse__DARKLUA_TYPE_gM
export type JoinThreadResponse = JoinThreadResponse__DARKLUA_TYPE_eO
export type EntitlementType = EntitlementType__DARKLUA_TYPE_O
export type ApplicationCommandOptionObject = ApplicationCommandOptionObject__DARKLUA_TYPE_b7
export type CreateGuildBanRequest = CreateGuildBanRequest__DARKLUA_TYPE_dh
export type GetGuildRoleResponse = GetGuildRoleResponse__DARKLUA_TYPE_fp
export type WebhookType = WebhookType__DARKLUA_TYPE_b
export type RemoveGuildMemberRoleResponse = RemoveGuildMemberRoleResponse__DARKLUA_TYPE_fh
export type GetGuildBanResponse = GetGuildBanResponse__DARKLUA_TYPE_fk
export type CreateGuildBanResponse = CreateGuildBanResponse__DARKLUA_TYPE_fl
export type ResumePayload = ResumePayload__DARKLUA_TYPE_gV
export type GetGuildInvitesResponse = GetGuildInvitesResponse__DARKLUA_TYPE_fy
export type ApplicationCommandPermissionType = ApplicationCommandPermissionType__DARKLUA_TYPE_9
export type CreateStageInstanceRequest = CreateStageInstanceRequest__DARKLUA_TYPE_dx
export type GetChannelMessagesResponse = GetChannelMessagesResponse__DARKLUA_TYPE_en
export type GroupDMAddRecipientResponse = GroupDMAddRecipientResponse__DARKLUA_TYPE_eJ
export type ListActiveGuildThreadsResponse = ListActiveGuildThreadsResponse__DARKLUA_TYPE_e9
export type GetGuildWidgetImageResponse = GetGuildWidgetImageResponse__DARKLUA_TYPE_fF
export type PromptOptionObject = PromptOptionObject__DARKLUA_TYPE_cn
export type GuildApplicationCommandPermissionObject = GuildApplicationCommandPermissionObject__DARKLUA_TYPE_ba
export type FollowAnnouncementChannelRequest = FollowAnnouncementChannelRequest__DARKLUA_TYPE_c3
export type MFALevel = MFALevel__DARKLUA_TYPE_C
export type NitroType = NitroType__DARKLUA_TYPE_a
export type GuildPreviewObject = GuildPreviewObject__DARKLUA_TYPE_ci
export type StartThreadFromMessageResponse = StartThreadFromMessageResponse__DARKLUA_TYPE_eL
export type GetGuildOnboardingResponse = GetGuildOnboardingResponse__DARKLUA_TYPE_fI
export type EditMessageResponse = EditMessageResponse__DARKLUA_TYPE_ex
export type GetGuildScheduledEventUsersResponse = GetGuildScheduledEventUsersResponse__DARKLUA_TYPE_fR
export type ApplicationObject = ApplicationObject__DARKLUA_TYPE_a9
export type PresenceUpdatePayload = PresenceUpdatePayload__DARKLUA_TYPE_hT
export type MembershipState = MembershipState__DARKLUA_TYPE_cJ
export type EditGuildApplicationCommandResponse = EditGuildApplicationCommandResponse__DARKLUA_TYPE_d4
export type CreateDMRequest = CreateDMRequest__DARKLUA_TYPE_dC
export type GetCurrentUserVoiceStateResponse = GetCurrentUserVoiceStateResponse__DARKLUA_TYPE_dU
export type EmojiObject = EmojiObject__DARKLUA_TYPE_a3
export type GetAnswerVotersResponse = GetAnswerVotersResponse__DARKLUA_TYPE_f0
export type EndPollResponse = EndPollResponse__DARKLUA_TYPE_f1
export type ModifyGuildChannelPositionsRequest = ModifyGuildChannelPositionsRequest__DARKLUA_TYPE_dd
export type ClientStatusObject = ClientStatusObject__DARKLUA_TYPE_bp
export type GetStageInstanceResponse = GetStageInstanceResponse__DARKLUA_TYPE_f3
export type AutmoderationActionMetadataObject = AutmoderationActionMetadataObject__DARKLUA_TYPE_bd
export type GetGlobalApplicationCommandsResponse = GetGlobalApplicationCommandsResponse__DARKLUA_TYPE_dW
export type LeaveGuildResponse = LeaveGuildResponse__DARKLUA_TYPE_gi
export type GetStickerResponse = GetStickerResponse__DARKLUA_TYPE_f6
export type EntitlementObject = EntitlementObject__DARKLUA_TYPE_bn
export type ListGuildStickersResponse = ListGuildStickersResponse__DARKLUA_TYPE_f8
export type CreateGuildStickerResponse = CreateGuildStickerResponse__DARKLUA_TYPE_ga
export type InteractionObject = InteractionObject__DARKLUA_TYPE_b4
export type ButtonComponentObject = ButtonComponentObject__DARKLUA_TYPE_bP
export type DeleteGuildStickerResponse = DeleteGuildStickerResponse__DARKLUA_TYPE_gc
export type PollAnswerCountObject = PollAnswerCountObject__DARKLUA_TYPE_bX
export type CreateGuildApplicationCommandRequest = CreateGuildApplicationCommandRequest__DARKLUA_TYPE_dP
export type ModifyCurrentUserResponse = ModifyCurrentUserResponse__DARKLUA_TYPE_gf
export type MessageReferenceType = MessageReferenceType__DARKLUA_TYPE_i
export type DeleteGuildEmojiResponse = DeleteGuildEmojiResponse__DARKLUA_TYPE_e0
export type PollLayoutType = PollLayoutType__DARKLUA_TYPE_e
export type GetCurrentUserApplicationRoleConnectionResponse =
	GetCurrentUserApplicationRoleConnectionResponse__DARKLUA_TYPE_gm
export type GetApplicationCommandPermissionsResponse = GetApplicationCommandPermissionsResponse__DARKLUA_TYPE_d8
export type SelectDefaultValueType = SelectDefaultValueType__DARKLUA_TYPE_k
export type SelectOptionObject = SelectOptionObject__DARKLUA_TYPE_bM
export type IntegrationUpdatePayload = IntegrationUpdatePayload__DARKLUA_TYPE_hG
export type MediaSortOrder = MediaSortOrder__DARKLUA_TYPE_cD
export type CreateGlobalApplicationCommandResponse = CreateGlobalApplicationCommandResponse__DARKLUA_TYPE_dX
export type GuildScheduledEventEntityType = GuildScheduledEventEntityType__DARKLUA_TYPE_ao
export type EditCurrentApplicationRequest = EditCurrentApplicationRequest__DARKLUA_TYPE_cY
export type CreateWebhookResponse = CreateWebhookResponse__DARKLUA_TYPE_gp
export type FollowAnnouncementChannelResponse = FollowAnnouncementChannelResponse__DARKLUA_TYPE_eE
export type GetGlobalApplicationCommandResponse = GetGlobalApplicationCommandResponse__DARKLUA_TYPE_dY
export type PollAnswerObject = PollAnswerObject__DARKLUA_TYPE_bW
export type ModifyGuildWidgetRequest = ModifyGuildWidgetRequest__DARKLUA_TYPE_dM
export type CreateGuildApplicationCommandResponse = CreateGuildApplicationCommandResponse__DARKLUA_TYPE_d2
export type ConnectionObjectServices = ConnectionObjectServices__DARKLUA_TYPE_aI
export type ModifyWebhookResponse = ModifyWebhookResponse__DARKLUA_TYPE_gu
export type DeleteStageInstanceResponse = DeleteStageInstanceResponse__DARKLUA_TYPE_f5
export type TextInputComponentObject = TextInputComponentObject__DARKLUA_TYPE_bR
export type UpdateCurrentUserApplicationRoleConnectionResponse =
	UpdateCurrentUserApplicationRoleConnectionResponse__DARKLUA_TYPE_gn
export type ExecuteSlackCompatibleWebhookResponse = ExecuteSlackCompatibleWebhookResponse__DARKLUA_TYPE_gz
export type GetGatewayResponse = GetGatewayResponse__DARKLUA_TYPE_gE
export type ApplicationIntegrationType = ApplicationIntegrationType__DARKLUA_TYPE_8
export type InstallParamsObject = InstallParamsObject__DARKLUA_TYPE_a8
export type AddGuildMemberResponse = AddGuildMemberResponse__DARKLUA_TYPE_fd
export type DeleteOriginalInteractionResponse = DeleteOriginalInteractionResponse__DARKLUA_TYPE_gJ
export type ApplicationCommandInteractionDataOptionObject = ApplicationCommandInteractionDataOptionObject__DARKLUA_TYPE_b2
export type GuildScheduledEventStatus = GuildScheduledEventStatus__DARKLUA_TYPE_an
export type CreateFollowupMessageResponse = CreateFollowupMessageResponse__DARKLUA_TYPE_gK
export type ModifyCurrentMemberResponse = ModifyCurrentMemberResponse__DARKLUA_TYPE_ff
export type OnboardingPromptObject = OnboardingPromptObject__DARKLUA_TYPE_co
export type Intent = Intent__DARKLUA_TYPE_gP
export type CreateGuildEmojiResponse = CreateGuildEmojiResponse__DARKLUA_TYPE_eZ
export type ReceiveEvent = ReceiveEvent__DARKLUA_TYPE_gR
export type SendEvent = SendEvent__DARKLUA_TYPE_gS
export type IdentifyPayload = IdentifyPayload__DARKLUA_TYPE_gU
export type TriggerTypingIndicatorResponse = TriggerTypingIndicatorResponse__DARKLUA_TYPE_eF
export type MessageInteractionObject = MessageInteractionObject__DARKLUA_TYPE_bL
export type ModifyCurrentUserRequest = ModifyCurrentUserRequest__DARKLUA_TYPE_dB
export type SessionStartLimitObject = SessionStartLimitObject__DARKLUA_TYPE_cw
export type HeartbeatPayload = HeartbeatPayload__DARKLUA_TYPE_gW
export type CreateGroupDMRequest = CreateGroupDMRequest__DARKLUA_TYPE_dD
export type DeleteGuildResponse = DeleteGuildResponse__DARKLUA_TYPE_e5
export type GuildOnboardingObject = GuildOnboardingObject__DARKLUA_TYPE_cp
export type ReconnectPayload = ReconnectPayload__DARKLUA_TYPE_g2
export type EmbedObject = EmbedObject__DARKLUA_TYPE_bF
export type DeleteMessageResponse = DeleteMessageResponse__DARKLUA_TYPE_ey
export type SearchGuildMembersResponse = SearchGuildMembersResponse__DARKLUA_TYPE_fc
export type CreateChannelPayload = CreateChannelPayload__DARKLUA_TYPE_g8
export type SelectMenuType = SelectMenuType__DARKLUA_TYPE_cH
export type ActivityTimestampObject = ActivityTimestampObject__DARKLUA_TYPE_aO
export type DeleteChannelPayload = DeleteChannelPayload__DARKLUA_TYPE_ha
export type ChannelPinsUpdatePayload = ChannelPinsUpdatePayload__DARKLUA_TYPE_hb
export type ModifyGuildChannelPositionsResponse = ModifyGuildChannelPositionsResponse__DARKLUA_TYPE_e8
export type OverwriteObject = OverwriteObject__DARKLUA_TYPE_bg
export type VoiceRegionObject = VoiceRegionObject__DARKLUA_TYPE_ck
export type ActivityAssetsObject = ActivityAssetsObject__DARKLUA_TYPE_aR
export type DeleteThreadPayload = DeleteThreadPayload__DARKLUA_TYPE_he
export type InteractionDataObject = InteractionDataObject__DARKLUA_TYPE_b3
export type ThreadListSyncPayload = ThreadListSyncPayload__DARKLUA_TYPE_hf
export type RemoveGuildBanResponse = RemoveGuildBanResponse__DARKLUA_TYPE_fm
export type EntitlementCreatePayload = EntitlementCreatePayload__DARKLUA_TYPE_hi
export type ApplicationCommandType = ApplicationCommandType__DARKLUA_TYPE_r
export type AuditLogEvent = AuditLogEvent__DARKLUA_TYPE_N
export type EditApplicationCommandPermissionsResponse = EditApplicationCommandPermissionsResponse__DARKLUA_TYPE_d9
export type GuildScheduledEventUserObject = GuildScheduledEventUserObject__DARKLUA_TYPE_cq
export type DeleteWebhookResponse = DeleteWebhookResponse__DARKLUA_TYPE_gw
export type ListVoiceRegionsResponse = ListVoiceRegionsResponse__DARKLUA_TYPE_go
export type GuildCreatePayload = GuildCreatePayload__DARKLUA_TYPE_hl
export type GuildNSFWLevel = GuildNSFWLevel__DARKLUA_TYPE__
export type GuildDeletePayload = GuildDeletePayload__DARKLUA_TYPE_hn
export type GuildBanAddPayload = GuildBanAddPayload__DARKLUA_TYPE_ho
export type Opcode = Opcode__DARKLUA_TYPE_gQ
export type ListPublicArchivedThreadsResponse = ListPublicArchivedThreadsResponse__DARKLUA_TYPE_eU
export type GuildMemberAddPayload = GuildMemberAddPayload__DARKLUA_TYPE_ht
export type DeleteUserReactionResponse = DeleteUserReactionResponse__DARKLUA_TYPE_et
export type IntegrationExpireBehaviour = IntegrationExpireBehaviour__DARKLUA_TYPE_J
export type GuildMemberRemovePayload = GuildMemberRemovePayload__DARKLUA_TYPE_hu
export type ChannelFlags = ChannelFlags__DARKLUA_TYPE_ag
export type MessageCallObject = MessageCallObject__DARKLUA_TYPE_b_
export type ActionRowComponentObject = ActionRowComponentObject__DARKLUA_TYPE_bO
export type EditGlobalApplicationCommandResponse = EditGlobalApplicationCommandResponse__DARKLUA_TYPE_dZ
export type GetGuildAuditLogResponse = GetGuildAuditLogResponse__DARKLUA_TYPE_ee
export type IntegrationObject = IntegrationObject__DARKLUA_TYPE_bv
export type GuildFeature = GuildFeature__DARKLUA_TYPE_2
export type GroupDMAddRecipientRequest = GroupDMAddRecipientRequest__DARKLUA_TYPE_c4
export type GetInviteResponse = GetInviteResponse__DARKLUA_TYPE_fZ
export type OverwriteType = OverwriteType__DARKLUA_TYPE_M
export type CreateGuildStickerRequest = CreateGuildStickerRequest__DARKLUA_TYPE_dz
export type GetGuildVanityUrlResponse = GetGuildVanityUrlResponse__DARKLUA_TYPE_fE
export type GuildScheduledEventDeletePayload = GuildScheduledEventDeletePayload__DARKLUA_TYPE_hC
export type GuildScheduledEventUserAddPayload = GuildScheduledEventUserAddPayload__DARKLUA_TYPE_hD
export type GetGatewayBotResponse = GetGatewayBotResponse__DARKLUA_TYPE_gF
export type CreateGuildFromGuildTemplateRequest = CreateGuildFromGuildTemplateRequest__DARKLUA_TYPE_du
export type IntegrationCreatePayload = IntegrationCreatePayload__DARKLUA_TYPE_hF
export type EmbedProviderObject = EmbedProviderObject__DARKLUA_TYPE_bA
export type EditGlobalApplicationCommandRequest = EditGlobalApplicationCommandRequest__DARKLUA_TYPE_dO
export type InvalidSessionPayload = InvalidSessionPayload__DARKLUA_TYPE_g3
export type InviteCreatePayload = InviteCreatePayload__DARKLUA_TYPE_hJ
export type AutomoderationActionType = AutomoderationActionType__DARKLUA_TYPE_ad
export type InviteDeletePayload = InviteDeletePayload__DARKLUA_TYPE_hK
export type CrosspostMessageResponse = CrosspostMessageResponse__DARKLUA_TYPE_eq
export type ModifyCurrentUserVoiceStateResponse = ModifyCurrentUserVoiceStateResponse__DARKLUA_TYPE_fK
export type MessageUpdatePayload = MessageUpdatePayload__DARKLUA_TYPE_hM
export type BulkDeleteMessagesRequest = BulkDeleteMessagesRequest__DARKLUA_TYPE_c2
export type CreateDMResponse = CreateDMResponse__DARKLUA_TYPE_gj
export type ModifyChannelRequest = ModifyChannelRequest__DARKLUA_TYPE_cZ
export type LeaveThreadResponse = LeaveThreadResponse__DARKLUA_TYPE_eQ
export type MessageDeletePayload = MessageDeletePayload__DARKLUA_TYPE_hN
export type GetUserVoiceStateResponse = GetUserVoiceStateResponse__DARKLUA_TYPE_dV
export type MessagePollVoteAdd = MessagePollVoteAdd__DARKLUA_TYPE_h1
export type EventTypes = EventTypes__DARKLUA_TYPE_u
export type MessageReactionRemoveAllPayload = MessageReactionRemoveAllPayload__DARKLUA_TYPE_hR
export type ChannelMentionObject = ChannelMentionObject__DARKLUA_TYPE_bw
export type ModifyUserVoiceStateResponse = ModifyUserVoiceStateResponse__DARKLUA_TYPE_fL
export type CreateGuildScheduledEventRequest = CreateGuildScheduledEventRequest__DARKLUA_TYPE_ds
export type Status = Status__DARKLUA_TYPE_cO
export type StageInstanceCreate = StageInstanceCreate__DARKLUA_TYPE_hU
export type StageInstanceUpdate = StageInstanceUpdate__DARKLUA_TYPE_hV
export type TypingStartPayload = TypingStartPayload__DARKLUA_TYPE_hX
export type VoiceStateUpdatePayload = VoiceStateUpdatePayload__DARKLUA_TYPE_hZ
export type VoiceServerUpdatePayload = VoiceServerUpdatePayload__DARKLUA_TYPE_h_
export type WebhooksUpdatePayload = WebhooksUpdatePayload__DARKLUA_TYPE_h0
export type MessageReactionRemovePayload = MessageReactionRemovePayload__DARKLUA_TYPE_hQ
export type Endpoint = Endpoint__DARKLUA_TYPE_cP
export type MessagePollVoteRemove = MessagePollVoteRemove__DARKLUA_TYPE_h2
export type CreateInteractionResponse = CreateInteractionResponse__DARKLUA_TYPE_gG
export type IntegrationApplicationObject = IntegrationApplicationObject__DARKLUA_TYPE_ct
export type GetFollowupMessageResponse = GetFollowupMessageResponse__DARKLUA_TYPE_gL
export type UnpinMessageResponse = UnpinMessageResponse__DARKLUA_TYPE_eI
export type ThreadMembersUpdatePayload = ThreadMembersUpdatePayload__DARKLUA_TYPE_hh
export type ApplicationCommandPermissionsUpdatePayload = ApplicationCommandPermissionsUpdatePayload__DARKLUA_TYPE_g5
export type ResumedPayload = ResumedPayload__DARKLUA_TYPE_g1
export type AllowedMentionTypes = AllowedMentionTypes__DARKLUA_TYPE_aJ
export type EmbedAuthorObject = EmbedAuthorObject__DARKLUA_TYPE_bB
export type ModifyGuildOnboardingRequest = ModifyGuildOnboardingRequest__DARKLUA_TYPE_dp
export type GetCurrentUserGuildMemberResponse = GetCurrentUserGuildMemberResponse__DARKLUA_TYPE_gh
export type EditCurrentApplicationResponse = EditCurrentApplicationResponse__DARKLUA_TYPE_eb
export type ExecuteGithubCompatibleWebhookRequest = ExecuteGithubCompatibleWebhookRequest__DARKLUA_TYPE_dJ
export type ExplicitContentFilterLevel = ExplicitContentFilterLevel__DARKLUA_TYPE_z
export type GetGuildApplicationCommandResponse = GetGuildApplicationCommandResponse__DARKLUA_TYPE_d3
export type GuildScheduledEventCreatePayload = GuildScheduledEventCreatePayload__DARKLUA_TYPE_hA
export type GetOriginalInteractionResponse = GetOriginalInteractionResponse__DARKLUA_TYPE_gH
export type InteractionCallbackModalObject = InteractionCallbackModalObject__DARKLUA_TYPE_cA
export type UpdateVoiceStatePayload = UpdateVoiceStatePayload__DARKLUA_TYPE_gY
export type InviteMetadataObject = InviteMetadataObject__DARKLUA_TYPE_cg
export type UpdatePresencePayload = UpdatePresencePayload__DARKLUA_TYPE_gZ
export type ThreadMemberObject = ThreadMemberObject__DARKLUA_TYPE_bj
export type EditMessageRequest = EditMessageRequest__DARKLUA_TYPE_c0
export type GuildRoleTagObject = GuildRoleTagObject__DARKLUA_TYPE_a1
export type PrivacyLevel = PrivacyLevel__DARKLUA_TYPE_am
export type BulkGuildBanResponse = BulkGuildBanResponse__DARKLUA_TYPE_fn
export type ForumTagObject = ForumTagObject__DARKLUA_TYPE_bk
export type ModifyGuildTemplateResponse = ModifyGuildTemplateResponse__DARKLUA_TYPE_fX
export type ModifyGuildScheduledEventResponse = ModifyGuildScheduledEventResponse__DARKLUA_TYPE_fP
export type DefaultReactionObject = DefaultReactionObject__DARKLUA_TYPE_bl
export type AddGuildMemberRequest = AddGuildMemberRequest__DARKLUA_TYPE_de
export type ModifyGuildRolePositionsResponse = ModifyGuildRolePositionsResponse__DARKLUA_TYPE_fr
export type AuditLogChangeObject = AuditLogChangeObject__DARKLUA_TYPE_b9
export type IntegrationExpireBehaviours = IntegrationExpireBehaviours__DARKLUA_TYPE_ap
export type InteractionResponseObject = InteractionResponseObject__DARKLUA_TYPE_cB
export type ResolvedDataStructure = ResolvedDataStructure__DARKLUA_TYPE_b1
export type GuildMemberObject = GuildMemberObject__DARKLUA_TYPE_bi
export type TextInputStyles = TextInputStyles__DARKLUA_TYPE_av
export type ModifyGuildMemberRequest = ModifyGuildMemberRequest__DARKLUA_TYPE_df
export type OnboardingPromptType = OnboardingPromptType__DARKLUA_TYPE_K
export type ApplicationCommandPermissionsCreatePayload = ApplicationCommandPermissionsCreatePayload__DARKLUA_TYPE_g4
export type CreateChannelInviteResponse = CreateChannelInviteResponse__DARKLUA_TYPE_eC
export type MessageReactionAddPayload = MessageReactionAddPayload__DARKLUA_TYPE_hP
export type MessageDeleteBulkPayload = MessageDeleteBulkPayload__DARKLUA_TYPE_hO
export type ModifyWebhookWithTokenResponse = ModifyWebhookWithTokenResponse__DARKLUA_TYPE_gv
export type ModifyGuildWelcomeScreenRequest = ModifyGuildWelcomeScreenRequest__DARKLUA_TYPE_do
export type CreateGuildChannelResponse = CreateGuildChannelResponse__DARKLUA_TYPE_e7
export type DefaultMessageNotification = DefaultMessageNotification__DARKLUA_TYPE_y
export type StartThreadFromMessageRequest = StartThreadFromMessageRequest__DARKLUA_TYPE_c5
export type ModifyGuildStickerRequest = ModifyGuildStickerRequest__DARKLUA_TYPE_dA
export type ApplicationRoleConnectionMetadataObject = ApplicationRoleConnectionMetadataObject__DARKLUA_TYPE_b5
export type BanObject = BanObject__DARKLUA_TYPE_cj
export type PromptTypes = PromptTypes__DARKLUA_TYPE_aH
export type PinMessageResponse = PinMessageResponse__DARKLUA_TYPE_eH
export type GetGuildTemplateResponse = GetGuildTemplateResponse__DARKLUA_TYPE_fS
export type GetChannelResponse = GetChannelResponse__DARKLUA_TYPE_ek
export type GuildScheduledEventEntityMetadata = GuildScheduledEventEntityMetadata__DARKLUA_TYPE_bs
export type EntitlementDeletePayload = EntitlementDeletePayload__DARKLUA_TYPE_hk
export type ActivityEmojiObject = ActivityEmojiObject__DARKLUA_TYPE_aP
export type IntegrationDeletePayload = IntegrationDeletePayload__DARKLUA_TYPE_hH
export type ConnectionVisibilityTypes = ConnectionVisibilityTypes__DARKLUA_TYPE_aK
export type GuildScheduledEventUserRemovePayload = GuildScheduledEventUserRemovePayload__DARKLUA_TYPE_hE
export type StartThreadInForumOrMediaChannelRequest = StartThreadInForumOrMediaChannelRequest__DARKLUA_TYPE_c7
export type PremiumTier = PremiumTier__DARKLUA_TYPE_B
export type GuildRoleUpdatePayload = GuildRoleUpdatePayload__DARKLUA_TYPE_hy
export type ActivityType = ActivityType__DARKLUA_TYPE_cN
export type GetGuildWelcomeScreenResponse = GetGuildWelcomeScreenResponse__DARKLUA_TYPE_fG
export type CreateThreadPayload = CreateThreadPayload__DARKLUA_TYPE_hc
export type GuildVanityUrl = GuildVanityUrl__DARKLUA_TYPE_cf
export type EditOriginalInteractionRequest = EditOriginalInteractionRequest__DARKLUA_TYPE_cT
export type MessageType = MessageType__DARKLUA_TYPE_g
export type EmbedVideoObject = EmbedVideoObject__DARKLUA_TYPE_bE
export type GuildBanRemovePayload = GuildBanRemovePayload__DARKLUA_TYPE_hp
export type CreateGuildTemplateRequest = CreateGuildTemplateRequest__DARKLUA_TYPE_dv
export type GuildTemplateObject = GuildTemplateObject__DARKLUA_TYPE_cr
export type ReactionCountDetailsObject = ReactionCountDetailsObject__DARKLUA_TYPE_bG
export type ExecuteWebhookResponse = ExecuteWebhookResponse__DARKLUA_TYPE_gy
export type RemoveGuildMemberResponse = RemoveGuildMemberResponse__DARKLUA_TYPE_fi
export type GetAutoModerationRuleResponse = GetAutoModerationRuleResponse__DARKLUA_TYPE_eg
export type CreateAutoModerationRuleRequest = CreateAutoModerationRuleRequest__DARKLUA_TYPE_cW
export type ThreadMemberUpdatePayload = ThreadMemberUpdatePayload__DARKLUA_TYPE_hg
export type StartThreadWithoutMessageRequest = StartThreadWithoutMessageRequest__DARKLUA_TYPE_c6
export type SystemChannelFlags = SystemChannelFlags__DARKLUA_TYPE_1
export type SortOrderType = SortOrderType__DARKLUA_TYPE_ah
export type AuditLogEntryObject = AuditLogEntryObject__DARKLUA_TYPE_cb
export type CloseCode = CloseCode__DARKLUA_TYPE_gO
export type GuildScheduledEventUpdatePayload = GuildScheduledEventUpdatePayload__DARKLUA_TYPE_hB
export type AutomoderationRuleEventType = AutomoderationRuleEventType__DARKLUA_TYPE_aa
export type GetGuildPreviewResponse = GetGuildPreviewResponse__DARKLUA_TYPE_e3
export type ListScheduledEventsForGuildResponse = ListScheduledEventsForGuildResponse__DARKLUA_TYPE_fM
export type DeleteInviteResponse = DeleteInviteResponse__DARKLUA_TYPE_f_
export type MessageCreatePayload = MessageCreatePayload__DARKLUA_TYPE_hL
export type PollMediaObject = PollMediaObject__DARKLUA_TYPE_bV
export type UserUpdatePayload = UserUpdatePayload__DARKLUA_TYPE_hY
export type GetGuildBansResponse = GetGuildBansResponse__DARKLUA_TYPE_fj
export type IdentifyPropertiesObject = IdentifyPropertiesObject__DARKLUA_TYPE_aW
export type GetChannelWebhooksResponse = GetChannelWebhooksResponse__DARKLUA_TYPE_gq
export type ThreadMetadataObject = ThreadMetadataObject__DARKLUA_TYPE_bh
export type InteractionContextType = InteractionContextType__DARKLUA_TYPE_s
export type CreateMessageRequest = CreateMessageRequest__DARKLUA_TYPE_c_
export type ModifyGuildWelcomeScreenResponse = ModifyGuildWelcomeScreenResponse__DARKLUA_TYPE_fH
export type InviteObject = InviteObject__DARKLUA_TYPE_ce
export type GuildStickersUpdatePayload = GuildStickersUpdatePayload__DARKLUA_TYPE_hr
export type MessageActivityType = MessageActivityType__DARKLUA_TYPE_at
export type CreateGroupDMResponse = CreateGroupDMResponse__DARKLUA_TYPE_gk
export type GetGuildResponse = GetGuildResponse__DARKLUA_TYPE_e2
export type InviteTargetTypes = InviteTargetTypes__DARKLUA_TYPE_aA
export type CreateGuildFromGuildTemplateResponse = CreateGuildFromGuildTemplateResponse__DARKLUA_TYPE_fT
export type ExecuteWebhookRequest = ExecuteWebhookRequest__DARKLUA_TYPE_dH
export type WelcomeScreenObject = WelcomeScreenObject__DARKLUA_TYPE_a5
export type CreateGlobalApplicationCommandRequest = CreateGlobalApplicationCommandRequest__DARKLUA_TYPE_dN
export type SelectDefaultValueObject = SelectDefaultValueObject__DARKLUA_TYPE_bN
export type InteractionType = InteractionType__DARKLUA_TYPE_o
export type CreateChannelInviteRequest = CreateChannelInviteRequest__DARKLUA_TYPE_c1
export type GetGuildMemberResponse = GetGuildMemberResponse__DARKLUA_TYPE_fa
export type GetUserResponse = GetUserResponse__DARKLUA_TYPE_ge
export type ApplicationCommandPermissionsDeletePayload = ApplicationCommandPermissionsDeletePayload__DARKLUA_TYPE_g6
export type GetGuildStickerResponse = GetGuildStickerResponse__DARKLUA_TYPE_f9
export type SchedledEventEntityType = SchedledEventEntityType__DARKLUA_TYPE_G
export type ModifyGuildMFALevelResponse = ModifyGuildMFALevelResponse__DARKLUA_TYPE_ft
export type OAuth2Scopes = OAuth2Scopes__DARKLUA_TYPE_6
export type GetGuildPruneCountResponse = GetGuildPruneCountResponse__DARKLUA_TYPE_fv
export type IntegrationTypesConfig = IntegrationTypesConfig__DARKLUA_TYPE_cL
export type GetWebhookMessageResponse = GetWebhookMessageResponse__DARKLUA_TYPE_gB
export type GetChannelMessageResponse = GetChannelMessageResponse__DARKLUA_TYPE_eo
export type ListPrivateArchivedThreadsResponse = ListPrivateArchivedThreadsResponse__DARKLUA_TYPE_eV
export type CreateGuildRoleRequest = CreateGuildRoleRequest__DARKLUA_TYPE_dj
export type BulkGuildBanRequest = BulkGuildBanRequest__DARKLUA_TYPE_di
export type StageInstanceDelete = StageInstanceDelete__DARKLUA_TYPE_hW
export type EditApplicationCommandPermissionsRequest = EditApplicationCommandPermissionsRequest__DARKLUA_TYPE_dT
export type Permissions = Permissions__DARKLUA_TYPE_f
export type GetCurrentUserResponse = GetCurrentUserResponse__DARKLUA_TYPE_gd
export type ModifyChannelResponse = ModifyChannelResponse__DARKLUA_TYPE_el
export type EmbedFooterObject = EmbedFooterObject__DARKLUA_TYPE_by
export type MessageAcitvityType = MessageAcitvityType__DARKLUA_TYPE_h
export type PresenceUpdateObject = PresenceUpdateObject__DARKLUA_TYPE_bq
export type ChannelObject = ChannelObject__DARKLUA_TYPE_bm
export type TriggerTypes = TriggerTypes__DARKLUA_TYPE_w
export type InviteTargetType = InviteTargetType__DARKLUA_TYPE_E
export type CreateStageInstanceResponse = CreateStageInstanceResponse__DARKLUA_TYPE_f2
export type CreateMessageResponse = CreateMessageResponse__DARKLUA_TYPE_ep
export type CreateReactionResponse = CreateReactionResponse__DARKLUA_TYPE_er
export type VoiceStateObject = VoiceStateObject__DARKLUA_TYPE_bo
export type ForumAndMediaThreadMessageObject = ForumAndMediaThreadMessageObject__DARKLUA_TYPE_cy
export type ComponentTypes = ComponentTypes__DARKLUA_TYPE_p
export type ModifyGuildStickerResponse = ModifyGuildStickerResponse__DARKLUA_TYPE_gb
export type StickerObject = StickerObject__DARKLUA_TYPE_a6
export type EditGuildApplicationCommandRequest = EditGuildApplicationCommandRequest__DARKLUA_TYPE_dQ
export type GuildWidgetSettingsObject = GuildWidgetSettingsObject__DARKLUA_TYPE_cl
export type InteractionCallbackType = InteractionCallbackType__DARKLUA_TYPE_aN
export type ModifyCurrentMemberRequest = ModifyCurrentMemberRequest__DARKLUA_TYPE_dg
export type ModifyGuildOnboardingResponse = ModifyGuildOnboardingResponse__DARKLUA_TYPE_fJ
export type Response<DATA> = Response__DARKLUA_TYPE_cQ<DATA>
export type ModifyGuildRoleResponse = ModifyGuildRoleResponse__DARKLUA_TYPE_fs
export type ActivitySecretsObject = ActivitySecretsObject__DARKLUA_TYPE_aS
export type AutomoderationRuleKeywordPresetType = AutomoderationRuleKeywordPresetType__DARKLUA_TYPE_ac
export type PollObject = PollObject__DARKLUA_TYPE_bZ
export type CreateGuildTemplateResponse = CreateGuildTemplateResponse__DARKLUA_TYPE_fV
export type RequestGuildMembersPayload = RequestGuildMembersPayload__DARKLUA_TYPE_gX
export type GetGuildRolesResponse = GetGuildRolesResponse__DARKLUA_TYPE_fo
export type ModifyGuildMFALevelRequest = ModifyGuildMFALevelRequest__DARKLUA_TYPE_dm
export type AutomoderationRuleTriggerMetadataObject = AutomoderationRuleTriggerMetadataObject__DARKLUA_TYPE_bc
export type OverwriteObjectType = OverwriteObjectType__DARKLUA_TYPE_aj
export type ForumSortOrder = ForumSortOrder__DARKLUA_TYPE_cE
export type RoleSubscriptionDataObject = RoleSubscriptionDataObject__DARKLUA_TYPE_bU
export type AutomoderationRuleTriggerType = AutomoderationRuleTriggerType__DARKLUA_TYPE_ab
export type InteractionCallbackAutocompleteObject = InteractionCallbackAutocompleteObject__DARKLUA_TYPE_cz
export type EmbedImageObject = EmbedImageObject__DARKLUA_TYPE_bz
export type DeleteAutoModerationRuleResponse = DeleteAutoModerationRuleResponse__DARKLUA_TYPE_ej
export type GetGuildWebhooksResponse = GetGuildWebhooksResponse__DARKLUA_TYPE_gr
export type GuildMembersChunkPayload = GuildMembersChunkPayload__DARKLUA_TYPE_hw
export type ApplicationCommandPermissionsExecutionPayload = ApplicationCommandPermissionsExecutionPayload__DARKLUA_TYPE_g7
export type EntitlementUpdatePayload = EntitlementUpdatePayload__DARKLUA_TYPE_hj
export type ModifyGuildRolePositionsRequest = ModifyGuildRolePositionsRequest__DARKLUA_TYPE_dk
export type ModifyWebhookRequest = ModifyWebhookRequest__DARKLUA_TYPE_dG
export type TeamObject = TeamObject__DARKLUA_TYPE_a0
export type ReactionType = ReactionType__DARKLUA_TYPE_n
export type ChannelType = ChannelType__DARKLUA_TYPE_cC
export type SitckerItemObject = SitckerItemObject__DARKLUA_TYPE_bT
export type VideoQualityMode = VideoQualityMode__DARKLUA_TYPE_cG
export type ReadyPayload = ReadyPayload__DARKLUA_TYPE_g0
export type AddGuildMemberRoleResponse = AddGuildMemberRoleResponse__DARKLUA_TYPE_fg
export type GetGuildWidgetSettingsResponse = GetGuildWidgetSettingsResponse__DARKLUA_TYPE_fB
export type UserObject = UserObject__DARKLUA_TYPE_aY
export type AuditLogObject = AuditLogObject__DARKLUA_TYPE_cd
export type ModifyGuildRequest = ModifyGuildRequest__DARKLUA_TYPE_db
export type IntegrationType = IntegrationType__DARKLUA_TYPE_I
export type ForumLayoutType = ForumLayoutType__DARKLUA_TYPE_ai
export type TeamMemberObject = TeamMemberObject__DARKLUA_TYPE_a_
export type TeamMemberRole = TeamMemberRole__DARKLUA_TYPE_V
export type ApplicationRoleConnectionMetadataType = ApplicationRoleConnectionMetadataType__DARKLUA_TYPE_aC
export type DeleteGuildScheduledEventResponse = DeleteGuildScheduledEventResponse__DARKLUA_TYPE_fQ
export type ScheduledEventPrivacyLevel = ScheduledEventPrivacyLevel__DARKLUA_TYPE_F
export type DeleteGuildIntegrationResponse = DeleteGuildIntegrationResponse__DARKLUA_TYPE_fA
export type IntegrationAccountObject = IntegrationAccountObject__DARKLUA_TYPE_bu
export type GetGuildApplicationCommandPermissionsResponse = GetGuildApplicationCommandPermissionsResponse__DARKLUA_TYPE_d7
export type DeleteGlobalApplicationCommandResponse = DeleteGlobalApplicationCommandResponse__DARKLUA_TYPE_d_
export type EditWebhookMessageResponse = EditWebhookMessageResponse__DARKLUA_TYPE_gC
export type ApplicationCommandOptionChoiceObject = ApplicationCommandOptionChoiceObject__DARKLUA_TYPE_b6
export type DeleteOwnReactionResponse = DeleteOwnReactionResponse__DARKLUA_TYPE_es
export type GetThreadMemberResponse = GetThreadMemberResponse__DARKLUA_TYPE_eS
export type GuildMemberUpdatePayload = GuildMemberUpdatePayload__DARKLUA_TYPE_hv
export type BulkOverwriteGlobalApplicationCommandsResponse =
	BulkOverwriteGlobalApplicationCommandsResponse__DARKLUA_TYPE_d0
export type GroupDMRemoveRecipientResponse = GroupDMRemoveRecipientResponse__DARKLUA_TYPE_eK
export type ModifyGuildResponse = ModifyGuildResponse__DARKLUA_TYPE_e4
export type BeginGuildPruneRequest = BeginGuildPruneRequest__DARKLUA_TYPE_dn
export type ExecuteSlackCompatibleWebhookRequest = ExecuteSlackCompatibleWebhookRequest__DARKLUA_TYPE_dI
export type GetGuildEmojiResponse = GetGuildEmojiResponse__DARKLUA_TYPE_eY
export type GuildObject = GuildObject__DARKLUA_TYPE_a7
export type ModifyGuildScheduledEventRequest = ModifyGuildScheduledEventRequest__DARKLUA_TYPE_dt
export type EmbedThumbnailObject = EmbedThumbnailObject__DARKLUA_TYPE_bD
export type GetGuildTemplatesResponse = GetGuildTemplatesResponse__DARKLUA_TYPE_fU
export type EmbedFieldObject = EmbedFieldObject__DARKLUA_TYPE_bC
export type ApplicationRoleConnectionObject = ApplicationRoleConnectionObject__DARKLUA_TYPE_cv
export type ModifyGuildMemberResponse = ModifyGuildMemberResponse__DARKLUA_TYPE_fe
export type CreateGuildScheduledEventResponse = CreateGuildScheduledEventResponse__DARKLUA_TYPE_fN
export type MessageInteractionMetadatObject = MessageInteractionMetadatObject__DARKLUA_TYPE_bK
export type StageInstanceObject = StageInstanceObject__DARKLUA_TYPE_br
export type CreateWebhookRequest = CreateWebhookRequest__DARKLUA_TYPE_dF
export type GetCurrentUserGuildsResponse = GetCurrentUserGuildsResponse__DARKLUA_TYPE_gg
export type AttachmentObject = AttachmentObject__DARKLUA_TYPE_bx
export type OptionalAuditEntryInfoObject = OptionalAuditEntryInfoObject__DARKLUA_TYPE_ca
export type CreateGuildRequest = CreateGuildRequest__DARKLUA_TYPE_da
export type DeleteCloseChannelResponse = DeleteCloseChannelResponse__DARKLUA_TYPE_em
export type StartThreadWithoutMessageResponse = StartThreadWithoutMessageResponse__DARKLUA_TYPE_eM
export type ModifyGuildEmojiResponse = ModifyGuildEmojiResponse__DARKLUA_TYPE_e_
export type UpdateApplicationRoleConnectionMetadataRecordsResponse =
	UpdateApplicationRoleConnectionMetadataRecordsResponse__DARKLUA_TYPE_ed
export type UpdateChannelPayload = UpdateChannelPayload__DARKLUA_TYPE_g9
export type EditChannelPermissionsRequest = EditChannelPermissionsRequest__DARKLUA_TYPE_dL
export type SelectMenuComponentObject = SelectMenuComponentObject__DARKLUA_TYPE_bQ
export type GuildWidgetObject = GuildWidgetObject__DARKLUA_TYPE_cm
export type ListJoinedPrivateArchivedThreadsResponse = ListJoinedPrivateArchivedThreadsResponse__DARKLUA_TYPE_eW
export type ModifyAutoModerationRuleRequest = ModifyAutoModerationRuleRequest__DARKLUA_TYPE_cX
export type MessageActivityObject = MessageActivityObject__DARKLUA_TYPE_bI
export type MessageObject = MessageObject__DARKLUA_TYPE_b0
export type CreateFollowupMessageRequest = CreateFollowupMessageRequest__DARKLUA_TYPE_cU
export type CreateGuildEmojiRequest = CreateGuildEmojiRequest__DARKLUA_TYPE_c8
export type UnavailableGuildObject = UnavailableGuildObject__DARKLUA_TYPE_aZ
export type ForumLayout = ForumLayout__DARKLUA_TYPE_cF
export type LanguageLocales = LanguageLocales__DARKLUA_TYPE_T
export type AuditLogEventType = AuditLogEventType__DARKLUA_TYPE_aE
export type MessageReferenceObject = MessageReferenceObject__DARKLUA_TYPE_bJ
export type BulkOverwriteGuildApplicationCommandsResponse = BulkOverwriteGuildApplicationCommandsResponse__DARKLUA_TYPE_d6
export type InteractionCreatePayload = InteractionCreatePayload__DARKLUA_TYPE_hI
export type OnboardingMode = OnboardingMode__DARKLUA_TYPE_L
export type RemoveThreadMemberResponse = RemoveThreadMemberResponse__DARKLUA_TYPE_eR
export type AvatarDecorationDataObject = AvatarDecorationDataObject__DARKLUA_TYPE_aX
export type ModifyGuildWidgetResponse = ModifyGuildWidgetResponse__DARKLUA_TYPE_fC
export type HelloPayload = HelloPayload__DARKLUA_TYPE_g_
export type GuildRoleDeletePayload = GuildRoleDeletePayload__DARKLUA_TYPE_hz
export type SyncGuildTemplateResponse = SyncGuildTemplateResponse__DARKLUA_TYPE_fW
export type CreateGuildRoleResponse = CreateGuildRoleResponse__DARKLUA_TYPE_fq
export type AutomoderationActionObject = AutomoderationActionObject__DARKLUA_TYPE_be
export type ListThreadMembersResponse = ListThreadMembersResponse__DARKLUA_TYPE_eT
export type GuildApplicationCommandPermissionsObject = GuildApplicationCommandPermissionsObject__DARKLUA_TYPE_bb
export type VerificationLevel = VerificationLevel__DARKLUA_TYPE_x
export type GetGuildChannelsResponse = GetGuildChannelsResponse__DARKLUA_TYPE_e6
export type KeywordPresetType = KeywordPresetType__DARKLUA_TYPE_v
export type ApplicationCommandOptionType = ApplicationCommandOptionType__DARKLUA_TYPE_q
export type ListGuildMembersResponse = ListGuildMembersResponse__DARKLUA_TYPE_fb
export type ButtonStyle = ButtonStyle__DARKLUA_TYPE_j
export type ModifyStageInstanceRequest = ModifyStageInstanceRequest__DARKLUA_TYPE_dy
export type AbstractChannel = AbstractChannel__DARKLUA_TYPE_cI
export type TextInputStyle = TextInputStyle__DARKLUA_TYPE_l
export type EditWebhookMessageRequest = EditWebhookMessageRequest__DARKLUA_TYPE_dK
export type ListStickerPacksResponse = ListStickerPacksResponse__DARKLUA_TYPE_f7
export type ModifyUserVoiceStateRequest = ModifyUserVoiceStateRequest__DARKLUA_TYPE_dr
export type ModifyGuildRoleRequest = ModifyGuildRoleRequest__DARKLUA_TYPE_dl
export type GetWebhookWithTokenResponse = GetWebhookWithTokenResponse__DARKLUA_TYPE_gt
export type TeamRole = TeamRole__DARKLUA_TYPE_cK
export type ExecuteGitCompatibleWebhookResponse = ExecuteGitCompatibleWebhookResponse__DARKLUA_TYPE_gA
export type GetGuildScheduledEventResponse = GetGuildScheduledEventResponse__DARKLUA_TYPE_fO
export type DeleteChannelPermissionResponse = DeleteChannelPermissionResponse__DARKLUA_TYPE_eD
export type GetGuildVoiceRegionsResponse = GetGuildVoiceRegionsResponse__DARKLUA_TYPE_fx
export type ModifyGuildTemplateRequest = ModifyGuildTemplateRequest__DARKLUA_TYPE_dw
export type StartThreadInForumOrMediaChannelResponse = StartThreadInForumOrMediaChannelResponse__DARKLUA_TYPE_eN
export type ConnectionObject = ConnectionObject__DARKLUA_TYPE_cu
export type UpdateCurrentUserApplicationRoleConnectionRequest =
	UpdateCurrentUserApplicationRoleConnectionRequest__DARKLUA_TYPE_dE
export type DeleteFollowupMessageResponse = DeleteFollowupMessageResponse__DARKLUA_TYPE_gN
export type UpdateThreadPayload = UpdateThreadPayload__DARKLUA_TYPE_hd
export type ModifyAutoModerationRuleResponse = ModifyAutoModerationRuleResponse__DARKLUA_TYPE_ei
export type CreateGuildResponse = CreateGuildResponse__DARKLUA_TYPE_e1
export type InviteType = InviteType__DARKLUA_TYPE_D
export type GuildUpdatePayload = GuildUpdatePayload__DARKLUA_TYPE_hm
export type ModifyStageInstanceResponse = ModifyStageInstanceResponse__DARKLUA_TYPE_f4
export type GuildMemberFlags = GuildMemberFlags__DARKLUA_TYPE_aM
export type DeleteGuildTemplateResponse = DeleteGuildTemplateResponse__DARKLUA_TYPE_fY
export type GuildRoleCreatePayload = GuildRoleCreatePayload__DARKLUA_TYPE_hx
export type Request<DATA> = Request__DARKLUA_TYPE_cR<DATA>
export type AddThreadMemberResponse = AddThreadMemberResponse__DARKLUA_TYPE_eP
export type EditOriginalInteractionResponse = EditOriginalInteractionResponse__DARKLUA_TYPE_gI
export type StickerType = StickerType__DARKLUA_TYPE_c
export type ApplicationCommandObject = ApplicationCommandObject__DARKLUA_TYPE_b8
export type PresenceObject = PresenceObject__DARKLUA_TYPE_aV
export type Payload<DATA> = Payload__DARKLUA_TYPE_gT<DATA>
export type BeginGuildPruneResponse = BeginGuildPruneResponse__DARKLUA_TYPE_fw
export type AllowedMentionObject = AllowedMentionObject__DARKLUA_TYPE_cx
export type FollowedChannelObject = FollowedChannelObject__DARKLUA_TYPE_ch
export type GetPinnedMessagesResponse = GetPinnedMessagesResponse__DARKLUA_TYPE_eG
export type ModifyGuildEmojiRequest = ModifyGuildEmojiRequest__DARKLUA_TYPE_c9
export type ComponentObjects = ComponentObjects__DARKLUA_TYPE_bS
export type EditFollowupMessageRequest = EditFollowupMessageRequest__DARKLUA_TYPE_cV
export type ListGuildEmojisResponse = ListGuildEmojisResponse__DARKLUA_TYPE_eX
export type GuildIntegrationsUpdatePayload = GuildIntegrationsUpdatePayload__DARKLUA_TYPE_hs
export type CreateInteractionRequest = CreateInteractionRequest__DARKLUA_TYPE_cS
export type DeleteWebhookWitHTokenResponse = DeleteWebhookWitHTokenResponse__DARKLUA_TYPE_gx
export type Partial<T> = Partial__DARKLUA_TYPE_Q<T>
export type GetGuildApplicationCommandsResponse = GetGuildApplicationCommandsResponse__DARKLUA_TYPE_d1
export type DeleteGuildRoleResponse = DeleteGuildRoleResponse__DARKLUA_TYPE_fu
export type CreateGuildChannelRequest = CreateGuildChannelRequest__DARKLUA_TYPE_dc
export type ListAutoModerationRulesForGuildResponse = ListAutoModerationRulesForGuildResponse__DARKLUA_TYPE_ef
export type WelcomeScreenChannelObject = WelcomeScreenChannelObject__DARKLUA_TYPE_a4
export type GetCurrentUserConnectionResponse = GetCurrentUserConnectionResponse__DARKLUA_TYPE_gl
export type GetGuildIntegrationsResponse = GetGuildIntegrationsResponse__DARKLUA_TYPE_fz
export type MessageReactionRemoveEmojiPayload = MessageReactionRemoveEmojiPayload__DARKLUA_TYPE_hS
export type InviteTypes = InviteTypes__DARKLUA_TYPE_az
type NitroType__DARKLUA_TYPE_a = "None" | "NitroClassic" | "Nitro" | "NitroBasic"

type WebhookType__DARKLUA_TYPE_b = "Incoming" | "ChannelFollower" | "Application"

type StickerType__DARKLUA_TYPE_c = "Standard" | "Guild"

type StickerFormatType__DARKLUA_TYPE_d = "PNG" | "APNG" | "LOTTIE" | "GIF" | "Unknown"

type PollLayoutType__DARKLUA_TYPE_e = "Default"

type Permissions__DARKLUA_TYPE_f =
	"CreateInstantInvite"
	| "KickMembers"
	| "BanMembers"
	| "Administrator"
	| "ManageChannels"
	| "ManageGuild"
	| "AddReactions"
	| "ViewAuditLog"
	| "PrioritySpeaker"
	| "Stream"
	| "ViewChannel"
	| "SendMessages"
	| "SendTtsMessages"
	| "ManageMessages"
	| "EmbedLinks"
	| "AttachFiles"
	| "ReadMessageHistory"
	| "MentionEveryone"
	| "UseExternalEmojis"
	| "ViewGuildInsights"
	| "Connect"
	| "Speak"
	| "MuteMembers"
	| "DeafenMembers"
	| "MoveMembers"
	| "UseVad"
	| "ChangeNickname"
	| "ManageNicknames"
	| "ManageRoles"
	| "ManageWebhooks"
	| "ManageEmojisAndStickers"
	| "UseApplicationCommands"
	| "RequestToSpeak"
	| "ManageEvents"
	| "ManageThreads"
	| "CreatePublicThreads"
	| "CreatePrivateThreads"
	| "UseExternalStickers"
	| "SendMessagesInThreads"
	| "UseEmbeddedActivities"
	| "ModerateMembers"
	| "ViewCreatorMonetizationAnalytics"
	| "UseSoundboard"
	| "CreateGuildExpressions"
	| "CreateEvents"
	| "UseExternalSounds"
	| "SendVoiceMessages"
	| "SendPolls"
	| "UseExternalApps"

type MessageType__DARKLUA_TYPE_g =
	"Default"
	| "RecipientAdd"
	| "RecipientRemove"
	| "Call"
	| "ChannelNameChange"
	| "ChannelIconChange"
	| "ChannelPinnedMessage"
	| "UserJoin"
	| "GuildBoost"
	| "GuildBoostTier1"
	| "GuildBoostTier2"
	| "GuildBoostTier3"
	| "ChannelFollowAdd"
	| "GuildDiscoveryDisqualified"
	| "GuildDiscoveryRequalified"
	| "GuildDiscoveryGracePeriodInitialWarning"
	| "GuildDiscoveryGracePeriodFinalWarning"
	| "ThreadCreated"
	| "Reply"
	| "ChatInputCommand"
	| "ThreadStarterMessage"
	| "GuildInviteReminder"
	| "ContextMenuCommand"
	| "AutoModerationAction"
	| "RoleSubscriptionPurchase"
	| "InteractionPremiumUpsell"
	| "StageStart"
	| "StageEnd"
	| "StageSpeaker"
	| "StageTopic"
	| "GuildApplicationPremiumSubscription"
	| "GuildIncidentAlertModeEnabled"
	| "GuildIncidentAlertModeDisabled"
	| "GuildIncidentReportRaid"
	| "GuildIncidentReportFalseAlarm"
	| "PurchaseNotification"
	| "PollResult"

type MessageAcitvityType__DARKLUA_TYPE_h = "Join" | "Spectate" | "Listen" | "JoinRequest"

type MessageReferenceType__DARKLUA_TYPE_i = "Default" | "Forward"

type ButtonStyle__DARKLUA_TYPE_j = "Blurple" | "Grey" | "Green" | "Red" | "Grey"

type SelectDefaultValueType__DARKLUA_TYPE_k = "User" | "Role" | "Channel"

type TextInputStyle__DARKLUA_TYPE_l = "Short" | "Paragraph"

type PollLayoutType__DARKLUA_TYPE_m = "Default"

type ReactionType__DARKLUA_TYPE_n = "Normal" | "Burst"

type InteractionType__DARKLUA_TYPE_o =
	"Ping"
	| "ApplicationCommand"
	| "MessageComponent"
	| "ApplicationCommandAutocomplete"
	| "ModalSubmit"

type ComponentTypes__DARKLUA_TYPE_p =
	"ActionRow"
	| "Button"
	| "StringSelect"
	| "TextInput"
	| "UserSelect"
	| "RoleSelect"
	| "MentionableSelect"
	| "ChannelSelect"

type ApplicationCommandOptionType__DARKLUA_TYPE_q =
	"SubCommand"
	| "SubCommandGroup"
	| "String"
	| "Integer"
	| "Boolean"
	| "User"
	| "Channel"
	| "Role"
	| "Mentionable"
	| "Number"
	| "Attachment"

type ApplicationCommandType__DARKLUA_TYPE_r = "ChatInput" | "User" | "Message" | "PrimaryEntryPoiant"

type InteractionContextType__DARKLUA_TYPE_s = "Guild" | "BotDm" | "PrivateChannel"

type ActionTypes__DARKLUA_TYPE_t = "BlockMessage" | "SendAlertMessage" | "Timeout" | "BlockMemberInteraction"

type EventTypes__DARKLUA_TYPE_u = "MessageSend" | "MemberUpdate"

type KeywordPresetType__DARKLUA_TYPE_v = "Profanity" | "SexualContent" | "Slurs"

type TriggerTypes__DARKLUA_TYPE_w = "Keyword" | "Spam" | "KeywordPreset" | "MentionSpam" | "MemberProfile"

type VerificationLevel__DARKLUA_TYPE_x = "None" | "Low" | "Medium" | "High" | "VeryHigh"

type DefaultMessageNotification__DARKLUA_TYPE_y = "AllMessages" | "OnlyMentions"

type ExplicitContentFilterLevel__DARKLUA_TYPE_z = "Disabled" | "MembersWithoutRoles" | "AllMembers"

type NSFWLevel__DARKLUA_TYPE_A = "Default" | "Explicit" | "Safe" | "AgeRestricted"

type PremiumTier__DARKLUA_TYPE_B = "None" | "Tier1" | "Tier2" | "Tier3"

type MFALevel__DARKLUA_TYPE_C = "None" | "Elevated"

type InviteType__DARKLUA_TYPE_D = "Guild" | "GroupDM" | "Friend"

type InviteTargetType__DARKLUA_TYPE_E = "Stream" | "EmbeddedApplication"

type ScheduledEventPrivacyLevel__DARKLUA_TYPE_F = "GuildOnly"

type SchedledEventEntityType__DARKLUA_TYPE_G = "StageInstance" | "Voice" | "External"

type SchedledEventStatus__DARKLUA_TYPE_H = "Scheduled" | "Active" | "Completed" | "Canceled"

type IntegrationType__DARKLUA_TYPE_I = "Twitch" | "YouTube" | "Discord" | "GuildSubscription"

type IntegrationExpireBehaviour__DARKLUA_TYPE_J = "RemoveRole" | "Kick"

type OnboardingPromptType__DARKLUA_TYPE_K = "MultipleChoice" | "Dropdown"

type OnboardingMode__DARKLUA_TYPE_L = "Default" | "Advanced"

type OverwriteType__DARKLUA_TYPE_M = "Role" | "Member"

type AuditLogEvent__DARKLUA_TYPE_N =
	"GuildUpdate"
	| "ChannelCreate"
	| "ChannelUpdate"
	| "ChannelDelete"
	| "MessageCreate"
	| "MessageUpdate"
	| "MessageDelete"
	| "ReactionAdd"
	| "ReactionRemove"
	| "PresenceUpdate"
	| "VoiceStateUpdate"
	| "TypingStart"

type EntitlementType__DARKLUA_TYPE_O =
	"Purchase"
	| "PremiumSubscription"
	| "DeveloperGift"
	| "TestModePurchase"
	| "FreePurchase"
	| "UserGift"
	| "PremiumPurchase"
	| "ApplicationSubscription"

type EmbedType__DARKLUA_TYPE_P = "Rich" | "Image" | "Video" | "Gifv" | "Article" | "Link" | "PollResult"

type Partial__DARKLUA_TYPE_Q<T> = any

type Snowflake__DARKLUA_TYPE_R = string

type PremiumTypes__DARKLUA_TYPE_S = number

type LanguageLocales__DARKLUA_TYPE_T =
	"id"
	| "da"
	| "de"
	| "en-GB"
	| "en-US"
	| "es-ES"
	| "fr"
	| "hr"
	| "it"
	| "lt"
	| "nl"
	| "no"
	| "pl"
	| "pt-BR"
	| "ro"
	| "fi"
	| "sv-SE"
	| "vi"
	| "tr"
	| "cs"
	| "el"
	| "bg"
	| "ru"
	| "uk"
	| "hi"
	| "th"
	| "zn-CH"
	| "ja"
	| "ko"

type MembershipState__DARKLUA_TYPE_U = number

type TeamMemberRole__DARKLUA_TYPE_V = "Owner" | "Admin" | "Developer" | "Read-only"

type VerificationLevel__DARKLUA_TYPE_W = number

type DefaultMessageNotification__DARKLUA_TYPE_X = number

type ExplicitContentFilterLevel__DARKLUA_TYPE_Y = number

type MFALevel__DARKLUA_TYPE_Z = number

type GuildNSFWLevel__DARKLUA_TYPE__ = number

type PremiumTier__DARKLUA_TYPE_0 = number

type SystemChannelFlags__DARKLUA_TYPE_1 = number

type GuildFeature__DARKLUA_TYPE_2 =
	"ANIMATED_BANNER"
	| "ANIMATED_ICON"
	| "APPLICATION_COMMAND_PERMISSIONS_V2"
	| "AUTO_MODERATION"
	| "BANNER"
	| "COMMUNITY"
	| "CREATOR_MONETIZABLE_PROVISIONAL"
	| "CREATOR_STORE_PAGE"
	| "DEVELOPER_SUPPORT_SERVER"
	| "DISCOVERABLE"
	| "FEATURABLE"
	| "INVITES_DISABLED"
	| "INVITE_SPLASH"
	| "MEMBER_VERIFICATION_GATE_ENABLED"
	| "MORE_STICKERS"
	| "NEWS"
	| "PARTNERED"
	| "PREVIEW_ENABLED"
	| "RAID_ALERTS_DISABLED"
	| "ROLE_ICONS"
	| "ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE"
	| "ROLE_SUBSCRIPTIONS_ENABLED"
	| "TICKETED_EVENTS_ENABLED"
	| "VANITY_URL"
	| "VERIFIED"
	| "VIP_REGIONS"
	| "WELCOME_SCREEN_ENABLED"

type MutableGuildFeatures__DARKLUA_TYPE_3 = "COMMUNITY" | "DISCOVERABLE" | "INVITES_DISABLED" | "RAID_ALERTS_DISABLED"

type StickerType__DARKLUA_TYPE_4 = number

type StickerFormatType__DARKLUA_TYPE_5 = number

type OAuth2Scopes__DARKLUA_TYPE_6 =
	"activities.read"
	| "activities.write"
	| "applications.builds.read"
	| "applications.builds.upload"
	| "applications.commands"
	| "applications.commands.update"
	| "applications.commands.permissions.update"
	| "applications.entitlements"
	| "applications.store.update"
	| "bot"
	| "connections"
	| "dm_channels.read"
	| "email"
	| "gdm.join"
	| "guilds"
	| "guilds.join"
	| "guilds.members.read"
	| "identify"
	| "messages.read"
	| "relationships.read"
	| "role_connections.write"
	| "rpc"
	| "rpc.activities.write"
	| "rpc.notifications.read"
	| "rpc.voice.read"
	| "rpc.voice.write"
	| "voice"
	| "webhook.incoming"

type IntegrationType__DARKLUA_TYPE_7 = number

type ApplicationIntegrationType__DARKLUA_TYPE_8 = number

type ApplicationCommandPermissionType__DARKLUA_TYPE_9 = number

type AutomoderationRuleEventType__DARKLUA_TYPE_aa = number

type AutomoderationRuleTriggerType__DARKLUA_TYPE_ab = number

type AutomoderationRuleKeywordPresetType__DARKLUA_TYPE_ac = number

type AutomoderationActionType__DARKLUA_TYPE_ad = number

type ChannelType__DARKLUA_TYPE_ae = number

type VideoQualityMode__DARKLUA_TYPE_af = number

type ChannelFlags__DARKLUA_TYPE_ag = number

type SortOrderType__DARKLUA_TYPE_ah = number

type ForumLayoutType__DARKLUA_TYPE_ai = number

type OverwriteObjectType__DARKLUA_TYPE_aj = number

type EntitlementType__DARKLUA_TYPE_ak = number

type ActivityType__DARKLUA_TYPE_al = number

type PrivacyLevel__DARKLUA_TYPE_am = number

type GuildScheduledEventStatus__DARKLUA_TYPE_an = number

type GuildScheduledEventEntityType__DARKLUA_TYPE_ao = number

type IntegrationExpireBehaviours__DARKLUA_TYPE_ap = number

type InteractionType__DARKLUA_TYPE_aq = number

type EmbedType__DARKLUA_TYPE_ar = "Rich" | "Image" | "Video" | "GIFV" | "Article" | "Link" | "PollResult"

type MessageType__DARKLUA_TYPE_as = number

type MessageActivityType__DARKLUA_TYPE_at = number

type ButtonStyle__DARKLUA_TYPE_au = number

type TextInputStyles__DARKLUA_TYPE_av = number

type PollLayoutType__DARKLUA_TYPE_aw = number

type ApplicationCommandOptionType__DARKLUA_TYPE_ax = number

type InteractionContextType__DARKLUA_TYPE_ay = number

type InviteTypes__DARKLUA_TYPE_az = number

type InviteTargetTypes__DARKLUA_TYPE_aA = number

type ReactionType__DARKLUA_TYPE_aB = number

type ApplicationRoleConnectionMetadataType__DARKLUA_TYPE_aC = number

type ApplicationCommandType__DARKLUA_TYPE_aD = number

type AuditLogEventType__DARKLUA_TYPE_aE = number

type WebhookType__DARKLUA_TYPE_aF = number

type OnboardingMode__DARKLUA_TYPE_aG = number

type PromptTypes__DARKLUA_TYPE_aH = number

type ConnectionObjectServices__DARKLUA_TYPE_aI =
	"battlenet"
	| "bungie"
	| "domain"
	| "ebay"
	| "epicgames"
	| "facebook"
	| "github"
	| "instagram"
	| "leagueoflegends"
	| "paypal"
	| "playstation"
	| "reddit"
	| "riotgames"
	| "spotify"
	| "skype"
	| "stream"
	| "tiktok"
	| "twitch"
	| "twitter"
	| "xbox"
	| "youtube"

type AllowedMentionTypes__DARKLUA_TYPE_aJ = "roles" | "users" | "everyone"

type ConnectionVisibilityTypes__DARKLUA_TYPE_aK = number

type MessageReferenceType__DARKLUA_TYPE_aL = number

type GuildMemberFlags__DARKLUA_TYPE_aM = number

type InteractionCallbackType__DARKLUA_TYPE_aN = number

type ActivityTimestampObject__DARKLUA_TYPE_aO = {
	start: number,
	["end"]: number,
}
type ActivityEmojiObject__DARKLUA_TYPE_aP = { name: string, id: Snowflake__DARKLUA_TYPE_R, animated: boolean? }
type ActivityPartyObject__DARKLUA_TYPE_aQ = { id: string, size: { number } }
type ActivityAssetsObject__DARKLUA_TYPE_aR = {
	large_image: string,
	large_text: string,
	small_image: string,
	small_text: string,
}
type ActivitySecretsObject__DARKLUA_TYPE_aS = { join: string?, spectate: string?, match: string? }
type ActivityButtonsObject__DARKLUA_TYPE_aT = { label: string, url: string }
type ActivityObject__DARKLUA_TYPE_aU = {
	name: string,
	type: number,
	url: string?,
	created_at: number,
	timestamps: ActivityTimestampObject__DARKLUA_TYPE_aO,
	application_id: Snowflake__DARKLUA_TYPE_R,
	details: string?,
	state: string?,
	emoji: ActivityEmojiObject__DARKLUA_TYPE_aP?,
	party: ActivityPartyObject__DARKLUA_TYPE_aQ?,
	assets: ActivityAssetsObject__DARKLUA_TYPE_aR?,
	secrets: ActivitySecretsObject__DARKLUA_TYPE_aS?,
	instance: boolean?,
	flags: number?,
	buttons: { ActivityButtonsObject__DARKLUA_TYPE_aT }?,
}
type PresenceObject__DARKLUA_TYPE_aV = {
	since: number,
	activities: { ActivityObject__DARKLUA_TYPE_aU },
	status: string,
	afk: boolean,
}
type IdentifyPropertiesObject__DARKLUA_TYPE_aW = { os: string, browser: string, device: string }
type AvatarDecorationDataObject__DARKLUA_TYPE_aX = { asset: string, sku_id: Snowflake__DARKLUA_TYPE_R }
type UserObject__DARKLUA_TYPE_aY = {
	id: Snowflake__DARKLUA_TYPE_R,
	username: string,
	discriminator: string,
	global_name: string,
	avatar: string,
	bot: boolean?,
	system: boolean?,
	mfa_enabled: boolean?,
	banner: string?,
	accent_color: number?,
	locale: LanguageLocales__DARKLUA_TYPE_T?,
	verified: boolean?,
	email: string?,
	flags: number?,
	premium_type: PremiumTypes__DARKLUA_TYPE_S?,
	public_flags: number?,
	avatar_decoration_data: AvatarDecorationDataObject__DARKLUA_TYPE_aX?,
}
type UnavailableGuildObject__DARKLUA_TYPE_aZ = { id: Snowflake__DARKLUA_TYPE_R, unavailable: boolean }
type TeamMemberObject__DARKLUA_TYPE_a_ = {
	membership_state: MembershipState__DARKLUA_TYPE_U,
	team_id: Snowflake__DARKLUA_TYPE_R,
	user: UserObject__DARKLUA_TYPE_aY,
	role: TeamMemberRole__DARKLUA_TYPE_V,
}
type TeamObject__DARKLUA_TYPE_a0 = {
	icon: string,
	id: Snowflake__DARKLUA_TYPE_R,
	members: { TeamMemberObject__DARKLUA_TYPE_a_ },
	name: string,
	owner_user_id: Snowflake__DARKLUA_TYPE_R,
}
type GuildRoleTagObject__DARKLUA_TYPE_a1 = {
	bot_id: Snowflake__DARKLUA_TYPE_R?,
	integration_id: Snowflake__DARKLUA_TYPE_R?,
	premium_subscriber: nil,
	subscription_listing_id: Snowflake__DARKLUA_TYPE_R,
	available_for_purchase: nil,
	guild_connections: nil,
}
type GuildRoleObject__DARKLUA_TYPE_a2 = {
	id: Snowflake__DARKLUA_TYPE_R?,
	name: string,
	color: number,
	hoist: boolean,
	icon: string?,
	unicode_emoji: string?,
	position: number,
	permissions: string,
	managed: boolean,
	mentionable: boolean,
	tags: GuildRoleTagObject__DARKLUA_TYPE_a1?,
	flags: number,
}
type EmojiObject__DARKLUA_TYPE_a3 = {
	id: Snowflake__DARKLUA_TYPE_R?,
	name: string,
	roles: { Snowflake__DARKLUA_TYPE_R }?,
	user: UserObject__DARKLUA_TYPE_aY?,
	require_colons: boolean?,
	managed: boolean?,
	animated: boolean?,
	available: boolean?,
}
type WelcomeScreenChannelObject__DARKLUA_TYPE_a4 = {
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	description: string?,
	emoji_id: Snowflake__DARKLUA_TYPE_R?,
	emoji_name: string?,
}
type WelcomeScreenObject__DARKLUA_TYPE_a5 = {
	description: string,
	welcome_channels: { WelcomeScreenChannelObject__DARKLUA_TYPE_a4 },
}

type StickerObject__DARKLUA_TYPE_a6 = {
	id: Snowflake__DARKLUA_TYPE_R,
	pack_id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	description: string?,
	tags: string,
	asset: string?,
	type: StickerType__DARKLUA_TYPE_4,
	format_type: StickerFormatType__DARKLUA_TYPE_5,
	available: boolean?,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	user: UserObject__DARKLUA_TYPE_aY?,
	sort_value: number?,
}

type GuildObject__DARKLUA_TYPE_a7 = {
	id: Snowflake__DARKLUA_TYPE_R?,
	name: string?,
	icon: string?,
	icon_hash: string?,
	splash: string?,
	discovery_splash: string?,
	owner: boolean?,
	owner_id: Snowflake__DARKLUA_TYPE_R?,
	permissions: string?,
	region: string?,
	afk_channel_id: Snowflake__DARKLUA_TYPE_R?,
	afk_timeout: number?,
	widget_enabled: boolean?,
	widget_channel_id: Snowflake__DARKLUA_TYPE_R?,
	verification_level: VerificationLevel__DARKLUA_TYPE_W?,
	default_message_notifications: DefaultMessageNotification__DARKLUA_TYPE_X?,
	explicit_content_filter: ExplicitContentFilterLevel__DARKLUA_TYPE_Y?,
	roles: { GuildRoleObject__DARKLUA_TYPE_a2 }?,
	emojis: { EmojiObject__DARKLUA_TYPE_a3 }?,
	features: { GuildFeature__DARKLUA_TYPE_2 }?,
	mfa_level: MFALevel__DARKLUA_TYPE_Z?,
	application_id: Snowflake__DARKLUA_TYPE_R?,
	system_channel_id: Snowflake__DARKLUA_TYPE_R?,
	system_channel_flags: SystemChannelFlags__DARKLUA_TYPE_1?,
	rules_channel_id: Snowflake__DARKLUA_TYPE_R?,
	max_presences: number?,
	max_members: number?,
	vanity_url_code: string?,
	description: string?,
	banner: string?,
	premium_tier: PremiumTier__DARKLUA_TYPE_0?,
	premium_subscription_count: number?,
	preferred_locale: LanguageLocales__DARKLUA_TYPE_T?,
	public_updates_channel_id: Snowflake__DARKLUA_TYPE_R?,
	max_video_channel_users: number?,
	max_stage_video_channel_users: number?,
	approximate_member_count: number?,
	approximate_presence_count: number?,
	welcome_screen: WelcomeScreenObject__DARKLUA_TYPE_a5?,
	nsfw_level: GuildNSFWLevel__DARKLUA_TYPE__?,
	stickers: { StickerObject__DARKLUA_TYPE_a6 }?,
	premium_progress_bar_enabled: boolean?,
	safety_alerts_channel_id: Snowflake__DARKLUA_TYPE_R?,
}

type InstallParamsObject__DARKLUA_TYPE_a8 = {
	scopes: { OAuth2Scopes__DARKLUA_TYPE_6 },
	permissions: string,
}

type ApplicationObject__DARKLUA_TYPE_a9 = {
	id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	icon: string?,
	description: string,
	rpc_origins: { string }?,
	bot_public: boolean,
	bot_require_code_grant: boolean,
	bot: UserObject__DARKLUA_TYPE_aY?,
	terms_of_service_url: string?,
	privacy_policy_url: string?,
	owner: UserObject__DARKLUA_TYPE_aY?,
	summary: string,
	verify_key: string,
	team: TeamObject__DARKLUA_TYPE_a0?,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	guild: GuildObject__DARKLUA_TYPE_a7?,
	primary_sku_id: Snowflake__DARKLUA_TYPE_R?,
	slug: string?,
	cover_image: string?,
	flags: number?,
	approximate_guild_count: number?,
	redirect_uris: { string }?,
	interactions_endpoint_url: string?,
	role_connections_verification_url: string?,
	tags: { string }?,
	install_params: InstallParamsObject__DARKLUA_TYPE_a8?,
	integration_types_config: { [ApplicationIntegrationType__DARKLUA_TYPE_8]: boolean }?,
	custom_install_url: string?,
}

type GuildApplicationCommandPermissionObject__DARKLUA_TYPE_ba = {
	id: Snowflake__DARKLUA_TYPE_R,
	type: ApplicationCommandPermissionType__DARKLUA_TYPE_9,
	permission: boolean,
}

type GuildApplicationCommandPermissionsObject__DARKLUA_TYPE_bb = {
	id: Snowflake__DARKLUA_TYPE_R,
	application_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	permissions: { GuildApplicationCommandPermissionObject__DARKLUA_TYPE_ba },
}

type AutomoderationRuleTriggerMetadataObject__DARKLUA_TYPE_bc = {
	keyword_filter: { string },
	regex_patterns: { string },
	presets: { AutomoderationRuleKeywordPresetType__DARKLUA_TYPE_ac },
	allow_list: { string },
	mention_total_limit: number,
	mention_raid_protection_enabled: boolean,
}

type AutmoderationActionMetadataObject__DARKLUA_TYPE_bd = {
	channel_id: Snowflake__DARKLUA_TYPE_R,
	duration_seconds: number,
	custom_message: string?,
}

type AutomoderationActionObject__DARKLUA_TYPE_be = {
	type: AutomoderationActionType__DARKLUA_TYPE_ad,
	metadata: AutmoderationActionMetadataObject__DARKLUA_TYPE_bd?,
}

type AutomoderationRuleObject__DARKLUA_TYPE_bf = {
	id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	creator_id: Snowflake__DARKLUA_TYPE_R,
	event_type: AutomoderationRuleEventType__DARKLUA_TYPE_aa,
	trigger_type: AutomoderationRuleTriggerType__DARKLUA_TYPE_ab,
	trigger_metadata: AutomoderationRuleTriggerMetadataObject__DARKLUA_TYPE_bc,
	actions: { AutomoderationActionObject__DARKLUA_TYPE_be },
	enabled: boolean,
	exempt_roles: { Snowflake__DARKLUA_TYPE_R },
	exempt_channels: { Snowflake__DARKLUA_TYPE_R },
}

type OverwriteObject__DARKLUA_TYPE_bg = {
	id: Snowflake__DARKLUA_TYPE_R,
	type: OverwriteObjectType__DARKLUA_TYPE_aj,
	allow: string,
	deny: string,
}

type ThreadMetadataObject__DARKLUA_TYPE_bh = {
	archived: boolean,
	auto_archive_duration: number,
	archive_timestamp: string,
	locked: boolean,
	invitable: boolean?,
	create_timestamp: string,
}

type GuildMemberObject__DARKLUA_TYPE_bi = {
	user: UserObject__DARKLUA_TYPE_aY?,
	nick: string?,
	avatar: string?,
	roles: { Snowflake__DARKLUA_TYPE_R },
	joined_at: string,
	premium_since: string?,
	deaf: boolean,
	mute: boolean,
	flags: number,
	pending: boolean?,
	permissions: string?,
	communication_disabled_until: string?,
	avatar_decoration_data: AvatarDecorationDataObject__DARKLUA_TYPE_aX?,
}

type ThreadMemberObject__DARKLUA_TYPE_bj = {
	id: Snowflake__DARKLUA_TYPE_R?,
	user_id: Snowflake__DARKLUA_TYPE_R?,
	join_timestamp: string,
	flags: number,
	member: GuildMemberObject__DARKLUA_TYPE_bi?,
}

type ForumTagObject__DARKLUA_TYPE_bk = {
	id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	moderated: boolean,
	emoji_id: string?,
	emoji_name: string?,
}

type DefaultReactionObject__DARKLUA_TYPE_bl = {
	emoji_id: string?,
	emoji_name: string?,
}

type ChannelObject__DARKLUA_TYPE_bm = {
	id: Snowflake__DARKLUA_TYPE_R?,
	type: ChannelType__DARKLUA_TYPE_ae,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	position: number,
	permission_overwrites: { OverwriteObject__DARKLUA_TYPE_bg },
	name: string,
	topic: string?,
	nsfw: boolean?,
	last_message_id: Snowflake__DARKLUA_TYPE_R?,
	bitrate: number?,
	user_limit: number?,
	rate_limit_per_user: number?,
	recipients: { UserObject__DARKLUA_TYPE_aY }?,
	icon: string?,
	owner_id: Snowflake__DARKLUA_TYPE_R?,
	application_id: Snowflake__DARKLUA_TYPE_R?,
	managed: boolean?,
	parent_id: Snowflake__DARKLUA_TYPE_R?,
	last_pin_timestamp: string?,
	rtc_region: string?,
	video_quality_mode: VideoQualityMode__DARKLUA_TYPE_af?,
	message_count: number?,
	member_count: number?,
	thread_metadata: ThreadMetadataObject__DARKLUA_TYPE_bh?,
	member: ThreadMemberObject__DARKLUA_TYPE_bj?,
	default_auto_archive_duration: number?,
	permissions: string?,
	flags: ChannelFlags__DARKLUA_TYPE_ag?,
	total_message_sent: number?,
	available_tags: { ForumTagObject__DARKLUA_TYPE_bk }?,
	applied_tags: { Snowflake__DARKLUA_TYPE_R }?,
	default_reaction_emoji: DefaultReactionObject__DARKLUA_TYPE_bl?,
	default_thread_rate_limit_per_user: number?,
	default_sort_order: SortOrderType__DARKLUA_TYPE_ah?,
	default_forum_layout: ForumLayoutType__DARKLUA_TYPE_ai?,
}

type EntitlementObject__DARKLUA_TYPE_bn = {
	id: Snowflake__DARKLUA_TYPE_R,
	sku_id: Snowflake__DARKLUA_TYPE_R,
	application_id: Snowflake__DARKLUA_TYPE_R,
	user_id: Snowflake__DARKLUA_TYPE_R?,
	type: EntitlementType__DARKLUA_TYPE_ak,
	deleted: boolean,
	starts_at: string?,
	ends_at: string?,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	consumed: boolean?,
}

type VoiceStateObject__DARKLUA_TYPE_bo = {
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	user_id: Snowflake__DARKLUA_TYPE_R,
	member: GuildMemberObject__DARKLUA_TYPE_bi?,
	session_id: string,
	deaf: boolean,
	mute: boolean,
	self_deaf: boolean,
	self_mute: boolean,
	self_stream: boolean?,
	self_video: boolean,
	suppress: boolean,
	request_to_speak_timestamp: string?,
}

type ClientStatusObject__DARKLUA_TYPE_bp = {
	desktop: string?,
	mobile: string?,
	web: string?,
}

type PresenceUpdateObject__DARKLUA_TYPE_bq = {
	user: UserObject__DARKLUA_TYPE_aY,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	status: string,
	activities: { ActivityObject__DARKLUA_TYPE_aU },
	client_status: ClientStatusObject__DARKLUA_TYPE_bp,
}

type StageInstanceObject__DARKLUA_TYPE_br = {
	id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	channel_id: Snowflake__DARKLUA_TYPE_R,
	topic: string,
	privacy_level: PrivacyLevel__DARKLUA_TYPE_am,
	discoverable_disabled: boolean,
	guild_scheduled_event_id: Snowflake__DARKLUA_TYPE_R?,
}

type GuildScheduledEventEntityMetadata__DARKLUA_TYPE_bs = {
	location: string,
}

type GuildScheduledEventObject__DARKLUA_TYPE_bt = {
	id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	creator_id: Snowflake__DARKLUA_TYPE_R?,
	name: string,
	description: string?,
	scheduled_start_time: string,
	scheduled_end_time: string?,
	privacy_level: PrivacyLevel__DARKLUA_TYPE_am,
	status: GuildScheduledEventStatus__DARKLUA_TYPE_an,
	entity_type: GuildScheduledEventEntityType__DARKLUA_TYPE_ao,
	entity_id: Snowflake__DARKLUA_TYPE_R?,
	entity_metadata: GuildScheduledEventEntityMetadata__DARKLUA_TYPE_bs?,
	creator: UserObject__DARKLUA_TYPE_aY?,
	user_count: number,
	image: string?,
}

type IntegrationAccountObject__DARKLUA_TYPE_bu = {
	id: string,
	name: string,
}

type IntegrationObject__DARKLUA_TYPE_bv = {
	id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	type: IntegrationType__DARKLUA_TYPE_7,
	enabled: boolean,
	syncing: boolean?,
	role_id: Snowflake__DARKLUA_TYPE_R?,
	enable_emoticons: boolean?,
	expire_behaviour: IntegrationExpireBehaviours__DARKLUA_TYPE_ap?,
	expire_grace_period: number?,
	user: UserObject__DARKLUA_TYPE_aY?,
	account: IntegrationAccountObject__DARKLUA_TYPE_bu,
	synced_at: string?,
	subscriber_count: number?,
	revoked: boolean?,
	application: IntegrationApplicationObject__DARKLUA_TYPE_ct?,
	scopes: { OAuth2Scopes__DARKLUA_TYPE_6 }?,
}

type ChannelMentionObject__DARKLUA_TYPE_bw = {
	id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	type: ChannelType__DARKLUA_TYPE_ae,
	name: string,
}

type AttachmentObject__DARKLUA_TYPE_bx = Partial__DARKLUA_TYPE_Q<{
	id: Snowflake__DARKLUA_TYPE_R,
	filename: string,
	title: string?,
	description: string?,
	content_type: string?,
	size: number,
	url: string,
	proxy_url: string,
	height: number?,
	width: number?,
	ephemeral: boolean?,
	duration_secs: number?,
	waveform: string?,
	flags: number,
}>

type EmbedFooterObject__DARKLUA_TYPE_by = {
	text: string,
	icon_url: string?,
	proxy_icon_url: string?,
}

type EmbedImageObject__DARKLUA_TYPE_bz = {
	url: string,
	proxy_url: string?,
	height: number?,
	width: number?,
}

type EmbedProviderObject__DARKLUA_TYPE_bA = {
	name: string?,
	url: string?,
}

type EmbedAuthorObject__DARKLUA_TYPE_bB = {
	name: string,
	url: string?,
	icon_url: string?,
	proxy_icon_url: string?,
}

type EmbedFieldObject__DARKLUA_TYPE_bC = {
	name: string,
	value: string,
	inline: boolean?,
}

type EmbedThumbnailObject__DARKLUA_TYPE_bD = {
	url: string,
	proxy_url: string?,
	height: number?,
	width: number?,
}

type EmbedVideoObject__DARKLUA_TYPE_bE = {
	url: string,
	proxy_url: string?,
	height: number?,
	width: number?,
}

type EmbedObject__DARKLUA_TYPE_bF = {
	title: string?,
	type: EmbedType__DARKLUA_TYPE_ar?,
	description: string?,
	url: string?,
	timestamp: string?,
	color: number?,
	footer: EmbedFooterObject__DARKLUA_TYPE_by?,
	image: EmbedImageObject__DARKLUA_TYPE_bz?,
	thumbnail: EmbedThumbnailObject__DARKLUA_TYPE_bD?,
	video: EmbedVideoObject__DARKLUA_TYPE_bE?,
	provider: EmbedProviderObject__DARKLUA_TYPE_bA?,
	author: EmbedAuthorObject__DARKLUA_TYPE_bB?,
	fields: { EmbedFieldObject__DARKLUA_TYPE_bC }?,
}

type ReactionCountDetailsObject__DARKLUA_TYPE_bG = {
	burst: number,
	normal: number,
}

type ReactionObject__DARKLUA_TYPE_bH = {
	count: number,
	count_details: ReactionCountDetailsObject__DARKLUA_TYPE_bG,
	me: boolean,
	me_burst: boolean,
	emoji: EmojiObject__DARKLUA_TYPE_a3,
	burst_colors: { string },
}

type MessageActivityObject__DARKLUA_TYPE_bI = {
	type: MessageActivityType__DARKLUA_TYPE_at,
	party_id: string,
}

type MessageReferenceObject__DARKLUA_TYPE_bJ = {
	type: MessageReferenceType__DARKLUA_TYPE_aL?,
	message_id: Snowflake__DARKLUA_TYPE_R?,
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	fail_if_not_exists: boolean?,
}

type MessageInteractionMetadatObject__DARKLUA_TYPE_bK = {
	id: Snowflake__DARKLUA_TYPE_R,
	type: InteractionType__DARKLUA_TYPE_aq,
	user: UserObject__DARKLUA_TYPE_aY,
	authorizing_integration_owners: { [ApplicationIntegrationType__DARKLUA_TYPE_8]: Snowflake__DARKLUA_TYPE_R },
	original_response_message_id: Snowflake__DARKLUA_TYPE_R?,
	interacted_message_id: Snowflake__DARKLUA_TYPE_R?,
	triggering_interaction_metadata: MessageInteractionMetadatObject__DARKLUA_TYPE_bK,
}

type MessageInteractionObject__DARKLUA_TYPE_bL = {
	id: string,
	type: InteractionType__DARKLUA_TYPE_aq,
	name: string,
	user: UserObject__DARKLUA_TYPE_aY,
	member: GuildMemberObject__DARKLUA_TYPE_bi?,
}

type SelectOptionObject__DARKLUA_TYPE_bM = {
	label: string,
	value: string,
	description: string?,
	emoji: EmojiObject__DARKLUA_TYPE_a3?,
	default: boolean,
}

type SelectDefaultValueObject__DARKLUA_TYPE_bN = {
	id: Snowflake__DARKLUA_TYPE_R,
	type: string,
}

type ActionRowComponentObject__DARKLUA_TYPE_bO = {
	type: number,
	components: { ComponentObjects__DARKLUA_TYPE_bS },
}

type ButtonComponentObject__DARKLUA_TYPE_bP = Partial__DARKLUA_TYPE_Q<{
	type: number,
	style: ButtonStyle__DARKLUA_TYPE_au,
	label: string?,
	emoji: EmojiObject__DARKLUA_TYPE_a3?,
	custom_id: string?,
	sku_id: string?,
	url: string?,
	disabled: boolean?,
}>

type SelectMenuComponentObject__DARKLUA_TYPE_bQ = {
	type: number,
	custom_id: string,
	options: { SelectOptionObject__DARKLUA_TYPE_bM }?,
	channel_types: { ChannelType__DARKLUA_TYPE_ae }?,
	placeholder: string?,
	default_values: { SelectDefaultValueObject__DARKLUA_TYPE_bN }?,
	min_values: number?,
	max_values: number?,
	disabled: boolean?,
}

type TextInputComponentObject__DARKLUA_TYPE_bR = {
	type: number,
	custom_id: string,
	style: TextInputStyles__DARKLUA_TYPE_av,
	label: string,
	min_length: number?,
	max_length: number?,
	required: boolean?,
	value: string?,
	placeholder: string?,
}

type ComponentObjects__DARKLUA_TYPE_bS =
	ActionRowComponentObject__DARKLUA_TYPE_bO
	| ButtonComponentObject__DARKLUA_TYPE_bP
	| SelectMenuComponentObject__DARKLUA_TYPE_bQ
	| TextInputComponentObject__DARKLUA_TYPE_bR

type SitckerItemObject__DARKLUA_TYPE_bT = {
	id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	format_type: StickerFormatType__DARKLUA_TYPE_5,
}

type RoleSubscriptionDataObject__DARKLUA_TYPE_bU = {
	role_subscription_listing_id: Snowflake__DARKLUA_TYPE_R,
	tier_name: string,
	total_months_subscribed: number,
	is_renewal: boolean,
}

type PollMediaObject__DARKLUA_TYPE_bV = {
	text: string?,
	emoji: Partial__DARKLUA_TYPE_Q<EmojiObject__DARKLUA_TYPE_a3>?,
}

type PollAnswerObject__DARKLUA_TYPE_bW = {
	answer_id: number,
	poll_media: PollMediaObject__DARKLUA_TYPE_bV,
}

type PollAnswerCountObject__DARKLUA_TYPE_bX = {
	id: number,
	count: number,
	me_voted: boolean,
}

type PollResultObject__DARKLUA_TYPE_bY = {
	is_finalized: boolean,
	answer_counts: { PollAnswerCountObject__DARKLUA_TYPE_bX },
}

type PollObject__DARKLUA_TYPE_bZ = {
	question: PollMediaObject__DARKLUA_TYPE_bV,
	answers: { PollAnswerObject__DARKLUA_TYPE_bW },
	expiry: string?,

	allow_multiselect: true | false,
	layout_type: PollLayoutType__DARKLUA_TYPE_aw,
	results: PollResultObject__DARKLUA_TYPE_bY?,
}

type MessageCallObject__DARKLUA_TYPE_b_ = {
	participants: { UserObject__DARKLUA_TYPE_aY },
	ended_timestamp: string,
}

type MessageObject__DARKLUA_TYPE_b0 = {
	id: Snowflake__DARKLUA_TYPE_R?,
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	author: UserObject__DARKLUA_TYPE_aY?,
	content: string?,
	timestamp: string?,
	edited_timestamp: string?,
	tts: boolean?,
	mention_everyone: boolean?,
	mentions: { UserObject__DARKLUA_TYPE_aY }?,
	mention_roles: { GuildRoleObject__DARKLUA_TYPE_a2 }?,
	mention_channels: { ChannelMentionObject__DARKLUA_TYPE_bw }?,
	attachments: { AttachmentObject__DARKLUA_TYPE_bx }?,
	embeds: { EmbedObject__DARKLUA_TYPE_bF }?,
	reactions: { ReactionObject__DARKLUA_TYPE_bH }?,
	nonce: string?,
	pinned: boolean?,
	webhook_id: Snowflake__DARKLUA_TYPE_R?,
	type: MessageType__DARKLUA_TYPE_as?,
	activity: MessageActivityObject__DARKLUA_TYPE_bI?,
	application: ApplicationObject__DARKLUA_TYPE_a9?,
	application_id: Snowflake__DARKLUA_TYPE_R?,
	message_reference: MessageReferenceObject__DARKLUA_TYPE_bJ?,
	flags: number?,
	referenced_message: MessageObject__DARKLUA_TYPE_b0?,
	interaction_metadata: MessageInteractionMetadatObject__DARKLUA_TYPE_bK?,
	interaction: MessageInteractionObject__DARKLUA_TYPE_bL?,
	thread: ChannelObject__DARKLUA_TYPE_bm?,
	components: { ComponentObjects__DARKLUA_TYPE_bS }?,
	sticker_items: { SitckerItemObject__DARKLUA_TYPE_bT }?,
	stickers: { StickerObject__DARKLUA_TYPE_a6 }?,
	position: number?,
	role_subscription_data: RoleSubscriptionDataObject__DARKLUA_TYPE_bU?,
	resolved: ResolvedDataStructure__DARKLUA_TYPE_b1?,
	poll: PollObject__DARKLUA_TYPE_bZ?,
	call: MessageCallObject__DARKLUA_TYPE_b_?,
}

type ResolvedDataStructure__DARKLUA_TYPE_b1 = {
	users: { UserObject__DARKLUA_TYPE_aY }?,
	members: { GuildMemberObject__DARKLUA_TYPE_bi }?,
	roles: { GuildRoleObject__DARKLUA_TYPE_a2 }?,
	channels: { ChannelObject__DARKLUA_TYPE_bm }?,
	messages: { MessageObject__DARKLUA_TYPE_b0 }?,
	attachments: { AttachmentObject__DARKLUA_TYPE_bx }?,
}

type ApplicationCommandInteractionDataOptionObject__DARKLUA_TYPE_b2 = {
	name: string,
	type: ApplicationCommandOptionType__DARKLUA_TYPE_ax,
	value: (string | number | boolean)?,
	options: { ApplicationCommandInteractionDataOptionObject__DARKLUA_TYPE_b2 },
	focused: boolean,
}

type InteractionDataObject__DARKLUA_TYPE_b3 = {
	id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	type: number,
	resolved: ResolvedDataStructure__DARKLUA_TYPE_b1?,
	options: { ApplicationCommandInteractionDataOptionObject__DARKLUA_TYPE_b2 }?,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	target_id: Snowflake__DARKLUA_TYPE_R?,

	custom_id: string?,
	component_type: number?,
	values: { SelectOptionObject__DARKLUA_TYPE_bM }?,

	components: { ComponentObjects__DARKLUA_TYPE_bS }?,
}

type InteractionObject__DARKLUA_TYPE_b4 = {
	id: Snowflake__DARKLUA_TYPE_R,
	application_id: Snowflake__DARKLUA_TYPE_R,
	type: InteractionType__DARKLUA_TYPE_aq,
	data: InteractionDataObject__DARKLUA_TYPE_b3?,
	guild: GuildObject__DARKLUA_TYPE_a7?,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	channel: ChannelObject__DARKLUA_TYPE_bm?,
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	member: GuildMemberObject__DARKLUA_TYPE_bi?,
	user: UserObject__DARKLUA_TYPE_aY?,
	token: string,
	version: number,
	message: MessageObject__DARKLUA_TYPE_b0?,
	app_permissions: string,
	locale: LanguageLocales__DARKLUA_TYPE_T?,
	guild_locale: LanguageLocales__DARKLUA_TYPE_T?,
	entitlements: { EntitlementObject__DARKLUA_TYPE_bn },
	authorizing_integration_owners: { IntegrationType__DARKLUA_TYPE_7 },
	context: InteractionContextType__DARKLUA_TYPE_ay,
}

type ApplicationRoleConnectionMetadataObject__DARKLUA_TYPE_b5 = {
	type: ApplicationRoleConnectionMetadataType__DARKLUA_TYPE_aC,
	key: string,
	name: string,
	name_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	description: string,
	description_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
}

type ApplicationCommandOptionChoiceObject__DARKLUA_TYPE_b6 = {
	name: string,
	name_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	value: string | number,
}

type ApplicationCommandOptionObject__DARKLUA_TYPE_b7 = {
	type: ApplicationCommandOptionType__DARKLUA_TYPE_ax,
	name: string,
	name_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	description: string?,
	description_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	required: boolean?,
	choices: { ApplicationCommandOptionChoiceObject__DARKLUA_TYPE_b6 },
	options: { ApplicationCommandOptionObject__DARKLUA_TYPE_b7 }?,
	channel_types: { ChannelType__DARKLUA_TYPE_ae }?,
	min_value: number?,
	max_value: number?,
	min_length: number?,
	max_length: number?,
	autocomplete: boolean?,
}

type ApplicationCommandObject__DARKLUA_TYPE_b8 = {
	id: Snowflake__DARKLUA_TYPE_R?,
	type: ApplicationCommandType__DARKLUA_TYPE_aD?,
	application_id: Snowflake__DARKLUA_TYPE_R?,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	name: string,
	name_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	description: string,
	description_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	options: { ApplicationCommandOptionObject__DARKLUA_TYPE_b7 }?,
	default_member_permissions: string?,
	dm_permission: string?,
	default_permission: boolean?,
	nsfw: boolean?,
	integration_types: { IntegrationType__DARKLUA_TYPE_7 }?,
	contexts: { InteractionContextType__DARKLUA_TYPE_ay }?,
	version: Snowflake__DARKLUA_TYPE_R?,
}

type AuditLogChangeObject__DARKLUA_TYPE_b9 = {
	new_value: any?,
	old_value: any?,
	key: string,
}

type OptionalAuditEntryInfoObject__DARKLUA_TYPE_ca = {
	application_id: Snowflake__DARKLUA_TYPE_R,
	auto_moderation_rule_name: string,
	auto_moderation_rule_trigger_type: AutomoderationRuleTriggerType__DARKLUA_TYPE_ab,
	channel_id: Snowflake__DARKLUA_TYPE_R,
	count: string,
	delete_member_days: string,
	id: Snowflake__DARKLUA_TYPE_R,
	members_removed: string,
	message_id: Snowflake__DARKLUA_TYPE_R,
	role_name: string,
	type: string,
	integration_type: IntegrationType__DARKLUA_TYPE_7,
}

type AuditLogEntryObject__DARKLUA_TYPE_cb = {
	target_id: string?,
	changes: { AuditLogChangeObject__DARKLUA_TYPE_b9 }?,
	user_id: Snowflake__DARKLUA_TYPE_R?,
	id: Snowflake__DARKLUA_TYPE_R,
	action_type: AuditLogEventType__DARKLUA_TYPE_aE,
	options: { OptionalAuditEntryInfoObject__DARKLUA_TYPE_ca }?,
	reason: string?,
}

type WebhookObject__DARKLUA_TYPE_cc = {
	id: Snowflake__DARKLUA_TYPE_R,
	type: WebhookType__DARKLUA_TYPE_aF,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	user: UserObject__DARKLUA_TYPE_aY?,
	name: string?,
	avatar: string?,
	token: string?,
	application_id: Snowflake__DARKLUA_TYPE_R?,
	source_guild: GuildObject__DARKLUA_TYPE_a7?,
	source_channel: ChannelObject__DARKLUA_TYPE_bm?,
	url: string?,
}

type AuditLogObject__DARKLUA_TYPE_cd = {
	application_commands: { ApplicationCommandObject__DARKLUA_TYPE_b8 },
	audit_log_entries: { AuditLogEntryObject__DARKLUA_TYPE_cb },
	auto_moderation_rules: { AutomoderationRuleObject__DARKLUA_TYPE_bf },
	guild_scheduled_events: { GuildScheduledEventObject__DARKLUA_TYPE_bt },
	integrations: { IntegrationObject__DARKLUA_TYPE_bv },
	threads: { ChannelObject__DARKLUA_TYPE_bm },
	users: { UserObject__DARKLUA_TYPE_aY },
	webhooks: { WebhookObject__DARKLUA_TYPE_cc },
}

type InviteObject__DARKLUA_TYPE_ce = {
	type: InviteTypes__DARKLUA_TYPE_az,
	code: string,
	guild: GuildObject__DARKLUA_TYPE_a7?,
	channel: ChannelObject__DARKLUA_TYPE_bm?,
	inviter: UserObject__DARKLUA_TYPE_aY?,
	target_type: InviteTargetTypes__DARKLUA_TYPE_aA,
	target_user: UserObject__DARKLUA_TYPE_aY?,
	target_application: ApplicationObject__DARKLUA_TYPE_a9?,
	approximate_presence_count: number?,
	approximate_member_count: number?,
	expires_at: string?,
	stage_instance: StageInstanceObject__DARKLUA_TYPE_br?,
	guild_scheduled_event: GuildScheduledEventObject__DARKLUA_TYPE_bt?,
}

type GuildVanityUrl__DARKLUA_TYPE_cf = {
	code: string,
	uses: number,
}

type InviteMetadataObject__DARKLUA_TYPE_cg = {
	uses: number,
	max_uses: number,
	max_age: number,
	temporary: boolean,
	created_at: string,
}

type FollowedChannelObject__DARKLUA_TYPE_ch = {
	channel_id: Snowflake__DARKLUA_TYPE_R,
	webhook_id: Snowflake__DARKLUA_TYPE_R,
}

type GuildPreviewObject__DARKLUA_TYPE_ci = {
	id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	icon: string?,
	splash: string?,
	discovery_splash: string?,
	emojis: { EmojiObject__DARKLUA_TYPE_a3 },
	features: { GuildFeature__DARKLUA_TYPE_2 },
	approximate_member_count: number,
	approximate_presence_count: number,
	description: string?,
	stickers: { StickerObject__DARKLUA_TYPE_a6 },
}

type BanObject__DARKLUA_TYPE_cj = {
	reason: string?,
	user: UserObject__DARKLUA_TYPE_aY,
}

type VoiceRegionObject__DARKLUA_TYPE_ck = {
	id: string,
	name: string,
	optimal: boolean,
	deprecated: boolean,
	custom: boolean,
}

type GuildWidgetSettingsObject__DARKLUA_TYPE_cl = {
	enabled: boolean?,
	channel_id: Snowflake__DARKLUA_TYPE_R?,
}

type GuildWidgetObject__DARKLUA_TYPE_cm = {
	id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	instant_invite: string?,
	channels: { ChannelObject__DARKLUA_TYPE_bm },
	members: { UserObject__DARKLUA_TYPE_aY },
	presence_count: number,
}

type PromptOptionObject__DARKLUA_TYPE_cn = {
	id: Snowflake__DARKLUA_TYPE_R?,
	channel_ids: { Snowflake__DARKLUA_TYPE_R },
	role_ids: { Snowflake__DARKLUA_TYPE_R },
	emoji: EmojiObject__DARKLUA_TYPE_a3 | nil,
	emoji_id: Snowflake__DARKLUA_TYPE_R?,
	emoji_name: string?,
	emoji_animated: boolean?,
	title: string?,
	description: string?,
}

type OnboardingPromptObject__DARKLUA_TYPE_co = {
	id: Snowflake__DARKLUA_TYPE_R | nil,
	type: PromptTypes__DARKLUA_TYPE_aH?,
	options: { PromptOptionObject__DARKLUA_TYPE_cn },
	title: string?,
	single_select: boolean?,
	required: boolean?,
	in_onboarding: boolean?,
}

type GuildOnboardingObject__DARKLUA_TYPE_cp = {
	guild_id: Snowflake__DARKLUA_TYPE_R,
	prompts: { OnboardingPromptObject__DARKLUA_TYPE_co },
	default_channel_ids: { Snowflake__DARKLUA_TYPE_R },
	enabled: boolean,
	mode: OnboardingMode__DARKLUA_TYPE_aG,
}

type GuildScheduledEventUserObject__DARKLUA_TYPE_cq = {
	guild_scheduled_event_id: Snowflake__DARKLUA_TYPE_R,
	user: UserObject__DARKLUA_TYPE_aY,
	member: GuildMemberObject__DARKLUA_TYPE_bi?,
}

type GuildTemplateObject__DARKLUA_TYPE_cr = {
	code: string,
	name: string,
	description: string?,
	usage_count: number,
	creator_id: Snowflake__DARKLUA_TYPE_R,
	creator: UserObject__DARKLUA_TYPE_aY,
	created_at: string,
	updated_at: string,
	source_guild_id: Snowflake__DARKLUA_TYPE_R,
	serialized_source_guild: GuildObject__DARKLUA_TYPE_a7,
	is_dirty: boolean?,
}

type StickerPackObject__DARKLUA_TYPE_cs = {
	id: Snowflake__DARKLUA_TYPE_R,
	stickers: { StickerObject__DARKLUA_TYPE_a6 },
	name: string,
	sku_id: Snowflake__DARKLUA_TYPE_R,
	cover_sticker_id: Snowflake__DARKLUA_TYPE_R?,
	description: string,
	banner_asset_id: Snowflake__DARKLUA_TYPE_R?,
}

type IntegrationApplicationObject__DARKLUA_TYPE_ct = {
	id: Snowflake__DARKLUA_TYPE_R,
	name: string,
	icon: string?,
	description: string,
	bot: UserObject__DARKLUA_TYPE_aY?,
}

type ConnectionObject__DARKLUA_TYPE_cu = {
	id: string,
	name: string,
	type: ConnectionObjectServices__DARKLUA_TYPE_aI,
	revoked: boolean?,
	integrations: { IntegrationObject__DARKLUA_TYPE_bv }?,
	verified: boolean,
	friend_sync: boolean,
	show_Activity: boolean,
	two_way_link: boolean,
	visibility: ConnectionVisibilityTypes__DARKLUA_TYPE_aK,
}

type ApplicationRoleConnectionObject__DARKLUA_TYPE_cv = {
	platform_name: string?,
	platform_username: string?,
	metadata: ApplicationRoleConnectionMetadataObject__DARKLUA_TYPE_b5,
}

type SessionStartLimitObject__DARKLUA_TYPE_cw = {
	total: number,
	remaining: number,
	reset_after: number,
	max_concurrency: number,
}

type AllowedMentionObject__DARKLUA_TYPE_cx = {
	parse: { AllowedMentionTypes__DARKLUA_TYPE_aJ }?,
	users: { string }?,
	roles: { string }?,
	replied_user: boolean?,
}

type ForumAndMediaThreadMessageObject__DARKLUA_TYPE_cy = {
	content: string?,
	embeds: { EmbedObject__DARKLUA_TYPE_bF }?,
	allowed_mentions: AllowedMentionObject__DARKLUA_TYPE_cx?,
	components: { ComponentObjects__DARKLUA_TYPE_bS }?,
	sticker_ids: { Snowflake__DARKLUA_TYPE_R }?,
	attachments: { AttachmentObject__DARKLUA_TYPE_bx }?,
	flags: number?,
}

type InteractionCallbackAutocompleteObject__DARKLUA_TYPE_cz = {
	choices: { ApplicationCommandOptionChoiceObject__DARKLUA_TYPE_b6 }?,
}

type InteractionCallbackModalObject__DARKLUA_TYPE_cA = {
	custom_id: string?,
	title: string?,
	components: { ComponentObjects__DARKLUA_TYPE_bS },
}

type InteractionResponseObject__DARKLUA_TYPE_cB = {
	type: InteractionCallbackType__DARKLUA_TYPE_aN,
	data: (
		Partial__DARKLUA_TYPE_Q<MessageObject__DARKLUA_TYPE_b0>
		| InteractionCallbackAutocompleteObject__DARKLUA_TYPE_cz
		| InteractionCallbackModalObject__DARKLUA_TYPE_cA
	)?,
}

type ChannelType__DARKLUA_TYPE_cC =
	"GuildText"
	| "DM"
	| "GuildVoice"
	| "GroupDM"
	| "GuildCategory"
	| "GuildAnnouncement"
	| "AnnouncementThread"
	| "PublicThread"
	| "PrivateThread"
	| "GuildStageVoice"
	| "GuildDirectory"
	| "GuildForum"
	| "GuildMedia"

type MediaSortOrder__DARKLUA_TYPE_cD = "LatestActivity" | "CreationDate"

type ForumSortOrder__DARKLUA_TYPE_cE = "LatestActivity" | "CreationDate"

type ForumLayout__DARKLUA_TYPE_cF = "NotSet" | "ListView" | "GalleryView"

type VideoQualityMode__DARKLUA_TYPE_cG = "Auto" | "Full"

type SelectMenuType__DARKLUA_TYPE_cH = "String" | "Text" | "User" | "Role" | "Mentionable" | "Channel"

type AbstractChannel__DARKLUA_TYPE_cI = {
	id: Snowflake__DARKLUA_TYPE_R?,
	type: ChannelType__DARKLUA_TYPE_cC,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	position: number,
	permission_overwrites: { OverwriteObject__DARKLUA_TYPE_bg },
	name: string,
	topic: string?,
	nsfw: boolean?,
	last_message_id: Snowflake__DARKLUA_TYPE_R?,
	bitrate: number?,
	user_limit: number?,
	rate_limit_per_user: number?,
	recipients: { UserObject__DARKLUA_TYPE_aY }?,
	icon: string?,
	owner_id: Snowflake__DARKLUA_TYPE_R?,
	application_id: Snowflake__DARKLUA_TYPE_R?,
	managed: boolean?,
	parent_id: Snowflake__DARKLUA_TYPE_R?,
	last_pin_timestamp: string?,
	rtc_region: string?,
	video_quality_mode: VideoQualityMode__DARKLUA_TYPE_cG?,
	message_count: number?,
	member_count: number?,
	thread_metadata: ThreadMetadataObject__DARKLUA_TYPE_bh?,
	member: ThreadMemberObject__DARKLUA_TYPE_bj?,
	default_auto_archive_duration: number?,
	permissions: string?,
	flags: ChannelFlags__DARKLUA_TYPE_ag?,
	total_message_sent: number?,
	available_tags: { ForumTagObject__DARKLUA_TYPE_bk }?,
	applied_tags: { Snowflake__DARKLUA_TYPE_R }?,
	default_reaction_emoji: DefaultReactionObject__DARKLUA_TYPE_bl?,
	default_thread_rate_limit_per_user: number?,
	default_sort_order: SortOrderType__DARKLUA_TYPE_ah?,
	default_forum_layout: ForumLayoutType__DARKLUA_TYPE_ai?,
}

type MembershipState__DARKLUA_TYPE_cJ = "Invited" | "Accepted"

type TeamRole__DARKLUA_TYPE_cK = "Owner" | "Admin" | "Developer" | "ReadOnly"

type IntegrationTypesConfig__DARKLUA_TYPE_cL = "GuildInstall" | "UserInstall"

type OAuth2Scopes__DARKLUA_TYPE_cM =
	"activities.read"
	| "activities.write"
	| "applications.builds.read"
	| "applications.builds.upload"
	| "applications.commands"
	| "applications.commands.update"
	| "applications.commands.permissions.update"
	| "applications.entitlements"
	| "applications.store.update"
	| "bot"
	| "connections"
	| "dm_channels.read"
	| "email"
	| "gdm.join"
	| "guilds"
	| "guilds.join"
	| "guilds.members.read"
	| "identify"
	| "messages.read"
	| "relationships.read"
	| "role_connections.write"
	| "rpc"
	| "rpc.activities.write"
	| "rpc.notifications.read"
	| "rpc.voice.read"
	| "rpc.voice.write"
	| "voice"
	| "webhook.incoming"

type ActivityType__DARKLUA_TYPE_cN = "Game" | "Streaming" | "Listening" | "Watching" | "Competing"

type Status__DARKLUA_TYPE_cO = "Online" | "DoNotDisturb" | "Idle" | "Invisible" | "Offline"

type Endpoint__DARKLUA_TYPE_cP =
	"CreateInteractionResponse"
	| "GetOriginalInteractionResponse"
	| "EditOriginalInteractionResponse"
	| "DeleteOriginalInteractionResponse"
	| "CreateFollowupMessage"
	| "GetFollowupMessage"
	| "EditFollowupMessage"
	| "DeleteFollowupMessage"
	| "GetGlobalApplicationCommands"
	| "CreateGlobalApplicationCommand"
	| "GetGlobalApplicationCommand"
	| "EditGlobalApplicationCommand"
	| "DeleteGlobalApplicationCommand"
	| "BulkOverwriteGlobalApplicationCommands"
	| "GetGuildApplicationCommands"
	| "CreateGuildApplicationCommand"
	| "GetGuildApplicationCommand"
	| "EditGuildApplicationCommand"
	| "DeleteGuildApplicationCommand"
	| "BulkOverwriteGuildApplicationCommands"
	| "GetGuildApplicationCommandPermissions"
	| "GetApplicationCommandPermissions"
	| "EditApplicationCommandPermissions"
	| "GetCurrentApplication"
	| "EditCurrentApplication"
	| "GetApplicationRoleConnectionMetadataRecords"
	| "UpdateApplicationRoleConnectionMetadataRecords"
	| "GetGuildAuditLog"
	| "BatchEditApplicationCommandPermissions"
	| "ListAutoModerationRulesForGuild"
	| "GetAutoModerationRule"
	| "CreateAutoModerationRule"
	| "ModifyAutoModerationRule"
	| "DeleteAutoModerationRule"
	| "GetChannel"
	| "ModifyChannel"
	| "DeleteOrCloseChannel"
	| "GetChannelMessages"
	| "GetChannelMessage"
	| "CreateMessage"
	| "CrosspostMessage"
	| "CreateReaction"
	| "DeleteOwnReaction"
	| "DeleteUserReaction"
	| "GetReactions"
	| "DeleteAllReactions"
	| "DeleteAllReactionsForEmoji"
	| "EditMessage"
	| "DeleteMessage"
	| "BulkDeleteMessages"
	| "EditChannelPermissions"
	| "GetChannelInvites"
	| "CreateChannelInvite"
	| "DeleteChannelPermission"
	| "FollowAnnouncementChannel"
	| "TriggerTypingChannel"
	| "GetPinnedMessages"
	| "PinMessage"
	| "UnpinMessage"
	| "GroupDMAddRecipient"
	| "GroupDMRemoveRecipient"
	| "StartThreadFromMessage"
	| "StartThreadWithoutMessage"
	| "StartThreadInForumOrMediaChannel"
	| "JoinThread"
	| "AddThreadMember"
	| "LeaveThread"
	| "RemoveThreadMember"
	| "GetThreadMember"
	| "ListThreadMembers"
	| "ListPublicArchivedThreads"
	| "ListPrivateArchivedThreads"
	| "ListJoinedPrivateArchivedThreads"
	| "ListGuildEmojis"
	| "GetGuildEmoji"
	| "CreateGuildEmoji"
	| "ModifyGuildEmoji"
	| "DeleteGuildEmoji"
	| "CreateGuild"
	| "GetGuild"
	| "GetGuildPreview"
	| "ModifyGuild"
	| "DeleteGuild"
	| "GetGuildChannels"
	| "CreateGuildChannel"
	| "ModifyGuildChannelPositions"
	| "ListActiveGuildThreads"
	| "GetGuildMember"
	| "ListGuildMembers"
	| "SearchGuildMembers"
	| "AddGuildMember"
	| "ModifyGuildMember"
	| "ModifyCurrentMember"
	| "ModifyCurrentUserNick"
	| "AddGuildMemberRole"
	| "RemoveGuildMemberRole"
	| "RemoveGuildMember"
	| "GetGuildBans"
	| "GetGuildBan"
	| "CreateGuildBan"
	| "RemoveGuildBan"
	| "BulkGuildBan"
	| "GetGuildRoles"
	| "CreateGuildRole"
	| "ModifyGuildRolePositions"
	| "ModifyGuildRole"
	| "ModifyGuildMFALevel"
	| "DeleteGuildRole"
	| "GetGuildPruneCount"
	| "BeginGuildPrune"
	| "GetGuildVoiceRegions"
	| "GetGuildInvites"
	| "GetGuildIntegrations"
	| "DeleteGuildIntegration"
	| "GetGuildWidgetSettings"
	| "ModifyGuildWidget"
	| "GetGuildWidget"
	| "GetGuildVanityURL"
	| "GetGuildWidgetImage"
	| "GetGuildWelcomeScreen"
	| "ModifyGuildWelcomeScreen"
	| "GetGuildOnboarding"
	| "ModifyGuildOnboarding"
	| "ModifyCurrentUserVoiceState"
	| "ModifyUserVoiceState"
	| "ListGuildScheduledForEvents"
	| "CreateGuildScheduledEvent"
	| "GetGuildScheduledEvent"
	| "ModifyGuildScheduledEvent"
	| "DeleteGuildScheduledEvent"
	| "GetGuildScheduledEventUsers"
	| "GetGuildTemplate"
	| "CreateGuildFromTemplate"
	| "GetGuildTemplates"
	| "CreateGuildTemplate"
	| "SyncGuildTemplate"
	| "ModifyGuildTemplate"
	| "DeleteGuildTemplate"
	| "GetInvite"
	| "DeleteInvite"
	| "GetAnswerVoters"
	| "EndPoll"
	| "CreateStageInstance"
	| "GetStageInstance"
	| "ModifyStageInstance"
	| "DeleteStageInstance"
	| "GetSticker"
	| "ListStickerPacks"
	| "ListGuildStickers"
	| "GetGuildSticker"
	| "CreateGuildSticker"
	| "ModifyGuildSticker"
	| "DeleteGuildSticker"
	| "GetCurrentUser"
	| "GetUser"
	| "ModifyCurrentUser"
	| "GetCurrentUserGuilds"
	| "GetCurrentUserGuildMember"
	| "LeaveGuild"
	| "CreateDM"
	| "CreateGroupDM"
	| "GetCurrentUserConnections"
	| "GetCurrentUserApplicationRolConnections"
	| "UpdateCurrentUserApplicationRoleConnection"
	| "ListVoiceRegions"
	| "CreateWebhook"
	| "GetChannelWebhooks"
	| "GetGuildWebhooks"
	| "GetWebhook"
	| "GetWebhookWithToken"
	| "ModifyWebhook"
	| "ModifyWebhookWithToken"
	| "DeleteWebhook"
	| "DeleteWebhookWithToken"
	| "ExecuteWebhook"
	| "ExecuteSlackCompatibleWebhook"
	| "ExecuteGithubCompatibleWebhook"
	| "GetWebhookMessage"
	| "EditWebhookMessage"
	| "DeleteWebhookMessage"
	| "GetGateway"
	| "GetGatewayBot"
	| "GetCurrentBotApplicationInformation"
	| "GetCurrentAuthorizationInformation"

type Response__DARKLUA_TYPE_cQ<DATA> = DATA

type Request__DARKLUA_TYPE_cR<DATA> = DATA

type CreateInteractionRequest__DARKLUA_TYPE_cS = Request__DARKLUA_TYPE_cR<InteractionResponseObject__DARKLUA_TYPE_cB>

type EditOriginalInteractionRequest__DARKLUA_TYPE_cT = Request__DARKLUA_TYPE_cR<
	Partial__DARKLUA_TYPE_Q<MessageObject__DARKLUA_TYPE_b0>
>

type CreateFollowupMessageRequest__DARKLUA_TYPE_cU = Request__DARKLUA_TYPE_cR<
	Partial__DARKLUA_TYPE_Q<MessageObject__DARKLUA_TYPE_b0>
>

type EditFollowupMessageRequest__DARKLUA_TYPE_cV = Request__DARKLUA_TYPE_cR<
	Partial__DARKLUA_TYPE_Q<MessageObject__DARKLUA_TYPE_b0>
>

type CreateAutoModerationRuleRequest__DARKLUA_TYPE_cW = Request__DARKLUA_TYPE_cR<{
	name: string,
	event_type: AutomoderationRuleEventType__DARKLUA_TYPE_aa,
	trigger_type: AutomoderationRuleTriggerType__DARKLUA_TYPE_ab,
	trigger_metadata: AutomoderationRuleTriggerMetadataObject__DARKLUA_TYPE_bc?,
	actions: { AutomoderationActionObject__DARKLUA_TYPE_be },
	enabled: boolean?,
	exempt_roles: { Snowflake__DARKLUA_TYPE_R }?,
	exempt_channels: { Snowflake__DARKLUA_TYPE_R }?,
}>

type ModifyAutoModerationRuleRequest__DARKLUA_TYPE_cX = Request__DARKLUA_TYPE_cR<{
	name: string,
	event_type: AutomoderationRuleEventType__DARKLUA_TYPE_aa,
	trigger_metadata: AutomoderationRuleTriggerMetadataObject__DARKLUA_TYPE_bc?,
	actions: { AutomoderationActionObject__DARKLUA_TYPE_be },
	enabled: boolean?,
	exempt_roles: { Snowflake__DARKLUA_TYPE_R }?,
	exempt_channels: { Snowflake__DARKLUA_TYPE_R }?,
}>

type EditCurrentApplicationRequest__DARKLUA_TYPE_cY = Request__DARKLUA_TYPE_cR<{
	custom_install_url: string,
	description: string,
	role_connections_verification_url: string,
	install_params: InstallParamsObject__DARKLUA_TYPE_a8,
	integration_types_config: { [IntegrationType__DARKLUA_TYPE_7]: unknown },
	flags: number,
	icon: string?,
	cover_image: string?,
	interactions_endpoint_url: string,
	tags: { string },
}>

type ModifyChannelRequest__DARKLUA_TYPE_cZ = Request__DARKLUA_TYPE_cR<{
	name: string?,
	type: ChannelType__DARKLUA_TYPE_ae,
	icon: string?,
	position: number?,
	topic: string?,
	nsfw: boolean?,
	rate_limit_per_user: number?,
	bitrate: number?,
	user_limit: number?,
	permission_overwrites: { OverwriteObject__DARKLUA_TYPE_bg }?,
	parent_id: Snowflake__DARKLUA_TYPE_R?,
	rtc_region: string?,
	video_quality_mode: VideoQualityMode__DARKLUA_TYPE_af,
	default_auto_archive_duration: number?,
	flags: number?,
	available_tags: { ForumTagObject__DARKLUA_TYPE_bk }?,
	default_reaction_emoji: DefaultReactionObject__DARKLUA_TYPE_bl?,
	default_thread_rate_limit_per_user: number?,
	default_sort_order: SortOrderType__DARKLUA_TYPE_ah?,
	default_forum_layout: ForumLayoutType__DARKLUA_TYPE_ai?,
}>

type CreateMessageRequest__DARKLUA_TYPE_c_ = Request__DARKLUA_TYPE_cR<{
	content: string?,
	nonce: (string | number)?,
	tts: boolean?,
	embeds: { EmbedObject__DARKLUA_TYPE_bF }?,
	allowed_mentions: AllowedMentionObject__DARKLUA_TYPE_cx?,
	message_reference: MessageReferenceObject__DARKLUA_TYPE_bJ?,
	components: { ComponentObjects__DARKLUA_TYPE_bS }?,
	sticker_ids: { Snowflake__DARKLUA_TYPE_R }?,

	attachments: { AttachmentObject__DARKLUA_TYPE_bx }?,
	flags: number?,
	enforce_nonce: boolean?,
	poll: PollObject__DARKLUA_TYPE_bZ?,
}>

type EditMessageRequest__DARKLUA_TYPE_c0 = Request__DARKLUA_TYPE_cR<{
	content: string?,
	embeds: { EmbedObject__DARKLUA_TYPE_bF }?,
	allowed_mentions: { AllowedMentionObject__DARKLUA_TYPE_cx }?,
	components: { ComponentObjects__DARKLUA_TYPE_bS }?,

	attachments: { AttachmentObject__DARKLUA_TYPE_bx }?,
	flags: number?,
}>

type CreateChannelInviteRequest__DARKLUA_TYPE_c1 = Request__DARKLUA_TYPE_cR<{
	max_age: number?,
	max_uses: number?,
	temporary: boolean?,
	unique: boolean?,
	target_type: InviteTargetTypes__DARKLUA_TYPE_aA?,
	target_user_id: Snowflake__DARKLUA_TYPE_R?,
	target_application_id: Snowflake__DARKLUA_TYPE_R?,
}>

type BulkDeleteMessagesRequest__DARKLUA_TYPE_c2 = Request__DARKLUA_TYPE_cR<{
	messages: { Snowflake__DARKLUA_TYPE_R },
}>

type FollowAnnouncementChannelRequest__DARKLUA_TYPE_c3 = Request__DARKLUA_TYPE_cR<{
	webhook_channel_id: Snowflake__DARKLUA_TYPE_R,
}>

type GroupDMAddRecipientRequest__DARKLUA_TYPE_c4 = Request__DARKLUA_TYPE_cR<{
	access_token: string,
	nick: string,
}>

type StartThreadFromMessageRequest__DARKLUA_TYPE_c5 = Request__DARKLUA_TYPE_cR<{
	name: string,
	auto_archive_duration: number?,
	rate_limit_per_user: number?,
}>

type StartThreadWithoutMessageRequest__DARKLUA_TYPE_c6 = Request__DARKLUA_TYPE_cR<{
	name: string,
	auto_archive_duration: number?,
	type: ChannelType__DARKLUA_TYPE_ae?,
	invitable: boolean?,
	rate_limit_per_user: number?,
}>

type StartThreadInForumOrMediaChannelRequest__DARKLUA_TYPE_c7 = Request__DARKLUA_TYPE_cR<{
	name: string,
	auto_archive_duration: number?,
	rate_limit_per_user: number?,

	applied_tags: { Snowflake__DARKLUA_TYPE_R }?,
	message: ForumAndMediaThreadMessageObject__DARKLUA_TYPE_cy?,
}>

type CreateGuildEmojiRequest__DARKLUA_TYPE_c8 = Request__DARKLUA_TYPE_cR<{
	name: string,
	image: string,
	roles: { Snowflake__DARKLUA_TYPE_R },
}>

type ModifyGuildEmojiRequest__DARKLUA_TYPE_c9 = Request__DARKLUA_TYPE_cR<{
	name: string,
	roles: { Snowflake__DARKLUA_TYPE_R },
}>

type CreateGuildRequest__DARKLUA_TYPE_da = Request__DARKLUA_TYPE_cR<{
	name: string,
	region: string?,
	icon: string?,
	verification_level: VerificationLevel__DARKLUA_TYPE_W?,
	default_message_notifications: DefaultMessageNotification__DARKLUA_TYPE_X?,
	explicit_content_filter: ExplicitContentFilterLevel__DARKLUA_TYPE_Y?,
	roles: { GuildRoleObject__DARKLUA_TYPE_a2 }?,
	channels: { ChannelObject__DARKLUA_TYPE_bm }?,
	afk_channel_id: Snowflake__DARKLUA_TYPE_R?,
	afk_timeout: number?,
	system_channel_id: Snowflake__DARKLUA_TYPE_R?,
	system_channel_flags: SystemChannelFlags__DARKLUA_TYPE_1?,
}>

type ModifyGuildRequest__DARKLUA_TYPE_db = Request__DARKLUA_TYPE_cR<Partial__DARKLUA_TYPE_Q<{
	name: string,
	verification_level: VerificationLevel__DARKLUA_TYPE_W?,
	default_message_notifications: DefaultMessageNotification__DARKLUA_TYPE_X?,
	explicit_content_filter: ExplicitContentFilterLevel__DARKLUA_TYPE_Y?,
	afk_channel_id: Snowflake__DARKLUA_TYPE_R?,
	afk_timeout: number?,
	icon: string?,
	owner_id: Snowflake__DARKLUA_TYPE_R,
	splash: string?,
	discovery_splash: string?,
	banner: string?,
	system_channel_id: Snowflake__DARKLUA_TYPE_R?,
	system_channel_flags: SystemChannelFlags__DARKLUA_TYPE_1?,
	rules_channel_id: Snowflake__DARKLUA_TYPE_R?,
	public_updates_channel_id: Snowflake__DARKLUA_TYPE_R?,
	preferred_locale: LanguageLocales__DARKLUA_TYPE_T?,
	features: { GuildFeature__DARKLUA_TYPE_2 }?,
	description: string?,
	premium_progress_bar_enabled: boolean?,
	safety_alerts_channel_id: Snowflake__DARKLUA_TYPE_R?,
}>>

type CreateGuildChannelRequest__DARKLUA_TYPE_dc = Request__DARKLUA_TYPE_cR<Partial__DARKLUA_TYPE_Q<{
	name: string,
	type: ChannelType__DARKLUA_TYPE_ae,
	topic: string?,
	bitrate: number?,
	user_limit: number?,
	rate_limit_per_user: number?,
	position: number,
	permission_overwrites: { OverwriteObject__DARKLUA_TYPE_bg },
	parent_id: Snowflake__DARKLUA_TYPE_R?,
	nsfw: boolean?,
	rtc_region: string?,
	video_quality_mode: VideoQualityMode__DARKLUA_TYPE_af?,
	default_auto_archive_duration: number?,
	default_reaction_emoji: EmojiObject__DARKLUA_TYPE_a3?,
	available_tags: { ForumTagObject__DARKLUA_TYPE_bk }?,
	default_sort_order: SortOrderType__DARKLUA_TYPE_ah?,
	default_forum_layout: ForumLayoutType__DARKLUA_TYPE_ai?,
	default_thread_rate_limit_per_user: number?,
}>>

type ModifyGuildChannelPositionsRequest__DARKLUA_TYPE_dd = Request__DARKLUA_TYPE_cR<{
	{
		id: Snowflake__DARKLUA_TYPE_R,
		position: number?,
		lock_permissions: boolean?,
		parent_id: Snowflake__DARKLUA_TYPE_R?,
	}
}>

type AddGuildMemberRequest__DARKLUA_TYPE_de = Request__DARKLUA_TYPE_cR<{
	access_token: string,
	nick: string?,
	roles: { Snowflake__DARKLUA_TYPE_R }?,
	mute: boolean?,
	deaf: boolean?,
}>

type ModifyGuildMemberRequest__DARKLUA_TYPE_df = Request__DARKLUA_TYPE_cR<{
	nick: string?,
	roles: { Snowflake__DARKLUA_TYPE_R }?,
	mute: boolean?,
	deaf: boolean?,
	channel_id: (Snowflake__DARKLUA_TYPE_R | boolean)?,
	communication_disabled_until: string?,
	flags: GuildMemberFlags__DARKLUA_TYPE_aM?,
}>

type ModifyCurrentMemberRequest__DARKLUA_TYPE_dg = Request__DARKLUA_TYPE_cR<{
	nick: string,
}>

type CreateGuildBanRequest__DARKLUA_TYPE_dh = Request__DARKLUA_TYPE_cR<{
	delete_message_days: number?,
	delete_message_seconds: number?,
}>

type BulkGuildBanRequest__DARKLUA_TYPE_di = Request__DARKLUA_TYPE_cR<{
	user_ids: { Snowflake__DARKLUA_TYPE_R },
	delete_message_seconds: number?,
}>

type CreateGuildRoleRequest__DARKLUA_TYPE_dj = Request__DARKLUA_TYPE_cR<{
	name: string?,
	permissions: string?,
	color: number?,
	hoist: boolean?,
	icon: string?,
	unicode_emoji: string?,
	mentionable: boolean?,
}>

type ModifyGuildRolePositionsRequest__DARKLUA_TYPE_dk = Request__DARKLUA_TYPE_cR<{
	id: Snowflake__DARKLUA_TYPE_R,
	position: number,
}>

type ModifyGuildRoleRequest__DARKLUA_TYPE_dl = Request__DARKLUA_TYPE_cR<{
	name: string?,
	permissions: string?,
	color: number?,
	hoist: boolean?,
	icon: string?,
	unicode_emoji: string?,
	mentionable: boolean?,
}>

type ModifyGuildMFALevelRequest__DARKLUA_TYPE_dm = Request__DARKLUA_TYPE_cR<{
	level: MFALevel__DARKLUA_TYPE_Z,
}>

type BeginGuildPruneRequest__DARKLUA_TYPE_dn = Request__DARKLUA_TYPE_cR<{
	days: number,
	compute_prune_count: boolean,
	include_ruoles: { Snowflake__DARKLUA_TYPE_R },
	reason: string?,
}>

type ModifyGuildWelcomeScreenRequest__DARKLUA_TYPE_do = Request__DARKLUA_TYPE_cR<{
	enabled: boolean?,
	welcome_channels: { WelcomeScreenChannelObject__DARKLUA_TYPE_a4 },
	description: string?,
}>

type ModifyGuildOnboardingRequest__DARKLUA_TYPE_dp = Request__DARKLUA_TYPE_cR<{
	prompts: { OnboardingPromptObject__DARKLUA_TYPE_co }?,
	default_channel_ids: { Snowflake__DARKLUA_TYPE_R }?,
	enabled: boolean?,
	mode: OnboardingMode__DARKLUA_TYPE_aG?,
}>

type ModifyCurrentUserVoiceStateRequest__DARKLUA_TYPE_dq = Request__DARKLUA_TYPE_cR<{
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	suppress: boolean?,
	request_to_speak_timestamp: string?,
}>

type ModifyUserVoiceStateRequest__DARKLUA_TYPE_dr = Request__DARKLUA_TYPE_cR<{
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	suppress: boolean?,
}>

type CreateGuildScheduledEventRequest__DARKLUA_TYPE_ds = Request__DARKLUA_TYPE_cR<{
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	entity_metadata: GuildScheduledEventEntityMetadata__DARKLUA_TYPE_bs,
	name: string,
	privacy_level: PrivacyLevel__DARKLUA_TYPE_am,
	scheduled_start_time: string,
	scheduled_end_time: string?,
	description: string?,
	entity_type: GuildScheduledEventEntityType__DARKLUA_TYPE_ao,
	image: string?,
}>

type ModifyGuildScheduledEventRequest__DARKLUA_TYPE_dt = Request__DARKLUA_TYPE_cR<{
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	entity_metadata: GuildScheduledEventEntityMetadata__DARKLUA_TYPE_bs,
	name: string,
	privacy_level: PrivacyLevel__DARKLUA_TYPE_am,
	scheduled_start_time: string,
	scheduled_end_time: string?,
	description: string?,
	entity_type: GuildScheduledEventEntityType__DARKLUA_TYPE_ao,
	status: GuildScheduledEventStatus__DARKLUA_TYPE_an?,
	image: string?,
}>

type CreateGuildFromGuildTemplateRequest__DARKLUA_TYPE_du = Request__DARKLUA_TYPE_cR<{
	name: string,
	icon: string?,
}>

type CreateGuildTemplateRequest__DARKLUA_TYPE_dv = Request__DARKLUA_TYPE_cR<{
	name: string,
	description: string?,
}>

type ModifyGuildTemplateRequest__DARKLUA_TYPE_dw = Request__DARKLUA_TYPE_cR<{
	name: string?,
	description: string?,
}>

type CreateStageInstanceRequest__DARKLUA_TYPE_dx = Request__DARKLUA_TYPE_cR<{
	channel_id: Snowflake__DARKLUA_TYPE_R,
	topic: string,
	privacy_level: PrivacyLevel__DARKLUA_TYPE_am?,
	send_start_notification: boolean?,
	guild_scheduled_event_id: Snowflake__DARKLUA_TYPE_R?,
}>

type ModifyStageInstanceRequest__DARKLUA_TYPE_dy = Request__DARKLUA_TYPE_cR<{
	topic: string,
	privacy_level: PrivacyLevel__DARKLUA_TYPE_am,
}>

type CreateGuildStickerRequest__DARKLUA_TYPE_dz = Request__DARKLUA_TYPE_cR<{
	name: string,
	description: string,
	tags: { string },
	file: string,
}>

type ModifyGuildStickerRequest__DARKLUA_TYPE_dA = Request__DARKLUA_TYPE_cR<{
	name: string,
	description: string?,
	tags: string,
}>

type ModifyCurrentUserRequest__DARKLUA_TYPE_dB = Request__DARKLUA_TYPE_cR<{
	username: string,
	avatar: string?,
	banner: string?,
}>

type CreateDMRequest__DARKLUA_TYPE_dC = Request__DARKLUA_TYPE_cR<{
	recipient_id: Snowflake__DARKLUA_TYPE_R,
}>

type CreateGroupDMRequest__DARKLUA_TYPE_dD = Request__DARKLUA_TYPE_cR<{
	access_tokens: { string },
	nicks: { [Snowflake__DARKLUA_TYPE_R]: string },
}>

type UpdateCurrentUserApplicationRoleConnectionRequest__DARKLUA_TYPE_dE = Request__DARKLUA_TYPE_cR<{
	platform_name: string?,
	platform_username: string?,
	metadata: ApplicationRoleConnectionMetadataObject__DARKLUA_TYPE_b5?,
}>

type CreateWebhookRequest__DARKLUA_TYPE_dF = Request__DARKLUA_TYPE_cR<{
	name: string,
	avatar: string?,
}>

type ModifyWebhookRequest__DARKLUA_TYPE_dG = Request__DARKLUA_TYPE_cR<{
	name: string,
	avatar: string,
	channel_id: Snowflake__DARKLUA_TYPE_R,
}>

type ExecuteWebhookRequest__DARKLUA_TYPE_dH = Request__DARKLUA_TYPE_cR<{
	content: string,
	username: string,
	avatar_url: string,
	tts: boolean,
	embeds: { EmbedObject__DARKLUA_TYPE_bF },
	allowed_mentions: AllowedMentionObject__DARKLUA_TYPE_cx,
	components: { ComponentObjects__DARKLUA_TYPE_bS },

	attachments: { AttachmentObject__DARKLUA_TYPE_bx },
	flags: number,
	thread_name: string,
	applied_tags: { Snowflake__DARKLUA_TYPE_R },
	poll: PollObject__DARKLUA_TYPE_bZ,
}>

type ExecuteSlackCompatibleWebhookRequest__DARKLUA_TYPE_dI = Request__DARKLUA_TYPE_cR<{}>

type ExecuteGithubCompatibleWebhookRequest__DARKLUA_TYPE_dJ = Request__DARKLUA_TYPE_cR<{}>

type EditWebhookMessageRequest__DARKLUA_TYPE_dK = Request__DARKLUA_TYPE_cR<{
	content: string,
	embeds: { EmbedObject__DARKLUA_TYPE_bF },
	allowed_mentions: AllowedMentionObject__DARKLUA_TYPE_cx,
	components: { ComponentObjects__DARKLUA_TYPE_bS },

	attachments: AttachmentObject__DARKLUA_TYPE_bx,
}>

type EditChannelPermissionsRequest__DARKLUA_TYPE_dL = Request__DARKLUA_TYPE_cR<{
	allow: string?,
	deny: string?,
	type: number,
}>

type ModifyGuildWidgetRequest__DARKLUA_TYPE_dM = Request__DARKLUA_TYPE_cR<GuildWidgetSettingsObject__DARKLUA_TYPE_cl>

type CreateGlobalApplicationCommandRequest__DARKLUA_TYPE_dN = Request__DARKLUA_TYPE_cR<{
	name: string,
	name_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	description: string?,
	description_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	options: { ApplicationCommandOptionObject__DARKLUA_TYPE_b7 }?,
	default_member_permissions: string?,
	dm_permission: boolean?,
	default_permission: boolean,
	integration_types: { IntegrationType__DARKLUA_TYPE_7 }?,
	contexts: { InteractionContextType__DARKLUA_TYPE_ay }?,
	type: ApplicationCommandType__DARKLUA_TYPE_aD?,
	nsfw: boolean?,
}>

type EditGlobalApplicationCommandRequest__DARKLUA_TYPE_dO = Request__DARKLUA_TYPE_cR<{
	name: string,
	name_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	description: string?,
	description_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	options: { ApplicationCommandOptionObject__DARKLUA_TYPE_b7 }?,
	default_member_permissions: string?,
	dm_permission: boolean?,
	default_permission: boolean,
	integration_types: { IntegrationType__DARKLUA_TYPE_7 }?,
	contexts: { InteractionContextType__DARKLUA_TYPE_ay }?,
	nsfw: boolean?,
}>

type CreateGuildApplicationCommandRequest__DARKLUA_TYPE_dP = Request__DARKLUA_TYPE_cR<{
	name: string,
	name_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	description: string?,
	description_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	options: { ApplicationCommandOptionObject__DARKLUA_TYPE_b7 }?,
	default_member_permissions: string?,
	dm_permission: boolean?,
	default_permission: boolean,
	integration_types: { IntegrationType__DARKLUA_TYPE_7 }?,
	contexts: { InteractionContextType__DARKLUA_TYPE_ay }?,
	type: ApplicationCommandType__DARKLUA_TYPE_aD?,
	nsfw: boolean?,
}>

type EditGuildApplicationCommandRequest__DARKLUA_TYPE_dQ = Request__DARKLUA_TYPE_cR<{
	name: string,
	name_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	description: string?,
	description_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
	options: { ApplicationCommandOptionObject__DARKLUA_TYPE_b7 }?,
	default_member_permissions: string?,
	dm_permission: boolean?,
	default_permission: boolean,
	integration_types: { IntegrationType__DARKLUA_TYPE_7 }?,
	contexts: { InteractionContextType__DARKLUA_TYPE_ay }?,
	nsfw: boolean?,
}>

type BulkOverwriteGlobalApplicationCommandsRequest__DARKLUA_TYPE_dR = Request__DARKLUA_TYPE_cR<
	{ ApplicationCommandObject__DARKLUA_TYPE_b8 }
>

type BulkOverwriteGuildApplicationCommandsRequest__DARKLUA_TYPE_dS = Request__DARKLUA_TYPE_cR<{
	{
		id: Snowflake__DARKLUA_TYPE_R?,
		name: string,
		name_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
		description: string?,
		description_localizations: { [LanguageLocales__DARKLUA_TYPE_T]: string }?,
		options: { ApplicationCommandOptionObject__DARKLUA_TYPE_b7 }?,
		default_member_permissions: string?,
		dm_permission: boolean?,
		default_permission: boolean,
		integration_types: { IntegrationType__DARKLUA_TYPE_7 }?,
		contexts: { InteractionContextType__DARKLUA_TYPE_ay }?,
		type: ApplicationCommandType__DARKLUA_TYPE_aD?,
		nsfw: boolean?,
	}
}>

type EditApplicationCommandPermissionsRequest__DARKLUA_TYPE_dT = Request__DARKLUA_TYPE_cR<{
	permissions: { GuildApplicationCommandPermissionObject__DARKLUA_TYPE_ba },
}>

type GetCurrentUserVoiceStateResponse__DARKLUA_TYPE_dU = Response__DARKLUA_TYPE_cQ<VoiceStateObject__DARKLUA_TYPE_bo>

type GetUserVoiceStateResponse__DARKLUA_TYPE_dV = Response__DARKLUA_TYPE_cQ<VoiceStateObject__DARKLUA_TYPE_bo>

type GetGlobalApplicationCommandsResponse__DARKLUA_TYPE_dW = Response__DARKLUA_TYPE_cQ<
	{ ApplicationCommandObject__DARKLUA_TYPE_b8 }
>

type CreateGlobalApplicationCommandResponse__DARKLUA_TYPE_dX = Response__DARKLUA_TYPE_cQ<
	ApplicationCommandObject__DARKLUA_TYPE_b8
>

type GetGlobalApplicationCommandResponse__DARKLUA_TYPE_dY = Response__DARKLUA_TYPE_cQ<
	ApplicationCommandObject__DARKLUA_TYPE_b8
>

type EditGlobalApplicationCommandResponse__DARKLUA_TYPE_dZ = Response__DARKLUA_TYPE_cQ<
	ApplicationCommandObject__DARKLUA_TYPE_b8
>

type DeleteGlobalApplicationCommandResponse__DARKLUA_TYPE_d_ = Response__DARKLUA_TYPE_cQ<nil>

type BulkOverwriteGlobalApplicationCommandsResponse__DARKLUA_TYPE_d0 = Response__DARKLUA_TYPE_cQ<
	{ ApplicationCommandObject__DARKLUA_TYPE_b8 }
>

type GetGuildApplicationCommandsResponse__DARKLUA_TYPE_d1 = Response__DARKLUA_TYPE_cQ<
	{ ApplicationCommandObject__DARKLUA_TYPE_b8 }
>

type CreateGuildApplicationCommandResponse__DARKLUA_TYPE_d2 = Response__DARKLUA_TYPE_cQ<
	ApplicationCommandObject__DARKLUA_TYPE_b8
>

type GetGuildApplicationCommandResponse__DARKLUA_TYPE_d3 = Response__DARKLUA_TYPE_cQ<
	ApplicationCommandObject__DARKLUA_TYPE_b8
>

type EditGuildApplicationCommandResponse__DARKLUA_TYPE_d4 = Response__DARKLUA_TYPE_cQ<
	ApplicationCommandObject__DARKLUA_TYPE_b8
>

type DeleteGuildApplicationCommandResponse__DARKLUA_TYPE_d5 = Response__DARKLUA_TYPE_cQ<nil>

type BulkOverwriteGuildApplicationCommandsResponse__DARKLUA_TYPE_d6 = Response__DARKLUA_TYPE_cQ<
	{ ApplicationCommandObject__DARKLUA_TYPE_b8 }
>

type GetGuildApplicationCommandPermissionsResponse__DARKLUA_TYPE_d7 = Response__DARKLUA_TYPE_cQ<
	{ GuildApplicationCommandPermissionsObject__DARKLUA_TYPE_bb }
>

type GetApplicationCommandPermissionsResponse__DARKLUA_TYPE_d8 = Response__DARKLUA_TYPE_cQ<
	{ GuildApplicationCommandPermissionsObject__DARKLUA_TYPE_bb }
>

type EditApplicationCommandPermissionsResponse__DARKLUA_TYPE_d9 = Response__DARKLUA_TYPE_cQ<
	GuildApplicationCommandPermissionsObject__DARKLUA_TYPE_bb
>

type GetCurrentApplicationResponse__DARKLUA_TYPE_ea = Response__DARKLUA_TYPE_cQ<{ ApplicationObject__DARKLUA_TYPE_a9 }>

type EditCurrentApplicationResponse__DARKLUA_TYPE_eb = Response__DARKLUA_TYPE_cQ<{ ApplicationObject__DARKLUA_TYPE_a9 }>

type GetApplicationRoleConnectionMetadataRecordsResponse__DARKLUA_TYPE_ec = Response__DARKLUA_TYPE_cQ<
	ApplicationRoleConnectionMetadataObject__DARKLUA_TYPE_b5
>

type UpdateApplicationRoleConnectionMetadataRecordsResponse__DARKLUA_TYPE_ed = Response__DARKLUA_TYPE_cQ<
	ApplicationRoleConnectionMetadataObject__DARKLUA_TYPE_b5
>

type GetGuildAuditLogResponse__DARKLUA_TYPE_ee = Response__DARKLUA_TYPE_cQ<AuditLogObject__DARKLUA_TYPE_cd>

type ListAutoModerationRulesForGuildResponse__DARKLUA_TYPE_ef = Response__DARKLUA_TYPE_cQ<
	{ AutomoderationRuleObject__DARKLUA_TYPE_bf }
>

type GetAutoModerationRuleResponse__DARKLUA_TYPE_eg = Response__DARKLUA_TYPE_cQ<
	AutomoderationRuleObject__DARKLUA_TYPE_bf
>

type CreateAutoModerationRuleResponse__DARKLUA_TYPE_eh = Response__DARKLUA_TYPE_cQ<
	AutomoderationRuleObject__DARKLUA_TYPE_bf
>

type ModifyAutoModerationRuleResponse__DARKLUA_TYPE_ei = Response__DARKLUA_TYPE_cQ<
	AutomoderationRuleObject__DARKLUA_TYPE_bf
>

type DeleteAutoModerationRuleResponse__DARKLUA_TYPE_ej = Response__DARKLUA_TYPE_cQ<nil>

type GetChannelResponse__DARKLUA_TYPE_ek = Response__DARKLUA_TYPE_cQ<
	ChannelObject__DARKLUA_TYPE_bm & (ThreadMemberObject__DARKLUA_TYPE_bj?)
>

type ModifyChannelResponse__DARKLUA_TYPE_el = Response__DARKLUA_TYPE_cQ<ChannelObject__DARKLUA_TYPE_bm>

type DeleteCloseChannelResponse__DARKLUA_TYPE_em = Response__DARKLUA_TYPE_cQ<ChannelObject__DARKLUA_TYPE_bm>

type GetChannelMessagesResponse__DARKLUA_TYPE_en = Response__DARKLUA_TYPE_cQ<{ MessageObject__DARKLUA_TYPE_b0 }>

type GetChannelMessageResponse__DARKLUA_TYPE_eo = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type CreateMessageResponse__DARKLUA_TYPE_ep = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type CrosspostMessageResponse__DARKLUA_TYPE_eq = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type CreateReactionResponse__DARKLUA_TYPE_er = Response__DARKLUA_TYPE_cQ<nil>

type DeleteOwnReactionResponse__DARKLUA_TYPE_es = Response__DARKLUA_TYPE_cQ<nil>

type DeleteUserReactionResponse__DARKLUA_TYPE_et = Response__DARKLUA_TYPE_cQ<nil>

type GetReactionsResponse__DARKLUA_TYPE_eu = Response__DARKLUA_TYPE_cQ<{ UserObject__DARKLUA_TYPE_aY }>

type DeleteAllReactionsResponse__DARKLUA_TYPE_ev = Response__DARKLUA_TYPE_cQ<nil>

type DeleteAllReactionsForEmojiResponse__DARKLUA_TYPE_ew = Response__DARKLUA_TYPE_cQ<nil>

type EditMessageResponse__DARKLUA_TYPE_ex = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type DeleteMessageResponse__DARKLUA_TYPE_ey = Response__DARKLUA_TYPE_cQ<nil>

type BulkDeleteMessageResponse__DARKLUA_TYPE_ez = Response__DARKLUA_TYPE_cQ<nil>

type EditChannelPermissionsResponse__DARKLUA_TYPE_eA = Response__DARKLUA_TYPE_cQ<nil>

type GetChannelInvitesResponse__DARKLUA_TYPE_eB = Response__DARKLUA_TYPE_cQ<
	{ InviteObject__DARKLUA_TYPE_ce & InviteMetadataObject__DARKLUA_TYPE_cg }
>

type CreateChannelInviteResponse__DARKLUA_TYPE_eC = Response__DARKLUA_TYPE_cQ<InviteObject__DARKLUA_TYPE_ce>

type DeleteChannelPermissionResponse__DARKLUA_TYPE_eD = Response__DARKLUA_TYPE_cQ<nil>

type FollowAnnouncementChannelResponse__DARKLUA_TYPE_eE = Response__DARKLUA_TYPE_cQ<
	FollowedChannelObject__DARKLUA_TYPE_ch
>

type TriggerTypingIndicatorResponse__DARKLUA_TYPE_eF = Response__DARKLUA_TYPE_cQ<nil>

type GetPinnedMessagesResponse__DARKLUA_TYPE_eG = Response__DARKLUA_TYPE_cQ<{ MessageObject__DARKLUA_TYPE_b0 }>

type PinMessageResponse__DARKLUA_TYPE_eH = Response__DARKLUA_TYPE_cQ<nil>

type UnpinMessageResponse__DARKLUA_TYPE_eI = Response__DARKLUA_TYPE_cQ<nil>

type GroupDMAddRecipientResponse__DARKLUA_TYPE_eJ = Response__DARKLUA_TYPE_cQ<nil>

type GroupDMRemoveRecipientResponse__DARKLUA_TYPE_eK = Response__DARKLUA_TYPE_cQ<nil>

type StartThreadFromMessageResponse__DARKLUA_TYPE_eL = Response__DARKLUA_TYPE_cQ<ChannelObject__DARKLUA_TYPE_bm>

type StartThreadWithoutMessageResponse__DARKLUA_TYPE_eM = Response__DARKLUA_TYPE_cQ<ChannelObject__DARKLUA_TYPE_bm>

type StartThreadInForumOrMediaChannelResponse__DARKLUA_TYPE_eN = Response__DARKLUA_TYPE_cQ<
	ChannelObject__DARKLUA_TYPE_bm
>

type JoinThreadResponse__DARKLUA_TYPE_eO = Response__DARKLUA_TYPE_cQ<nil>

type AddThreadMemberResponse__DARKLUA_TYPE_eP = Response__DARKLUA_TYPE_cQ<nil>

type LeaveThreadResponse__DARKLUA_TYPE_eQ = Response__DARKLUA_TYPE_cQ<nil>

type RemoveThreadMemberResponse__DARKLUA_TYPE_eR = Response__DARKLUA_TYPE_cQ<nil>

type GetThreadMemberResponse__DARKLUA_TYPE_eS = Response__DARKLUA_TYPE_cQ<ThreadMemberObject__DARKLUA_TYPE_bj>

type ListThreadMembersResponse__DARKLUA_TYPE_eT = Response__DARKLUA_TYPE_cQ<{ ThreadMemberObject__DARKLUA_TYPE_bj }>

type ListPublicArchivedThreadsResponse__DARKLUA_TYPE_eU = Response__DARKLUA_TYPE_cQ<{
	threads: { ChannelObject__DARKLUA_TYPE_bm },
	members: { ThreadMemberObject__DARKLUA_TYPE_bj },
	has_more: boolean,
}>

type ListPrivateArchivedThreadsResponse__DARKLUA_TYPE_eV = Response__DARKLUA_TYPE_cQ<{
	threads: { ChannelObject__DARKLUA_TYPE_bm },
	members: { ThreadMemberObject__DARKLUA_TYPE_bj },
	has_more: boolean,
}>

type ListJoinedPrivateArchivedThreadsResponse__DARKLUA_TYPE_eW = Response__DARKLUA_TYPE_cQ<{
	threads: { ChannelObject__DARKLUA_TYPE_bm },
	members: { ThreadMemberObject__DARKLUA_TYPE_bj },
	has_more: boolean,
}>

type ListGuildEmojisResponse__DARKLUA_TYPE_eX = Response__DARKLUA_TYPE_cQ<{ EmojiObject__DARKLUA_TYPE_a3 }>

type GetGuildEmojiResponse__DARKLUA_TYPE_eY = Response__DARKLUA_TYPE_cQ<EmojiObject__DARKLUA_TYPE_a3>

type CreateGuildEmojiResponse__DARKLUA_TYPE_eZ = Response__DARKLUA_TYPE_cQ<EmojiObject__DARKLUA_TYPE_a3>

type ModifyGuildEmojiResponse__DARKLUA_TYPE_e_ = Response__DARKLUA_TYPE_cQ<EmojiObject__DARKLUA_TYPE_a3>

type DeleteGuildEmojiResponse__DARKLUA_TYPE_e0 = Response__DARKLUA_TYPE_cQ<nil>

type CreateGuildResponse__DARKLUA_TYPE_e1 = Response__DARKLUA_TYPE_cQ<GuildObject__DARKLUA_TYPE_a7>

type GetGuildResponse__DARKLUA_TYPE_e2 = Response__DARKLUA_TYPE_cQ<GuildObject__DARKLUA_TYPE_a7>

type GetGuildPreviewResponse__DARKLUA_TYPE_e3 = Response__DARKLUA_TYPE_cQ<GuildPreviewObject__DARKLUA_TYPE_ci>

type ModifyGuildResponse__DARKLUA_TYPE_e4 = Response__DARKLUA_TYPE_cQ<GuildObject__DARKLUA_TYPE_a7>

type DeleteGuildResponse__DARKLUA_TYPE_e5 = Response__DARKLUA_TYPE_cQ<nil>

type GetGuildChannelsResponse__DARKLUA_TYPE_e6 = Response__DARKLUA_TYPE_cQ<{ ChannelObject__DARKLUA_TYPE_bm }>

type CreateGuildChannelResponse__DARKLUA_TYPE_e7 = Response__DARKLUA_TYPE_cQ<ChannelObject__DARKLUA_TYPE_bm>

type ModifyGuildChannelPositionsResponse__DARKLUA_TYPE_e8 = Response__DARKLUA_TYPE_cQ<nil>

type ListActiveGuildThreadsResponse__DARKLUA_TYPE_e9 = Response__DARKLUA_TYPE_cQ<{
	threads: { ChannelObject__DARKLUA_TYPE_bm },
	members: { ThreadMemberObject__DARKLUA_TYPE_bj },
}>

type GetGuildMemberResponse__DARKLUA_TYPE_fa = Response__DARKLUA_TYPE_cQ<GuildMemberObject__DARKLUA_TYPE_bi>

type ListGuildMembersResponse__DARKLUA_TYPE_fb = Response__DARKLUA_TYPE_cQ<{ GuildMemberObject__DARKLUA_TYPE_bi }>

type SearchGuildMembersResponse__DARKLUA_TYPE_fc = Response__DARKLUA_TYPE_cQ<{ GuildMemberObject__DARKLUA_TYPE_bi }>

type AddGuildMemberResponse__DARKLUA_TYPE_fd = Response__DARKLUA_TYPE_cQ<GuildMemberObject__DARKLUA_TYPE_bi>

type ModifyGuildMemberResponse__DARKLUA_TYPE_fe = Response__DARKLUA_TYPE_cQ<GuildMemberObject__DARKLUA_TYPE_bi>

type ModifyCurrentMemberResponse__DARKLUA_TYPE_ff = Response__DARKLUA_TYPE_cQ<GuildMemberObject__DARKLUA_TYPE_bi>

type AddGuildMemberRoleResponse__DARKLUA_TYPE_fg = Response__DARKLUA_TYPE_cQ<nil>

type RemoveGuildMemberRoleResponse__DARKLUA_TYPE_fh = Response__DARKLUA_TYPE_cQ<nil>

type RemoveGuildMemberResponse__DARKLUA_TYPE_fi = Response__DARKLUA_TYPE_cQ<nil>

type GetGuildBansResponse__DARKLUA_TYPE_fj = Response__DARKLUA_TYPE_cQ<{ BanObject__DARKLUA_TYPE_cj }>

type GetGuildBanResponse__DARKLUA_TYPE_fk = Response__DARKLUA_TYPE_cQ<BanObject__DARKLUA_TYPE_cj>

type CreateGuildBanResponse__DARKLUA_TYPE_fl = Response__DARKLUA_TYPE_cQ<nil>

type RemoveGuildBanResponse__DARKLUA_TYPE_fm = Response__DARKLUA_TYPE_cQ<nil>

type BulkGuildBanResponse__DARKLUA_TYPE_fn = Response__DARKLUA_TYPE_cQ<{
	banned_users: { Snowflake__DARKLUA_TYPE_R },
	failed_users: { Snowflake__DARKLUA_TYPE_R },
}>

type GetGuildRolesResponse__DARKLUA_TYPE_fo = Response__DARKLUA_TYPE_cQ<{ GuildRoleObject__DARKLUA_TYPE_a2 }>

type GetGuildRoleResponse__DARKLUA_TYPE_fp = Response__DARKLUA_TYPE_cQ<GuildRoleObject__DARKLUA_TYPE_a2>

type CreateGuildRoleResponse__DARKLUA_TYPE_fq = Response__DARKLUA_TYPE_cQ<GuildRoleObject__DARKLUA_TYPE_a2>

type ModifyGuildRolePositionsResponse__DARKLUA_TYPE_fr = Response__DARKLUA_TYPE_cQ<{ GuildRoleObject__DARKLUA_TYPE_a2 }>

type ModifyGuildRoleResponse__DARKLUA_TYPE_fs = Response__DARKLUA_TYPE_cQ<GuildRoleObject__DARKLUA_TYPE_a2>

type ModifyGuildMFALevelResponse__DARKLUA_TYPE_ft = Response__DARKLUA_TYPE_cQ<unknown>

type DeleteGuildRoleResponse__DARKLUA_TYPE_fu = Response__DARKLUA_TYPE_cQ<nil>

type GetGuildPruneCountResponse__DARKLUA_TYPE_fv = Response__DARKLUA_TYPE_cQ<{ pruned: number }>

type BeginGuildPruneResponse__DARKLUA_TYPE_fw = Response__DARKLUA_TYPE_cQ<{ pruned: number }>

type GetGuildVoiceRegionsResponse__DARKLUA_TYPE_fx = Response__DARKLUA_TYPE_cQ<{ VoiceRegionObject__DARKLUA_TYPE_ck }>

type GetGuildInvitesResponse__DARKLUA_TYPE_fy = Response__DARKLUA_TYPE_cQ<
	{ InviteObject__DARKLUA_TYPE_ce & InviteMetadataObject__DARKLUA_TYPE_cg }
>

type GetGuildIntegrationsResponse__DARKLUA_TYPE_fz = Response__DARKLUA_TYPE_cQ<{ IntegrationObject__DARKLUA_TYPE_bv }>

type DeleteGuildIntegrationResponse__DARKLUA_TYPE_fA = Response__DARKLUA_TYPE_cQ<nil>

type GetGuildWidgetSettingsResponse__DARKLUA_TYPE_fB = Response__DARKLUA_TYPE_cQ<
	GuildWidgetSettingsObject__DARKLUA_TYPE_cl
>

type ModifyGuildWidgetResponse__DARKLUA_TYPE_fC = Response__DARKLUA_TYPE_cQ<GuildWidgetSettingsObject__DARKLUA_TYPE_cl>

type GetGuildWidgetResponse__DARKLUA_TYPE_fD = Response__DARKLUA_TYPE_cQ<GuildWidgetObject__DARKLUA_TYPE_cm>

type GetGuildVanityUrlResponse__DARKLUA_TYPE_fE = Response__DARKLUA_TYPE_cQ<GuildVanityUrl__DARKLUA_TYPE_cf>

type GetGuildWidgetImageResponse__DARKLUA_TYPE_fF = Response__DARKLUA_TYPE_cQ<string>

type GetGuildWelcomeScreenResponse__DARKLUA_TYPE_fG = Response__DARKLUA_TYPE_cQ<WelcomeScreenObject__DARKLUA_TYPE_a5>

type ModifyGuildWelcomeScreenResponse__DARKLUA_TYPE_fH = Response__DARKLUA_TYPE_cQ<WelcomeScreenObject__DARKLUA_TYPE_a5>

type GetGuildOnboardingResponse__DARKLUA_TYPE_fI = Response__DARKLUA_TYPE_cQ<GuildOnboardingObject__DARKLUA_TYPE_cp>

type ModifyGuildOnboardingResponse__DARKLUA_TYPE_fJ = Response__DARKLUA_TYPE_cQ<GuildOnboardingObject__DARKLUA_TYPE_cp>

type ModifyCurrentUserVoiceStateResponse__DARKLUA_TYPE_fK = Response__DARKLUA_TYPE_cQ<nil>

type ModifyUserVoiceStateResponse__DARKLUA_TYPE_fL = Response__DARKLUA_TYPE_cQ<unknown>

type ListScheduledEventsForGuildResponse__DARKLUA_TYPE_fM = Response__DARKLUA_TYPE_cQ<
	{ GuildScheduledEventObject__DARKLUA_TYPE_bt }
>

type CreateGuildScheduledEventResponse__DARKLUA_TYPE_fN = Response__DARKLUA_TYPE_cQ<
	GuildScheduledEventObject__DARKLUA_TYPE_bt
>

type GetGuildScheduledEventResponse__DARKLUA_TYPE_fO = Response__DARKLUA_TYPE_cQ<
	GuildScheduledEventObject__DARKLUA_TYPE_bt
>

type ModifyGuildScheduledEventResponse__DARKLUA_TYPE_fP = Response__DARKLUA_TYPE_cQ<
	GuildScheduledEventObject__DARKLUA_TYPE_bt
>

type DeleteGuildScheduledEventResponse__DARKLUA_TYPE_fQ = Response__DARKLUA_TYPE_cQ<nil>

type GetGuildScheduledEventUsersResponse__DARKLUA_TYPE_fR = Response__DARKLUA_TYPE_cQ<
	{ GuildScheduledEventUserObject__DARKLUA_TYPE_cq }
>

type GetGuildTemplateResponse__DARKLUA_TYPE_fS = Response__DARKLUA_TYPE_cQ<GuildTemplateObject__DARKLUA_TYPE_cr>

type CreateGuildFromGuildTemplateResponse__DARKLUA_TYPE_fT = Response__DARKLUA_TYPE_cQ<GuildObject__DARKLUA_TYPE_a7>

type GetGuildTemplatesResponse__DARKLUA_TYPE_fU = Response__DARKLUA_TYPE_cQ<GuildTemplateObject__DARKLUA_TYPE_cr>

type CreateGuildTemplateResponse__DARKLUA_TYPE_fV = Response__DARKLUA_TYPE_cQ<GuildTemplateObject__DARKLUA_TYPE_cr>

type SyncGuildTemplateResponse__DARKLUA_TYPE_fW = Response__DARKLUA_TYPE_cQ<GuildTemplateObject__DARKLUA_TYPE_cr>

type ModifyGuildTemplateResponse__DARKLUA_TYPE_fX = Response__DARKLUA_TYPE_cQ<GuildTemplateObject__DARKLUA_TYPE_cr>

type DeleteGuildTemplateResponse__DARKLUA_TYPE_fY = Response__DARKLUA_TYPE_cQ<GuildTemplateObject__DARKLUA_TYPE_cr>

type GetInviteResponse__DARKLUA_TYPE_fZ = Response__DARKLUA_TYPE_cQ<InviteObject__DARKLUA_TYPE_ce>

type DeleteInviteResponse__DARKLUA_TYPE_f_ = Response__DARKLUA_TYPE_cQ<InviteObject__DARKLUA_TYPE_ce>

type GetAnswerVotersResponse__DARKLUA_TYPE_f0 = Response__DARKLUA_TYPE_cQ<{ UserObject__DARKLUA_TYPE_aY }>

type EndPollResponse__DARKLUA_TYPE_f1 = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type CreateStageInstanceResponse__DARKLUA_TYPE_f2 = Response__DARKLUA_TYPE_cQ<StageInstanceObject__DARKLUA_TYPE_br>

type GetStageInstanceResponse__DARKLUA_TYPE_f3 = Response__DARKLUA_TYPE_cQ<StageInstanceObject__DARKLUA_TYPE_br>

type ModifyStageInstanceResponse__DARKLUA_TYPE_f4 = Response__DARKLUA_TYPE_cQ<StageInstanceObject__DARKLUA_TYPE_br>

type DeleteStageInstanceResponse__DARKLUA_TYPE_f5 = Response__DARKLUA_TYPE_cQ<nil>

type GetStickerResponse__DARKLUA_TYPE_f6 = Response__DARKLUA_TYPE_cQ<StickerObject__DARKLUA_TYPE_a6>

type ListStickerPacksResponse__DARKLUA_TYPE_f7 = Response__DARKLUA_TYPE_cQ<{
	sticker_packs: { StickerPackObject__DARKLUA_TYPE_cs },
}>

type ListGuildStickersResponse__DARKLUA_TYPE_f8 = Response__DARKLUA_TYPE_cQ<{ StickerObject__DARKLUA_TYPE_a6 }>

type GetGuildStickerResponse__DARKLUA_TYPE_f9 = Response__DARKLUA_TYPE_cQ<StickerObject__DARKLUA_TYPE_a6>

type CreateGuildStickerResponse__DARKLUA_TYPE_ga = Response__DARKLUA_TYPE_cQ<StickerObject__DARKLUA_TYPE_a6>

type ModifyGuildStickerResponse__DARKLUA_TYPE_gb = Response__DARKLUA_TYPE_cQ<StickerObject__DARKLUA_TYPE_a6>

type DeleteGuildStickerResponse__DARKLUA_TYPE_gc = Response__DARKLUA_TYPE_cQ<nil>

type GetCurrentUserResponse__DARKLUA_TYPE_gd = Response__DARKLUA_TYPE_cQ<UserObject__DARKLUA_TYPE_aY>

type GetUserResponse__DARKLUA_TYPE_ge = Response__DARKLUA_TYPE_cQ<UserObject__DARKLUA_TYPE_aY>

type ModifyCurrentUserResponse__DARKLUA_TYPE_gf = Response__DARKLUA_TYPE_cQ<UserObject__DARKLUA_TYPE_aY>

type GetCurrentUserGuildsResponse__DARKLUA_TYPE_gg = Response__DARKLUA_TYPE_cQ<{ GuildObject__DARKLUA_TYPE_a7 }>

type GetCurrentUserGuildMemberResponse__DARKLUA_TYPE_gh = Response__DARKLUA_TYPE_cQ<GuildMemberObject__DARKLUA_TYPE_bi>

type LeaveGuildResponse__DARKLUA_TYPE_gi = Response__DARKLUA_TYPE_cQ<nil>

type CreateDMResponse__DARKLUA_TYPE_gj = Response__DARKLUA_TYPE_cQ<ChannelObject__DARKLUA_TYPE_bm>

type CreateGroupDMResponse__DARKLUA_TYPE_gk = Response__DARKLUA_TYPE_cQ<ChannelObject__DARKLUA_TYPE_bm>

type GetCurrentUserConnectionResponse__DARKLUA_TYPE_gl = Response__DARKLUA_TYPE_cQ<ConnectionObject__DARKLUA_TYPE_cu>

type GetCurrentUserApplicationRoleConnectionResponse__DARKLUA_TYPE_gm = Response__DARKLUA_TYPE_cQ<
	ApplicationRoleConnectionObject__DARKLUA_TYPE_cv
>

type UpdateCurrentUserApplicationRoleConnectionResponse__DARKLUA_TYPE_gn = Response__DARKLUA_TYPE_cQ<
	ApplicationRoleConnectionObject__DARKLUA_TYPE_cv
>

type ListVoiceRegionsResponse__DARKLUA_TYPE_go = Response__DARKLUA_TYPE_cQ<{ VoiceRegionObject__DARKLUA_TYPE_ck }>

type CreateWebhookResponse__DARKLUA_TYPE_gp = Response__DARKLUA_TYPE_cQ<WebhookObject__DARKLUA_TYPE_cc>

type GetChannelWebhooksResponse__DARKLUA_TYPE_gq = Response__DARKLUA_TYPE_cQ<{ WebhookObject__DARKLUA_TYPE_cc }>

type GetGuildWebhooksResponse__DARKLUA_TYPE_gr = Response__DARKLUA_TYPE_cQ<{ WebhookObject__DARKLUA_TYPE_cc }>

type GetWebhookResponse__DARKLUA_TYPE_gs = Response__DARKLUA_TYPE_cQ<WebhookObject__DARKLUA_TYPE_cc>

type GetWebhookWithTokenResponse__DARKLUA_TYPE_gt = Response__DARKLUA_TYPE_cQ<WebhookObject__DARKLUA_TYPE_cc>

type ModifyWebhookResponse__DARKLUA_TYPE_gu = Response__DARKLUA_TYPE_cQ<WebhookObject__DARKLUA_TYPE_cc>

type ModifyWebhookWithTokenResponse__DARKLUA_TYPE_gv = Response__DARKLUA_TYPE_cQ<WebhookObject__DARKLUA_TYPE_cc>

type DeleteWebhookResponse__DARKLUA_TYPE_gw = Response__DARKLUA_TYPE_cQ<nil>

type DeleteWebhookWitHTokenResponse__DARKLUA_TYPE_gx = Response__DARKLUA_TYPE_cQ<nil>

type ExecuteWebhookResponse__DARKLUA_TYPE_gy = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0?>

type ExecuteSlackCompatibleWebhookResponse__DARKLUA_TYPE_gz = Response__DARKLUA_TYPE_cQ<unknown>

type ExecuteGitCompatibleWebhookResponse__DARKLUA_TYPE_gA = Response__DARKLUA_TYPE_cQ<unknown>

type GetWebhookMessageResponse__DARKLUA_TYPE_gB = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type EditWebhookMessageResponse__DARKLUA_TYPE_gC = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type DeleteWebhookMessageResponse__DARKLUA_TYPE_gD = Response__DARKLUA_TYPE_cQ<nil>

type GetGatewayResponse__DARKLUA_TYPE_gE = Response__DARKLUA_TYPE_cQ<{
	url: string,
}>

type GetGatewayBotResponse__DARKLUA_TYPE_gF = Response__DARKLUA_TYPE_cQ<{
	url: string,
	shards: number,
	session_start_limit: SessionStartLimitObject__DARKLUA_TYPE_cw,
}>

type CreateInteractionResponse__DARKLUA_TYPE_gG = Response__DARKLUA_TYPE_cQ<{
	resource: {
		message: MessageObject__DARKLUA_TYPE_b0?,
	},
}>

type GetOriginalInteractionResponse__DARKLUA_TYPE_gH = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type EditOriginalInteractionResponse__DARKLUA_TYPE_gI = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type DeleteOriginalInteractionResponse__DARKLUA_TYPE_gJ = Response__DARKLUA_TYPE_cQ<nil>

type CreateFollowupMessageResponse__DARKLUA_TYPE_gK = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type GetFollowupMessageResponse__DARKLUA_TYPE_gL = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type EditFollowupMessageResponse__DARKLUA_TYPE_gM = Response__DARKLUA_TYPE_cQ<MessageObject__DARKLUA_TYPE_b0>

type DeleteFollowupMessageResponse__DARKLUA_TYPE_gN = Response__DARKLUA_TYPE_cQ<nil>

type CloseCode__DARKLUA_TYPE_gO =
	"UnknownError"
	| "UnknownOpcode"
	| "DecodeError"
	| "NotAuthenticated"
	| "AuthenticationFailed"
	| "AlreadyAuthenticated"
	| "InvalidSeq"
	| "Ratelimited"
	| "SessionTimedOut"
	| "InvalidShard"
	| "ShardingRequired"
	| "InvalidAPIVersion"
	| "InvalidIntents"
	| "DisallowedIntents"

type Intent__DARKLUA_TYPE_gP =
	"Guilds"
	| "GuildMembers"
	| "GuildModeration"
	| "GuildEmojisAndStickers"
	| "GuildIntegrations"
	| "GuildWebhooks"
	| "GuildInvites"
	| "GuildVoiceStates"
	| "GuildPresences"
	| "GuildMessages"
	| "GuildMessageReactions"
	| "GuildMessageTyping"
	| "DirectMessages"
	| "DirectMessageReactions"
	| "DirectMessageTyping"
	| "MessageContent"
	| "GuildScheduleEvents"
	| "AutoModerationConfiguration"
	| "AutoModerationExecution"
	| "GuildMessagePolls"
	| "DirectMessagePolls"

type Opcode__DARKLUA_TYPE_gQ =
	"Dispatch"
	| "Heartbeat"
	| "Identify"
	| "PresenceUpdate"
	| "VoiceStateUpdate"
	| "Resume"
	| "Reconnect"
	| "RequestGuildMembers"
	| "InvalidSession"
	| "Hello"
	| "HeartbeatACK"

type ReceiveEvent__DARKLUA_TYPE_gR =
	"Hello"
	| "Ready"
	| "Resumed"
	| "Reconnect"
	| "InvalidSession"
	| "ApplicationCommandPermissionsUpdate"
	| "AutoModerationRuleCreate"
	| "AutoModerationRuleUpdate"
	| "AutoModerationRuleDelete"
	| "AutoModerationActionExecution"
	| "ChannelCreate"
	| "ChannelUpdate"
	| "ChannelDelete"
	| "ChannelPinsUpdate"
	| "ThreadCreate"
	| "ThreadUpdate"
	| "ThreadDelete"
	| "ThreadListSync"
	| "ThreadMemberUpdate"
	| "ThreadMembersUpdate"
	| "EntitlementCreate"
	| "EntitlementUpdate"
	| "EntitlementDelete"
	| "GuildCreate"
	| "GuildUpdate"
	| "GuildDelete"
	| "GuildAuditLogEntryCreate"
	| "GuildBanAdd"
	| "GuildBanRemove"
	| "GuildEmojisUpdate"
	| "GuildStickersUpdate"
	| "GuildIntegrationsUpdate"
	| "GuildMemberAdd"
	| "GuildMemberRemove"
	| "GuildMemberUpdate"
	| "GuildMembersChunk"
	| "GuildRoleCreate"
	| "GuildRoleDelete"
	| "GuildRoleUpdate"
	| "GuildScheduledEventCreate"
	| "GuildScheduledEventUpdate"
	| "GuildScheduledEventDelete"
	| "GuildScheduledEventUserAdd"
	| "GuildScheduledEventUserRemove"
	| "IntegrationCreate"
	| "IntegrationUpdate"
	| "IntegrationDelete"
	| "InteractionCreate"
	| "InviteCreate"
	| "InviteDelete"
	| "MessageCreate"
	| "MessageUpdate"
	| "MessageDelete"
	| "MessageDeleteBulk"
	| "MessageReactionAdd"
	| "MessageReactionRemove"
	| "MessageReactionRemoveAll"
	| "MessageReactionRemoveEmoji"
	| "PresenceUpdate"
	| "StageInstanceCreate"
	| "StageInstanceUpdate"
	| "StageInstanceDelete"
	| "TypingStart"
	| "UserUpdate"
	| "VoiceStateUpdate"
	| "VoiceServerUpdate"
	| "WebhooksUpdate"
	| "MessagePollVoteAdd"
	| "MessagePollVoteRemove"

type SendEvent__DARKLUA_TYPE_gS =
	"Identify"
	| "Resume"
	| "Heartbeat"
	| "RequestGuildMembers"
	| "UpdateVoiceState"
	| "UpdatePresence"

type Payload__DARKLUA_TYPE_gT<DATA> = {
	op: number,
	d: DATA,
	s: number?,
	t: string?,
}

type IdentifyPayload__DARKLUA_TYPE_gU = Payload__DARKLUA_TYPE_gT<{
	token: string,
	properties: IdentifyPropertiesObject__DARKLUA_TYPE_aW,
	compress: boolean?,
	large_threshold: number?,
	shard: { number }?,
	presence: ActivityObject__DARKLUA_TYPE_aU?,
	intents: number,
}>

type ResumePayload__DARKLUA_TYPE_gV = Payload__DARKLUA_TYPE_gT<{
	token: string,
	session_id: string,
	seq: number,
}>

type HeartbeatPayload__DARKLUA_TYPE_gW = Payload__DARKLUA_TYPE_gT<number>

type RequestGuildMembersPayload__DARKLUA_TYPE_gX = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	query: string?,
	limit: number,
	presences: boolean?,
	user_ids: { Snowflake__DARKLUA_TYPE_R }?,
	nonce: string?,
}>

type UpdateVoiceStatePayload__DARKLUA_TYPE_gY = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	channel_id: string?,
	self_mute: boolean,
	self_deaf: boolean,
}>

type UpdatePresencePayload__DARKLUA_TYPE_gZ = Payload__DARKLUA_TYPE_gT<PresenceObject__DARKLUA_TYPE_aV>

type HelloPayload__DARKLUA_TYPE_g_ = Payload__DARKLUA_TYPE_gT<{
	heartbeat_interval: number,
}>

type ReadyPayload__DARKLUA_TYPE_g0 = Payload__DARKLUA_TYPE_gT<{
	v: number,
	user: UserObject__DARKLUA_TYPE_aY,
	guilds: { UnavailableGuildObject__DARKLUA_TYPE_aZ },
	session_id: string,
	resume_gateway_url: string,
	shard: { number }?,
	application: ApplicationObject__DARKLUA_TYPE_a9,
}>

type ResumedPayload__DARKLUA_TYPE_g1 = Payload__DARKLUA_TYPE_gT<nil>

type ReconnectPayload__DARKLUA_TYPE_g2 = Payload__DARKLUA_TYPE_gT<boolean>

type InvalidSessionPayload__DARKLUA_TYPE_g3 = Payload__DARKLUA_TYPE_gT<boolean?>

type ApplicationCommandPermissionsCreatePayload__DARKLUA_TYPE_g4 = Payload__DARKLUA_TYPE_gT<
	AutomoderationRuleObject__DARKLUA_TYPE_bf
>

type ApplicationCommandPermissionsUpdatePayload__DARKLUA_TYPE_g5 = Payload__DARKLUA_TYPE_gT<
	AutomoderationRuleObject__DARKLUA_TYPE_bf
>

type ApplicationCommandPermissionsDeletePayload__DARKLUA_TYPE_g6 = Payload__DARKLUA_TYPE_gT<
	AutomoderationRuleObject__DARKLUA_TYPE_bf
>

type ApplicationCommandPermissionsExecutionPayload__DARKLUA_TYPE_g7 = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	action: AutomoderationActionObject__DARKLUA_TYPE_be,
	rule_id: Snowflake__DARKLUA_TYPE_R,
	rule_trigger_type: AutomoderationRuleTriggerType__DARKLUA_TYPE_ab,
	user_id: Snowflake__DARKLUA_TYPE_R,
	channel_id: Snowflake__DARKLUA_TYPE_R?,
	message_id: Snowflake__DARKLUA_TYPE_R?,
	alert_system_message_id: Snowflake__DARKLUA_TYPE_R?,
	content: string,
	matched_keyword: string?,
	matched_content: string?,
}>

type CreateChannelPayload__DARKLUA_TYPE_g8 = Payload__DARKLUA_TYPE_gT<ChannelObject__DARKLUA_TYPE_bm>

type UpdateChannelPayload__DARKLUA_TYPE_g9 = Payload__DARKLUA_TYPE_gT<ChannelObject__DARKLUA_TYPE_bm>

type DeleteChannelPayload__DARKLUA_TYPE_ha = Payload__DARKLUA_TYPE_gT<ChannelObject__DARKLUA_TYPE_bm>

type ChannelPinsUpdatePayload__DARKLUA_TYPE_hb = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	channel_id: Snowflake__DARKLUA_TYPE_R,
	last_pin_timestamp: string?,
}>

type CreateThreadPayload__DARKLUA_TYPE_hc = Payload__DARKLUA_TYPE_gT<ChannelObject__DARKLUA_TYPE_bm>

type UpdateThreadPayload__DARKLUA_TYPE_hd = Payload__DARKLUA_TYPE_gT<ChannelObject__DARKLUA_TYPE_bm>

type DeleteThreadPayload__DARKLUA_TYPE_he = Payload__DARKLUA_TYPE_gT<ChannelObject__DARKLUA_TYPE_bm>

type ThreadListSyncPayload__DARKLUA_TYPE_hf = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	channel_ids: { Snowflake__DARKLUA_TYPE_R }?,
	threads: { ChannelObject__DARKLUA_TYPE_bm },
	members: { ThreadMemberObject__DARKLUA_TYPE_bj },
}>

type ThreadMemberUpdatePayload__DARKLUA_TYPE_hg = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
}>

type ThreadMembersUpdatePayload__DARKLUA_TYPE_hh = Payload__DARKLUA_TYPE_gT<{
	id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	member_count: number,
	added_members: { ThreadMemberObject__DARKLUA_TYPE_bj }?,
	removed_member_ids: { Snowflake__DARKLUA_TYPE_R }?,
}>

type EntitlementCreatePayload__DARKLUA_TYPE_hi = Payload__DARKLUA_TYPE_gT<EntitlementObject__DARKLUA_TYPE_bn>

type EntitlementUpdatePayload__DARKLUA_TYPE_hj = Payload__DARKLUA_TYPE_gT<EntitlementObject__DARKLUA_TYPE_bn>

type EntitlementDeletePayload__DARKLUA_TYPE_hk = Payload__DARKLUA_TYPE_gT<EntitlementObject__DARKLUA_TYPE_bn>

type GuildCreatePayload__DARKLUA_TYPE_hl = Payload__DARKLUA_TYPE_gT<
	UnavailableGuildObject__DARKLUA_TYPE_aZ | (GuildObject__DARKLUA_TYPE_a7 & {
		joined_at: string,
		large: boolean,
		unavailable: boolean?,
		member_count: number,
		voice_states: { VoiceStateObject__DARKLUA_TYPE_bo },
		members: { GuildMemberObject__DARKLUA_TYPE_bi },
		channels: { ChannelObject__DARKLUA_TYPE_bm },
		threads: { ChannelObject__DARKLUA_TYPE_bm },
		presences: { PresenceUpdateObject__DARKLUA_TYPE_bq },
		stage_instances: { StageInstanceObject__DARKLUA_TYPE_br },
		guild_scheduled_events: { GuildScheduledEventObject__DARKLUA_TYPE_bt },
	})
>

type GuildUpdatePayload__DARKLUA_TYPE_hm = Payload__DARKLUA_TYPE_gT<GuildObject__DARKLUA_TYPE_a7>

type GuildDeletePayload__DARKLUA_TYPE_hn = Payload__DARKLUA_TYPE_gT<UnavailableGuildObject__DARKLUA_TYPE_aZ>

type GuildBanAddPayload__DARKLUA_TYPE_ho = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	user: UserObject__DARKLUA_TYPE_aY,
}>

type GuildBanRemovePayload__DARKLUA_TYPE_hp = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	user: UserObject__DARKLUA_TYPE_aY,
}>

type GuildEmojisUpdatePayload__DARKLUA_TYPE_hq = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	emojis: { EmojiObject__DARKLUA_TYPE_a3 },
}>

type GuildStickersUpdatePayload__DARKLUA_TYPE_hr = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	stickers: { StickerObject__DARKLUA_TYPE_a6 },
}>

type GuildIntegrationsUpdatePayload__DARKLUA_TYPE_hs = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
}>

type GuildMemberAddPayload__DARKLUA_TYPE_ht = Payload__DARKLUA_TYPE_gT<GuildMemberObject__DARKLUA_TYPE_bi & {
	guild_id: Snowflake__DARKLUA_TYPE_R,
}>

type GuildMemberRemovePayload__DARKLUA_TYPE_hu = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	user: UserObject__DARKLUA_TYPE_aY,
}>

type GuildMemberUpdatePayload__DARKLUA_TYPE_hv = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	roles: { Snowflake__DARKLUA_TYPE_R },
	user: UserObject__DARKLUA_TYPE_aY,
	nick: string?,
	avatar: string?,
	joined_at: string?,
	premium_since: string?,
	deaf: boolean?,
	mute: boolean?,
	pending: boolean?,
	communication_disabled_until: string?,
	flags: number?,
	avatar_decoration_data: AvatarDecorationDataObject__DARKLUA_TYPE_aX?,
}>

type GuildMembersChunkPayload__DARKLUA_TYPE_hw = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	members: { GuildMemberObject__DARKLUA_TYPE_bi },
	chunk_index: number,
	chunk_count: number,
	not_found: { unknown }?,
	presences: { PresenceObject__DARKLUA_TYPE_aV }?,
	nonce: string?,
}>

type GuildRoleCreatePayload__DARKLUA_TYPE_hx = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	role: GuildRoleObject__DARKLUA_TYPE_a2,
}>

type GuildRoleUpdatePayload__DARKLUA_TYPE_hy = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	role: GuildRoleObject__DARKLUA_TYPE_a2,
}>

type GuildRoleDeletePayload__DARKLUA_TYPE_hz = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	role_id: Snowflake__DARKLUA_TYPE_R,
}>

type GuildScheduledEventCreatePayload__DARKLUA_TYPE_hA = Payload__DARKLUA_TYPE_gT<
	GuildScheduledEventObject__DARKLUA_TYPE_bt
>

type GuildScheduledEventUpdatePayload__DARKLUA_TYPE_hB = Payload__DARKLUA_TYPE_gT<
	GuildScheduledEventObject__DARKLUA_TYPE_bt
>

type GuildScheduledEventDeletePayload__DARKLUA_TYPE_hC = Payload__DARKLUA_TYPE_gT<
	GuildScheduledEventObject__DARKLUA_TYPE_bt
>

type GuildScheduledEventUserAddPayload__DARKLUA_TYPE_hD = Payload__DARKLUA_TYPE_gT<{
	guild_scheduled_event_id: Snowflake__DARKLUA_TYPE_R,
	user_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R,
}>

type GuildScheduledEventUserRemovePayload__DARKLUA_TYPE_hE = Payload__DARKLUA_TYPE_gT<{
	guild_scheduled_event_id: Snowflake__DARKLUA_TYPE_R,
	user_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R,
}>

type IntegrationCreatePayload__DARKLUA_TYPE_hF = Payload__DARKLUA_TYPE_gT<IntegrationObject__DARKLUA_TYPE_bv & {
	guild_id: Snowflake__DARKLUA_TYPE_R?,
}>

type IntegrationUpdatePayload__DARKLUA_TYPE_hG = Payload__DARKLUA_TYPE_gT<IntegrationObject__DARKLUA_TYPE_bv & {
	guild_id: Snowflake__DARKLUA_TYPE_R?,
}>

type IntegrationDeletePayload__DARKLUA_TYPE_hH = Payload__DARKLUA_TYPE_gT<IntegrationObject__DARKLUA_TYPE_bv & {
	id: Snowflake__DARKLUA_TYPE_R?,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	application_id: Snowflake__DARKLUA_TYPE_R?,
}>

type InteractionCreatePayload__DARKLUA_TYPE_hI = Payload__DARKLUA_TYPE_gT<InteractionObject__DARKLUA_TYPE_b4>

type InviteCreatePayload__DARKLUA_TYPE_hJ = Payload__DARKLUA_TYPE_gT<{
	channel_id: Snowflake__DARKLUA_TYPE_R,
	code: string,
	created_at: string,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	inviter: UserObject__DARKLUA_TYPE_aY?,
	max_age: number,
	max_uses: number,
	target_type: InviteTargetTypes__DARKLUA_TYPE_aA?,
	target_user: UserObject__DARKLUA_TYPE_aY?,
	target_application: ApplicationObject__DARKLUA_TYPE_a9?,
	temporary: boolean,
	uses: number,
}>

type InviteDeletePayload__DARKLUA_TYPE_hK = Payload__DARKLUA_TYPE_gT<{
	channel_id: Snowflake__DARKLUA_TYPE_R,
	code: string,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
}>

type MessageCreatePayload__DARKLUA_TYPE_hL = Payload__DARKLUA_TYPE_gT<MessageObject__DARKLUA_TYPE_b0 & {
	mentions: { UserObject__DARKLUA_TYPE_aY & { member: GuildMemberObject__DARKLUA_TYPE_bi } },
	member: GuildMemberObject__DARKLUA_TYPE_bi?,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
}>

type MessageUpdatePayload__DARKLUA_TYPE_hM = Payload__DARKLUA_TYPE_gT<MessageObject__DARKLUA_TYPE_b0 & {
	mentions: { UserObject__DARKLUA_TYPE_aY & { member: GuildMemberObject__DARKLUA_TYPE_bi } },
	member: GuildMemberObject__DARKLUA_TYPE_bi?,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
}>

type MessageDeletePayload__DARKLUA_TYPE_hN = Payload__DARKLUA_TYPE_gT<{
	id: Snowflake__DARKLUA_TYPE_R,
	channel_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
}>

type MessageDeleteBulkPayload__DARKLUA_TYPE_hO = Payload__DARKLUA_TYPE_gT<{
	ids: { Snowflake__DARKLUA_TYPE_R },
	channel_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
}>

type MessageReactionAddPayload__DARKLUA_TYPE_hP = Payload__DARKLUA_TYPE_gT<{
	user_id: Snowflake__DARKLUA_TYPE_R,
	channel_id: Snowflake__DARKLUA_TYPE_R,
	message_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	member: GuildMemberObject__DARKLUA_TYPE_bi?,
	emoji: EmojiObject__DARKLUA_TYPE_a3,
	message_author_id: Snowflake__DARKLUA_TYPE_R?,
	burst: boolean,
	burst_colors: { string },
	type: ReactionType__DARKLUA_TYPE_aB,
}>

type MessageReactionRemovePayload__DARKLUA_TYPE_hQ = Payload__DARKLUA_TYPE_gT<{
	user_id: Snowflake__DARKLUA_TYPE_R,
	channel_id: Snowflake__DARKLUA_TYPE_R,
	message_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	emoji: EmojiObject__DARKLUA_TYPE_a3,
	burst: boolean,
	type: ReactionType__DARKLUA_TYPE_aB,
}>

type MessageReactionRemoveAllPayload__DARKLUA_TYPE_hR = Payload__DARKLUA_TYPE_gT<{
	channel_id: Snowflake__DARKLUA_TYPE_R,
	message_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
}>

type MessageReactionRemoveEmojiPayload__DARKLUA_TYPE_hS = Payload__DARKLUA_TYPE_gT<{
	channel_id: Snowflake__DARKLUA_TYPE_R,
	message_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	emoji: EmojiObject__DARKLUA_TYPE_a3,
}>

type PresenceUpdatePayload__DARKLUA_TYPE_hT = Payload__DARKLUA_TYPE_gT<{
	user: UserObject__DARKLUA_TYPE_aY,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	status: string,
	activities: { ActivityObject__DARKLUA_TYPE_aU },
	client_status: ClientStatusObject__DARKLUA_TYPE_bp,
}>

type StageInstanceCreate__DARKLUA_TYPE_hU = Payload__DARKLUA_TYPE_gT<StageInstanceObject__DARKLUA_TYPE_br>

type StageInstanceUpdate__DARKLUA_TYPE_hV = Payload__DARKLUA_TYPE_gT<StageInstanceObject__DARKLUA_TYPE_br>

type StageInstanceDelete__DARKLUA_TYPE_hW = Payload__DARKLUA_TYPE_gT<StageInstanceObject__DARKLUA_TYPE_br>

type TypingStartPayload__DARKLUA_TYPE_hX = Payload__DARKLUA_TYPE_gT<{
	channel_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	user_id: Snowflake__DARKLUA_TYPE_R,
	timestamp: number,
	member: GuildMemberObject__DARKLUA_TYPE_bi?,
}>

type UserUpdatePayload__DARKLUA_TYPE_hY = Payload__DARKLUA_TYPE_gT<UserObject__DARKLUA_TYPE_aY>

type VoiceStateUpdatePayload__DARKLUA_TYPE_hZ = Payload__DARKLUA_TYPE_gT<{
	token: string,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	endpoint: string?,
}>

type VoiceServerUpdatePayload__DARKLUA_TYPE_h_ = Payload__DARKLUA_TYPE_gT<{
	token: string,
	guild_id: Snowflake__DARKLUA_TYPE_R,
	endpoint: string?,
}>

type WebhooksUpdatePayload__DARKLUA_TYPE_h0 = Payload__DARKLUA_TYPE_gT<{
	guild_id: Snowflake__DARKLUA_TYPE_R,
	channel_id: Snowflake__DARKLUA_TYPE_R,
}>

type MessagePollVoteAdd__DARKLUA_TYPE_h1 = Payload__DARKLUA_TYPE_gT<{
	user_id: Snowflake__DARKLUA_TYPE_R,
	channel_id: Snowflake__DARKLUA_TYPE_R,
	message_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	answer_id: number,
}>

type MessagePollVoteRemove__DARKLUA_TYPE_h2 = Payload__DARKLUA_TYPE_gT<{
	user_id: Snowflake__DARKLUA_TYPE_R,
	channel_id: Snowflake__DARKLUA_TYPE_R,
	message_id: Snowflake__DARKLUA_TYPE_R,
	guild_id: Snowflake__DARKLUA_TYPE_R?,
	answer_id: number,
}>
local a
a = {
	cache = {},
	load = function(b)
		if not a.cache[b] then
			a.cache[b] = { c = a[b]() }
		end
		return a.cache[b].c
	end,
}
do
	function a.a()
		return function(b: string)
			if b == "" then
				return false
			end

			if string.sub(b, 1, 1) == "-" or string.sub(b, -1) == "-" then
				return false
			end

			local c = string.split(b, "-")

			for d, e in ipairs(c) do
				if e == "" then
					return false
				end

				if not string.match(e, "^[a-z0-9]+$") then
					return false
				end
			end

			return true
		end
	end
	function a.b()
		local b = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx"

		return function()
			local c = string.gsub(b, "[xy]", function(c)
				local d = (c == "x") and math.random(0, 15) or math.random(8, 11)

				return string.format("%x", d)
			end)

			return c
		end
	end
	function a.c()
		return function(b: () -> (), ...)
			local c = coroutine.create(b)
			local d, e = coroutine.resume(c, ...)

			if not d then
				error(e)
			end

			return c
		end
	end
	function a.d()
		return function(b)
			local c = {}

			for d, e in b do
				c[e] = d
			end

			return setmetatable(b, {
				__index = c,
			})
		end
	end
	function a.e()
		return {
			validateKebabCase = a.load("a"),
			createGuid = a.load("b"),
			coroutineRun = a.load("c"),
			tableReflect = a.load("d"),
		}
	end
	function a.f()
		local b = a.load("e")
		return b
	end
	function a.g()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			None = 0,
			NitroClassic = 1,
			Nitro = 2,
			NitroBasic = 3,
		}))

		return {
			NitroType = c,
		}
	end
	function a.h()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			Incoming = 1,
			ChannelFollower = 2,
			Application = 3,
		}))

		return {
			WebhookType = c,
		}
	end
	function a.i()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			Standard = 1,
			Guild = 2,
		}))

		local d = table.freeze(b.tableReflect({
			PNG = 1,
			APNG = 2,
			LOTTIE = 3,
			GIF = 4,
		}))

		return {
			StickerTypes = c,
			StickerFormatTypes = d,
		}
	end
	function a.j()
		return "DISCORD_V10_APPLICATION_TYPES"
	end
	function a.k()
		local b = {}

		local function split64(c: number): (number, number)
			local d = bit32.band(c, 0xFFFFFFFF)
			local e = math.floor(c / 4294967296)

			return d, e
		end

		local function combine64(c: number, d: number): number
			return (d * 4294967296) + c
		end

		function b.bnot(c: number): number
			local d, e = split64(c)
			local f = bit32.bnot(d)
			local g = bit32.bnot(e)

			return combine64(f, g)
		end

		function b.bor(c: number, d: number): number
			local e, f = split64(c)
			local g, h = split64(d)
			local i = bit32.bor(e, g)
			local j = bit32.bor(f, h)

			return combine64(i, j)
		end

		function b.band(c: number, d: number): number
			local e, f = split64(c)
			local g, h = split64(d)
			local i = bit32.band(e, g)
			local j = bit32.band(f, h)

			return combine64(i, j)
		end

		function b.shift(c: number, d: number): number
			if d == 0 then
				return c
			end

			local e, f = split64(c)

			if d > 0 then
				if d >= 32 then
					f = bit32.lshift(e, d - 32)
					e = 0
				else
					f = bit32.bor(bit32.lshift(f, d), bit32.rshift(e, 32 - d))
					e = bit32.lshift(e, d)
				end
			else
				d = -d
				if d >= 32 then
					e = bit32.rshift(f, d - 32)
					f = 0
				else
					e = bit32.bor(bit32.rshift(e, d), bit32.lshift(f, 32 - d))
					f = bit32.rshift(f, d)
				end
			end

			e = bit32.band(e, 0xFFFFFFFF)
			f = bit32.band(f, 0xFFFFFFFF)

			return combine64(e, f)
		end

		return b
	end
	function a.l()
		local b = a.load("k")
		local c = {}

		function c.is32Bit(d: number): boolean
			return d >= 0 and d <= 0xFFFFFFFF
		end

		function c.bnot(d: number): number
			if c.is32Bit(d) then
				return bit32.bnot(d)
			else
				return b.bnot(d)
			end
		end

		function c.bor(d: number, e: number): number
			if c.is32Bit(d) and c.is32Bit(e) then
				return bit32.bor(d, e)
			else
				return b.bor(d, e)
			end
		end

		function c.band(d: number, e: number): number
			if c.is32Bit(d) and c.is32Bit(e) then
				return bit32.band(d, e)
			else
				return b.band(d, e)
			end
		end

		function c.shift(d: number, e: number): number
			if c.is32Bit(d) then
				if e >= 0 then
					return bit32.lshift(d, e)
				else
					return bit32.rshift(d, -e)
				end
			else
				return b.shift(d, e)
			end
		end

		function c.lshift(d: number, e: number): number
			return c.shift(d, e)
		end

		function c.rshift(d: number, e: number): number
			return c.shift(d, -e)
		end

		return c
	end
	function a.m()
		local b = a.load("l")
		return b
	end
	function a.n()
		local b = a.load("f")

		local c = a.load("m")

		local d = table.freeze(b.tableReflect({
			CreateInstantInvite = c.lshift(1, 0),
			KickMembers = c.lshift(1, 1),
			BanMembers = c.lshift(1, 2),
			Administrator = c.lshift(1, 3),
			ManageChannels = c.lshift(1, 4),
			ManageGuild = c.lshift(1, 5),
			AddReactions = c.lshift(1, 6),
			ViewAuditLog = c.lshift(1, 7),
			PrioritySpeaker = c.lshift(1, 8),
			Stream = c.lshift(1, 9),
			ViewChannel = c.lshift(1, 10),
			SendMessages = c.lshift(1, 11),
			SendTTSMessages = c.lshift(1, 12),
			ManageMessages = c.lshift(1, 13),
			EmbedLinks = c.lshift(1, 14),
			AttachFiles = c.lshift(1, 15),
			ReadMessageHistory = c.lshift(1, 16),
			MentionEveryone = c.lshift(1, 17),
			UseExternalEmojis = c.lshift(1, 18),
			ViewGuildInsights = c.lshift(1, 19),
			Connect = c.lshift(1, 20),
			Speak = c.lshift(1, 21),
			MuteMembers = c.lshift(1, 22),
			DeafenMembers = c.lshift(1, 23),
			MoveMembers = c.lshift(1, 24),
			UseVAD = c.lshift(1, 25),
			ChangeNickname = c.lshift(1, 26),
			ManageNicknames = c.lshift(1, 27),
			ManageRoles = c.lshift(1, 28),
			ManageWebhooks = c.lshift(1, 29),
			ManageGuildExpressions = c.lshift(1, 30),
			UseApplicationCommands = c.lshift(1, 31),
			RequestToSpeak = c.lshift(1, 32),
			ManageEvents = c.lshift(1, 33),
			ManageThreads = c.lshift(1, 34),
			CreatePublicThreads = c.lshift(1, 35),
			CreatePrivateThreads = c.lshift(1, 36),
			UseExternalStickers = c.lshift(1, 37),
			SendMessagesInThreads = c.lshift(1, 38),
			UseEmbeddedActivities = c.lshift(1, 39),
			ModerateMembers = c.lshift(1, 40),
			ViewCreatorMonetizationAnalytics = c.lshift(1, 41),
			UseSoundboard = c.lshift(1, 42),
			UseExternalSounds = c.lshift(1, 45),
			SendVoiceMessages = c.lshift(1, 46),
			SendPolls = c.lshift(1, 49),
			UseExternalApps = c.lshift(1, 50),
		}))

		return {
			Permissions = d,
		}
	end
	function a.o()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			Default = 0,
			RecipientAdd = 1,
			RecipientRemove = 2,
			Call = 3,
			ChannelNameChange = 4,
			ChannelIconChange = 5,
			ChannelPinnedMessage = 6,
			UserJoin = 7,
			GuildBoost = 8,
			GuildBoostTier1 = 9,
			GuildBoostTier2 = 10,
			GuildBoostTier3 = 11,
			ChannelFollowAdd = 12,
			GuildDiscoveryDisqualified = 14,
			GuildDiscoveryRequalified = 15,
			GuildDiscoveryGracePeriodInitialWarning = 16,
			GuildDiscoveryGracePeriodFinalWarning = 17,
			ThreadCreated = 18,
			Reply = 19,
			ChatInputCommand = 20,
			ThreadStarterMessage = 21,
			GuildInviteReminder = 22,
			ContextMenuCommand = 23,
			AutoModerationAction = 24,
			RoleSubscriptionPurchase = 25,
			InteractionPremiumUpsell = 26,
			StageStart = 27,
			StageEnd = 28,
			StageSpeaker = 29,
			StageTopic = 31,
			GuildApplicationPremiumSubscription = 32,
			GuildIncidentAlertModeEnabled = 36,
			GuildIncidentAlertModeDisabled = 37,
			GuildIncidentReportRaid = 38,
			GuildIncidentReportFalseAlarm = 39,
			PurchaseNotification = 44,
			PollResult = 46,
		}))

		local d = table.freeze(b.tableReflect({
			Join = 1,
			Spectate = 2,
			Listen = 3,
			JoinRequest = 5,
		}))

		local e = table.freeze(b.tableReflect({
			Default = 0,
			Forward = 1,
		}))

		local f = table.freeze(b.tableReflect({
			Blurple = 1,
			Grey = 2,
			Green = 3,
			Red = 4,
		}))

		local g = table.freeze(b.tableReflect({
			Short = 1,
			Paragraph = 2,
		}))

		local h = table.freeze(b.tableReflect({
			Role = "role",
			User = "user",
			Channel = "channel",
		}))

		local i = table.freeze(b.tableReflect({
			Default = 1,
		}))

		local j = table.freeze(b.tableReflect({
			Normal = 0,
			Burst = 1,
		}))

		return {
			MessageType = c,
			MessageAcitvityType = d,
			MessageReferenceType = e,
			ButtonStyle = f,
			TextInputStyle = g,
			SelectDefaultValueType = h,
			PollLayoutType = i,
			ReactionType = j,
		}
	end
	function a.p()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			Ping = 1,
			ApplicationCommand = 2,
			MessageComponent = 3,
			ApplicationCommandAutocomplete = 4,
			ModalSubmit = 5,
		}))

		local d = table.freeze(b.tableReflect({
			SubCommand = 1,
			SubCommandGroup = 2,
			String = 3,
			Integer = 4,
			Boolean = 5,
			User = 6,
			Channel = 7,
			Role = 8,
			Mentionable = 9,
			Number = 10,
			Attachment = 11,
		}))

		local e = table.freeze(b.tableReflect({
			Guild = 0,
			BotDm = 1,
			PrivateChannel = 2,
		}))

		local f = table.freeze(b.tableReflect({
			ChatInput = 1,
			User = 2,
			Message = 3,
			PrimaryEntryPoiant = 4,
		}))

		local g = table.freeze(b.tableReflect({
			ActionRow = 1,
			Button = 2,
			StringSelect = 3,
			TextInput = 4,
			UserSelect = 5,
			RoleSelect = 6,
			MentionableSelect = 7,
			ChannelSelect = 8,
		}))

		return {
			InteractionType = c,
			ApplicationCommandOptionType = d,
			InteractionContextType = e,
			ApplicationCommandType = f,
			ComponentTypes = g,
		}
	end
	function a.q()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			None = 0,
			Low = 1,
			Medium = 2,
			High = 3,
			VeryHigh = 4,
		}))

		local d = table.freeze(b.tableReflect({
			AllMessages = 0,
			OnlyMentions = 1,
		}))

		local e = table.freeze(b.tableReflect({
			Disabled = 0,
			MembersWithoutRoles = 1,
			AllMembers = 2,
		}))

		local f = table.freeze(b.tableReflect({
			Default = 0,
			Explicit = 1,
			Safe = 2,
			AgeRestricted = 3,
		}))

		local g = table.freeze(b.tableReflect({
			None = 0,
			Tier1 = 1,
			Tier2 = 2,
			Tier3 = 3,
		}))

		local h = table.freeze(b.tableReflect({
			None = 0,
			Elevated = 1,
		}))

		local i = table.freeze(b.tableReflect({
			Guild = 0,
			GroupDM = 1,
			Friend = 2,
		}))

		local j = table.freeze(b.tableReflect({
			Stream = 1,
			EmbeddedApplication = 2,
		}))

		local k = table.freeze(b.tableReflect({
			GuildOnly = 2,
		}))

		local l = table.freeze(b.tableReflect({
			StageInstance = 1,
			Voice = 2,
			External = 3,
		}))

		local m = table.freeze(b.tableReflect({
			Scheduled = 1,
			Active = 2,
			Completed = 3,
			Cancelled = 4,
		}))

		local n = table.freeze(b.tableReflect({
			Twitch = "twitch",
			YouTube = "youtube",
			Discord = "discord",
			GuildSubscription = "guild_subscription",
		}))

		local o = table.freeze(b.tableReflect({
			RemoveRole = 0,
			Kick = 1,
		}))

		local p = table.freeze(b.tableReflect({
			MultipleChoice = "MULTIPLE_CHOICE",
			Dropdown = "DROPDOWN",
		}))

		local q = table.freeze(b.tableReflect({
			Default = "ONBOARDING_DEFAULT",
			Advanced = "ONBOARDING_ADVANCED",
		}))

		local r = table.freeze(b.tableReflect({
			Role = 0,
			Member = 1,
		}))

		local s = table.freeze(b.tableReflect({
			Keyword = 1,
			Spam = 3,
			KeywordPreset = 4,
			MentionSpam = 5,
			MemberProfile = 6,
		}))

		local t = table.freeze(b.tableReflect({
			Profanity = 1,
			SexualContent = 2,
			Slurs = 3,
		}))

		local u = table.freeze(b.tableReflect({
			MessageSend = 1,
			MemberUpdate = 2,
		}))

		local v = table.freeze(b.tableReflect({
			BlockMessage = 1,
			SendAlertMessage = 2,
			Timeout = 3,
			BlockMemberInteraction = 4,
		}))

		local w = table.freeze(b.tableReflect({
			GuildUpdate = 1,
			ChannelCreate = 10,
			ChannelUpdate = 11,
			ChannelDelete = 12,
			ChannelOverwriteCreate = 13,
			ChannelOverwriteUpdate = 14,
			ChannelOverwriteDelete = 15,
			MemberKick = 20,
			MemberPrune = 21,
			MemberBanAdd = 22,
			MemberBanRemove = 23,
			MemberUpdate = 24,
			MemberRoleUpdate = 25,
			MemberMove = 26,
			MemberDisconnect = 27,
			BotAdd = 28,
			RoleCreate = 30,
			RoleUpdate = 31,
			RoleDelete = 32,
			InviteCreate = 40,
			InviteUpdate = 41,
			InviteDelete = 42,
			WebhookCreate = 50,
			WebhookUpdate = 51,
			WebhookDelete = 52,
			EmojiCreate = 60,
			EmojiUpdate = 61,
			EmojiDelete = 62,
			MessageDelete = 72,
			MessageBulkDelete = 73,
			MessagePin = 74,
			MessageUnpin = 75,
			IntegrationCreate = 80,
			IntegrationUpdate = 81,
			IntegrationDelete = 82,
			StageInstanceCreate = 83,
			StageInstanceUpdate = 84,
			StageInstanceDelete = 85,
			StickerCreate = 90,
			StickerUpdate = 91,
			StickerDelete = 92,
			GuildScheduledEventCreate = 100,
			GuildScheduledEventUpdate = 101,
			GuildScheduledEventDelete = 102,
			ThreadCreate = 110,
			ThreadUpdate = 111,
			ThreadDelete = 112,
			ApplicationCommandPermissionUpdate = 121,
			SoundboardSoundCreate = 130,
			SoundboardSoundUpdate = 131,
			SoundboardSoundDelete = 132,
			AutoModerationRuleCreate = 140,
			AutoModerationRuleUpdate = 141,
			AutoModerationRuleDelete = 142,
			AutoModerationBlockMessage = 143,
			AutoModerationFlagToChannel = 144,
			AutoModerationUserCommunicationDisabled = 145,
			CreatorMonetizationRequestCreated = 150,
			CreatorMonetizationTermsAccepted = 151,
			OnboardingPromptCreate = 163,
			OnboardingPromptUpdate = 164,
			OnboardingPromptDelete = 165,
			OnboardingCreate = 166,
			OnboardingUpdate = 167,
			HomeSettingsCreate = 190,
			HomeSettingsUpdate = 191,
		}))

		return {
			AuditLogEvent = w,
			TriggerTypes = s,
			KeywordPresetType = t,
			EventTypes = u,
			ActionTypes = v,
			VerificationLevel = c,
			DefaultMessageNotification = d,
			ExplicitContentFilterLevel = e,
			NSFWLevel = f,
			PremiumTier = g,
			MFALevel = h,
			InviteType = i,
			InviteTargetType = j,
			ScheduledEventPrivacyLevel = k,
			SchedledEventEntityType = l,
			SchedledEventStatus = m,
			IntegrationType = n,
			IntegrationExpireBehaviour = o,
			OnboardingPromptType = p,
			OnboardingMode = q,
			OverwriteType = r,
		}
	end
	function a.r()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			Purchase = 1,
			PremiumSubscription = 2,
			DeveloperGift = 3,
			TestModePurchase = 4,
			FreePurchase = 5,
			UserGift = 6,
			PremiumPurchase = 7,
			ApplicationSubscription = 8,
		}))

		return {
			EntitlementType = c,
		}
	end
	function a.s()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			Rich = "rich",
			Image = "image",
			Video = "video",
			Gifv = "gifv",
			Article = "article",
			Link = "link",
			PollResult = "poll_result",
		}))

		return {
			EmbedType = c,
		}
	end
	function a.t()
		return "DISCORD_V10_PAYLOAD_TYPES"
	end
	function a.u()
		local b = a.load("f")
		a.load("t")

		local c = table.freeze(b.tableReflect({
			GuildText = 0,
			DM = 1,
			GuildVoice = 2,
			GroupDM = 3,
			GuildCategory = 4,
			GuildAnnouncement = 5,
			AnnouncementThread = 10,
			PublicThread = 11,
			PrivateThread = 12,
			GuildStageVoice = 13,
			GuildDirectory = 14,
			GuildForum = 15,
			GuildMedia = 16,
		}))

		local d = table.freeze(b.tableReflect({
			LatestActivity = 0,
			CreationDate = 1,
		}))

		local e = table.freeze(b.tableReflect({
			LatestActivity = 0,
			CreationDate = 1,
		}))

		local f = table.freeze(b.tableReflect({
			NotSet = 0,
			ListView = 1,
			GalleryView = 2,
		}))

		local g = table.freeze(b.tableReflect({
			Auto = 1,
			Full = 2,
		}))

		local h = table.freeze(b.tableReflect({
			String = 3,
			Text = 4,
			User = 5,
			Role = 6,
			Mentionable = 7,
			Channel = 8,
		}))

		return {
			ChannelTypes = c,
			MediaSortOrder = d,
			ForumSortOrder = e,
			ForumLayout = f,
			VideoQualityMode = g,
			SelectMenuType = h,
		}
	end
	function a.v()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			Invited = 1,
			Accepted = 2,
		}))

		local d = table.freeze(b.tableReflect({
			GuildInstall = 0,
			UserInstall = 1,
		}))

		return {
			MembershipState = c,
			IntegrationTypesConfig = d,
		}
	end
	function a.w()
		local b = a.load("f")

		local c = table.freeze(b.tableReflect({
			Game = 0,
			Streaming = 1,
			Listening = 2,
			Watching = 3,
			Competing = 5,
		}))

		local d = table.freeze(b.tableReflect({
			Online = "online",
			DoNotDisturb = "dnd",
			Idle = "idle",
			Invisible = "invisible",
			Offline = "offline",
		}))

		return {
			ActivityType = c,
			Status = d,
		}
	end
	function a.x()
		local b = table.freeze({

			CreateInteractionResponse = "/interactions/%s/%s/callback",

			GetOriginalInteractionResponse = "/webhooks/%s/%s/messages/@original",

			EditOriginalInteractionResponse = "/webhooks/%s/%s/messages/@original",

			DeleteOriginalInteractionResponse = "/webhooks/%s/%s/messages/@original",

			CreateFollowupMessage = "/webhooks/%s/%s",

			GetFollowupMessage = "/webhooks/%s/%s/messages/%s",

			EditFollowupMessage = "/webhooks/%s/%s/messages/%s",

			DeleteFollowupMessage = "/webhooks/%s/%s/messages/%s",

			GetGlobalApplicationCommands = "/applications/%s/commands",

			CreateGlobalApplicationCommand = "/applications/%s/commands",

			GetGlobalApplicationCommand = "/applications/%s/commands/%s",

			EditGlobalApplicationCommand = "/applications/%s/commands/%s",

			DeleteGlobalApplicationCommand = "/applications/%s/commands/%s",

			BulkOverwriteGlobalApplicationCommands = "/applications/%s/commands",

			GetGuildApplicationCommands = "/applications/%s/guilds/%s/commands",

			CreateGuildApplicationCommand = "/applications/%s/guilds/%s/commands",

			GetGuildApplicationCommand = "/applications/%s/guilds/%s/commands/%s",

			EditGuildApplicationCommand = "/applications/%s/guilds/%s/commands/%s",

			DeleteGuildApplicationCommand = "/applications/%s/guilds/%s/commands/%s",

			BulkOverwriteGuildApplicationCommands = "/applications/%s/guilds/%s/commands",

			GetGuildApplicationCommandPermissions = "/applications/%s/guilds/%s/commands/permissions",

			GetApplicationCommandPermissions = "/applications/%s/guilds/%s/commands/%s/permissions",

			EditApplicationCommandPermissions = "/applications/%s/guilds/%s/commands/%s/permissions",

			GetCurrentApplication = "/applications/@me",

			EditCurrentApplication = "/applications/@me",

			GetApplicationRoleConnectionMetadataRecords = "/applications/%s/role-connections/metadata",

			UpdateApplicationRoleConnectionMetadataRecords = "/applications/%s/role-connections/metadata",

			GetGuildAuditLog = "/guilds/%s/audit-logs",

			ListAutoModerationRulesForGuild = "/guilds/%s/auto-moderation/rules",

			GetAutoModerationRule = "/guilds/%s/auto-moderation/rules/%s",

			CreateAutoModerationRule = "/guilds/%s/auto-moderation/rules",

			ModifyAutoModerationRule = "/guilds/%s/auto-moderation/rules/%s",

			DeleteAutoModerationRule = "/guilds/%s/auto-moderation/rules/%s",

			GetChannel = "/channels/%s",

			ModifyChannel = "/channels/%s",

			DeleteOrCloseChannel = "/channels/%s",

			GetChannelMessages = "/channels/%s/messages",

			GetChannelMessage = "/channels/%s/messages/%s",

			CreateMessage = "/channels/%s/messages",

			CrosspostMessage = "/channels/%s/messages/%s/crosspost",

			CreateReaction = "/channels/%s/messages/%s/reactions/%s/@me",

			DeleteOwnReaction = "/channels/%s/messages/%s/reactions/%s/@me",

			DeleteUserReaction = "/channels/%s/messages/%s/reactions/%s/%s",

			GetReactions = "/channels/%s/messages/%s/reactions/%s",

			DeleteAllReactions = "/channels/%s/messages/%s/reactions",

			DeleteAllReactionsForEmoji = "/channels/%s/messages/%s/reactions/%s",

			EditMessage = "/channels/%s/messages/%s",

			DeleteMessage = "/channels/%s/messages/%s",

			BulkDeleteMessages = "/channels/%s/messages/bulk-delete",

			EditChannelPermissions = "/channels/%s/permissions/%s",

			GetChannelInvites = "/channels/%s/invites",

			CreateChannelInvite = "/channels/%s/invites",

			DeleteChannelPermission = "/channels/%s/permissions/%s",

			FollowAnnouncementChannel = "/channels/%s/followers",

			TriggerTypingChannel = "/channels/%s/typing",

			GetPinnedMessages = "/channels/%s/pins",

			PinMessage = "/channels/%s/pins/%s",

			UnpinMessage = "/channels/%s/pins/%s",

			GroupDMAddRecipient = "/channels/%s/recipients/%s",

			GroupDMRemoveRecipient = "/channels/%s/recipients/%s",

			StartThreadFromMessage = "/channels/%s/messages/%s/threads",

			StartThreadWithoutMessage = "/channels/%s/threads",

			StartThreadInForumOrMediaChannel = "/channels/%s/threads",

			JoinThread = "/channels/%s/thread-members/@me",

			AddThreadMember = "/channels/%s/thread-members/%s",

			LeaveThread = "/channels/%s/thread-members/@me",

			RemoveThreadMember = "/channels/%s/thread-members/%s",

			GetThreadMember = "/channels/%s/thread-members/%s",

			ListThreadMembers = "/channels/%s/thread-members",

			ListPublicArchivedThreads = "/channels/%s/threads/archived/public",

			ListPrivateArchivedThreads = "/channels/%s/threads/archived/private",

			ListJoinedPrivateArchivedThreads = "/channels/%s/users/@me/threads/archived/private",

			ListGuildEmojis = "/guilds/%s/emojis",

			GetGuildEmoji = "/guilds/%s/emojis/%s",

			CreateGuildEmoji = "/guilds/%s/emojis",

			ModifyGuildEmoji = "/guilds/%s/emojis/%s",

			DeleteGuildEmoji = "/guilds/%s/emojis/%s",

			CreateGuild = "/guilds",

			GetGuild = "/guilds/%s",

			GetGuildPreview = "/guilds/%s/preview",

			ModifyGuild = "/guilds/%s",

			DeleteGuild = "/guilds/%s",

			GetGuildChannels = "/guilds/%s/channels",

			CreateGuildChannel = "/guilds/%s/channels",

			ModifyGuildChannelPositions = "/guilds/%s/channels",

			ListActiveGuildThreads = "/guilds/%s/threads/active",

			GetGuildMember = "/guilds/%s/members/%s",

			ListGuildMembers = "/guilds/%s/members",

			SearchGuildMembers = "/guilds/%s/members/search",

			AddGuildMember = "/guilds/%s/members/%s",

			ModifyGuildMember = "/guilds/%s/members/%s",

			ModifyCurrentMember = "/guilds/%s/members/@me",

			AddGuildMemberRole = "/guilds/%s/members/%s/roles/%s",

			RemoveGuildMemberRole = "/guilds/%s/members/%s/roles/%s",

			RemoveGuildMember = "/guilds/%s/members/%s",

			GetGuildBans = "/guilds/%s/bans",

			GetGuildBan = "/guilds/%s/bans/%s",

			CreateGuildBan = "/guilds/%s/bans/%s",

			RemoveGuildBan = "/guilds/%s/bans/%s",

			BulkGuildBan = "/guilds/%s/bulk-ban",

			GetGuildRoles = "/guilds/%s/roles",

			GetGuildRole = "/guilds/%s/roles/%s",

			CreateGuildRole = "/guilds/%s/roles",

			ModifyGuildRolePositions = "/guilds/%s/roles",

			ModifyGuildRole = "/guilds/%s/roles/%s",

			ModifyGuildMFALevel = "/guilds/%s/mfa",

			DeleteGuildRole = "/guilds/%s/roles/%s",

			GetGuildPruneCount = "/guilds/%s/prune",

			BeginGuildPrune = "/guilds/%s/prune",

			GetGuildVoiceRegions = "/guilds/%s/regions",

			GetGuildInvites = "/guilds/%s/invites",

			GetGuildIntegrations = "/guilds/%s/integrations",

			DeleteGuildIntegration = "/guilds/%s/integrations/%s",

			GetGuildWidgetSettings = "/guilds/%s/widget",

			ModifyGuildWidget = "/guilds/%s/widget",

			GetGuildWidget = "/guilds/%s/widget.json",

			GetGuildVanityURL = "/guilds/%s/vanity-url",

			GetGuildWidgetImage = "/guilds/%s/widget.png",

			GetGuildWelcomeScreen = "/guilds/%s/welcome-screen",

			ModifyGuildWelcomeScreen = "/guilds/%s/welcome-screen",

			GetGuildOnboarding = "/guilds/%s/onboarding",

			ModifyGuildOnboarding = "/guilds/%s/onboarding",

			ModifyCurrentUserVoiceState = "/guilds/%s/voice-states/@me",

			ModifyUserVoiceState = "/guilds/%s/voice-states/%s",

			ListGuildScheduledForEvents = "/guilds/%s/scheduled-events",

			CreateGuildScheduledEvent = "/guilds/%s/scheduled-events",

			GetGuildScheduledEvent = "/guilds/%s/scheduled-events/%s",

			ModifyGuildScheduledEvent = "/guilds/%s/scheduled-events/%s",

			DeleteGuildScheduledEvent = "/guilds/%s/scheduled-events/%s",

			GetGuildScheduledEventUsers = "/guilds/%s/scheduled-events/%s/users",

			GetGuildTemplate = "/guilds/templates/%s",

			CreateGuildFromTemplate = "/guilds/templates/%s",

			GetGuildTemplates = "/guilds/%s/templates",

			CreateGuildTemplate = "/guilds/%s/templates",

			SyncGuildTemplate = "/guilds/%s/templates/%s",

			ModifyGuildTemplate = "/guilds/%s/templates/%s",

			DeleteGuildTemplate = "/guilds/%s/templates/%s",

			GetInvite = "/invites/%s",

			DeleteInvite = "/invites/%s",

			GetAnswerVoters = "/channels/%s/polls/%s/answers/%s",

			EndPoll = "/channels/%s/polls/%s/expire",

			CreateStageInstance = "/stage-instances",

			GetStageInstance = "/stage-instances/%s",

			ModifyStageInstance = "/stage-instances/%s",

			DeleteStageInstance = "/stage-instances/%s",

			GetSticker = "/stickers/%s",

			ListStickerPacks = "/sticker-packs",

			ListGuildStickers = "/guilds/%s/stickers",

			GetGuildSticker = "/guilds/%s/stickers/%s",

			GetCurrentUserVoiceState = "/guilds/%s/voice-states/@me",

			GetUserVoiceState = "/guilds/%s/voice-states/%s",

			CreateGuildSticker = "/guilds/%s/stickers",

			ModifyGuildSticker = "/guilds/%s/stickers/%s",

			DeleteGuildSticker = "/guilds/%s/stickers/%s",

			GetCurrentUser = "/users/@me",

			GetUser = "/users/%s",

			ModifyCurrentUser = "/users/@me",

			GetCurrentUserGuilds = "/users/@me/guilds",

			GetCurrentUserGuildMember = "/users/@me/guilds/%s/member",

			LeaveGuild = "/users/@me/guilds/%s",

			CreateDM = "/users/@me/channels",

			CreateGroupDM = "/users/@me/channels",

			GetCurrentUserConnections = "/users/@me/connections",

			GetCurrentUserApplicationRolConnections = "/users/@me/applications/%s/role-connections",

			UpdateCurrentUserApplicationRoleConnection = "/users/@me/applications/%s/role-connections/%s",

			ListVoiceRegions = "/voice/regions",

			CreateWebhook = "/channels/%s/webhooks",

			GetChannelWebhooks = "/channels/%s/webhooks",

			GetGuildWebhooks = "/guilds/%s/webhooks",

			GetWebhook = "/webhooks/%s",

			GetWebhookWithToken = "/webhooks/%s/%s",

			ModifyWebhook = "/webhooks/%s",

			ModifyWebhookWithToken = "/webhooks/%s/%s",

			DeleteWebhook = "/webhooks/%s",

			DeleteWebhookWithToken = "/webhooks/%s/%s",

			ExecuteWebhook = "/webhooks/%s/%s",

			ExecuteSlackCompatibleWebhook = "/webhooks/%s/%s/slack",

			ExecuteGithubCompatibleWebhook = "/webhooks/%s/%s/github",

			GetWebhookMessage = "/webhooks/%s/%s/messages/%s",

			EditWebhookMessage = "/webhooks/%s/%s/messages/%s",

			DeleteWebhookMessage = "/webhooks/%s/%s/messages/%s",

			GetGateway = "/gateway",

			GetGatewayBot = "/gateway/bot",

			GetCurrentBotApplicationInformation = "/oauth2/applications/@me",

			GetCurrentAuthorizationInformation = "/oauth2/@me",
		})

		return b
	end
	function a.y()
		a.load("t")

		return "DISCORD_V10_PAYLOAD_TYPES"
	end
	function a.z()
		local b = table.freeze({
			UnknownError = 4000,
			UnknownOpcode = 4001,
			DecodeError = 4002,
			NotAuthenticated = 4003,
			AuthenticationFailed = 4004,
			AlreadyAuthenticated = 4005,
			InvalidSeq = 4007,
			Ratelimited = 4008,
			SessionTimedOut = 4009,
			InvalidShard = 4010,
			ShardingRequired = 4011,
			InvalidAPIVersion = 4012,
			InvalidIntents = 4013,
			DisallowedIntents = 4014,
		})

		return b
	end
	function a.A()
		local b = table.freeze({
			Guilds = 0,
			GuildMembers = 1,
			GuildModeration = 2,
			GuildEmojisAndStickers = 3,
			GuildIntegrations = 4,
			GuildWebhooks = 5,
			GuildInvites = 6,
			GuildVoiceStates = 7,
			GuildPresences = 8,
			GuildMessages = 9,
			GuildMessageReactions = 10,
			GuildMessageTyping = 11,
			DirectMessages = 12,
			DirectMessageReactions = 13,
			DirectMessageTyping = 14,
			MessageContent = 15,
			GuildScheduleEvents = 16,
			AutoModerationConfiguration = 20,
			AutoModerationExecution = 21,
			GuildMessagePolls = 24,
			DirectMessagePolls = 25,
		})

		return b
	end
	function a.B()
		local b = table.freeze({
			Dispatch = 0,
			Heartbeat = 1,
			Identify = 2,
			PresenceUpdate = 3,
			VoiceStateUpdate = 4,
			Resume = 6,
			Reconnect = 7,
			RequestGuildMembers = 8,
			InvalidSession = 9,
			Hello = 10,
			HeartbeatACK = 11,
		})

		return b
	end
	function a.C()
		local b = table.freeze({
			Hello = "HELLO",
			Ready = "READY",
			Resumed = "RESUMED",
			Reconnect = "RECONNECT",
			InvalidSession = "INVALID_SESSION",
			ApplicationCommandPermissionsUpdate = "APPLICATION_COMMAND_PERMISSIONS_UPDATE",
			AutoModerationRuleCreate = "AUTO_MODERATION_RULE_CREATE",
			AutoModerationRuleUpdate = "AUTO_MODERATION_RULE_UPDATE",
			AutoModerationRuleDelete = "AUTO_MODERATION_RULE_DELETE",
			AutoModerationActionExecution = "AUTO_MODERATION_ACTION_EXECUTION",
			ChannelCreate = "CHANNEL_CREATE",
			ChannelUpdate = "CHANNEL_UPDATE",
			ChannelDelete = "CHANNEL_DELETE",
			ChannelPinsUpdate = "CHANNEL_PINS_UPDATE",
			ThreadCreate = "THREAD_CREATE",
			ThreadUpdate = "THREAD_UPDATE",
			ThreadDelete = "THREAD_DELETE",
			ThreadListSync = "THREAD_LIST_SYNC",
			ThreadMemberUpdate = "THREAD_MEMBER_UPDATE",
			ThreadMembersUpdate = "THREAD_MEMBERS_UPDATE",
			EntitlementCreate = "ENTITLEMENT_CREATE",
			EntitlementUpdate = "ENTITLEMENT_UPDATE",
			EntitlementDelete = "ENTITLEMENT_DELETE",
			GuildCreate = "GUILD_CREATE",
			GuildUpdate = "GUILD_UPDATE",
			GuildDelete = "GUILD_DELETE",
			GuildAuditLogEntryCreate = "GUILD_AUDIT_LOG_ENTRY_CREATE",
			GuildBanAdd = "GUILD_BAN_ADD",
			GuildBanRemove = "GUILD_BAN_REMOVE",
			GuildEmojisUpdate = "GUILD_EMOJIS_UPDATE",
			GuildStickersUpdate = "GUILD_STICKERS_UPDATE",
			GuildIntegrationsUpdate = "GUILD_INTEGRATIONS_UPDATE",
			GuildMemberAdd = "GUILD_MEMBER_ADD",
			GuildMemberRemove = "GUILD_MEMBER_REMOVE",
			GuildMemberUpdate = "GUILD_MEMBER_UPDATE",
			GuildMembersChunk = "GUILD_MEMBERS_CHUNK",
			GuildRoleCreate = "GUILD_ROLE_CREATE",
			GuildRoleDelete = "GUILD_ROLE_DELETE",
			GuildRoleUpdate = "GUILD_ROLE_UPDATE",
			GuildScheduledEventCreate = "GUILD_SCHEDULED_EVENT_CREATE",
			GuildScheduledEventUpdate = "GUILD_SCHEDULED_EVENT_UPDATE",
			GuildScheduledEventDelete = "GUILD_SCHEDULED_EVENT_DELETE",
			GuildScheduledEventUserAdd = "GUILD_SCHEDULED_EVENT_USER_ADD",
			GuildScheduledEventUserRemove = "GUILD_SCHEDULED_EVENT_USER_REMOVE",
			IntegrationCreate = "INTEGRATION_CREATE",
			IntegrationUpdate = "INTEGRATION_UPDATE",
			IntegrationDelete = "INTEGRATION_DELETE",
			InteractionCreate = "INTERACTION_CREATE",
			InviteCreate = "INVITE_CREATE",
			InviteDelete = "INVITE_DELETE",
			MessageCreate = "MESSAGE_CREATE",
			MessageUpdate = "MESSAGE_UPDATE",
			MessageDelete = "MESSAGE_DELETE",
			MessageDeleteBulk = "MESSAGE_DELETE_BULK",
			MessageReactionAdd = "MESSAGE_REACTION_ADD",
			MessageReactionRemove = "MESSAGE_REACTION_REMOVE",
			MessageReactionRemoveAll = "MESSAGE_REACTION_REMOVE_ALL",
			MessageReactionRemoveEmoji = "MESSAGE_REACTION_REMOVE_EMOJI",
			PresenceUpdate = "PRESENCE_UPDATE",
			StageInstanceCreate = "STAGE_INSTANCE_CREATE",
			StageInstanceUpdate = "STAGE_INSTANCE_UPDATE",
			StageInstanceDelete = "STAGE_INSTANCE_DELETE",
			TypingStart = "TYPING_START",
			UserUpdate = "USER_UPDATE",
			VoiceStateUpdate = "VOICE_STATE_UPDATE",
			VoiceServerUpdate = "VOICE_SERVER_UPDATE",
			WebhooksUpdate = "WEBHOOKS_UPDATE",
			MessagePollVoteAdd = "MESSAGE_POLL_VOTE_ADD",
			MessagePollVoteRemove = "MESSAGE_POLL_VOTE_REMOVE",
		})

		return b
	end
	function a.D()
		local b = table.freeze({
			Identify = "Identify",
			Resume = "Resume",
			Heartbeat = "Heartbeat",
			RequestGuildMembers = "RequestGuildMembers",
			UpdateVoiceState = "UpdateVoiceState",
			UpdatePresence = "UpdatePresence",
		})

		return b
	end
	function a.E()
		a.load("t")

		return "DISCORD_V10_PAYLOAD_TYPES"
	end
end

return {
	user = a.load("g"),
	webhook = a.load("h"),
	sticker = a.load("i"),
	poll = a.load("j"),
	permission = a.load("n"),
	message = a.load("o"),
	interaction = a.load("p"),
	guild = a.load("q"),
	entitlement = a.load("r"),
	embed = a.load("s"),
	channel = a.load("u"),
	application = a.load("v"),
	apiTypes = a.load("t"),
	client = a.load("w"),
	voice = {},
	rest = {
		endpoints = a.load("x"),
		types = a.load("y"),
	},
	gateway = {
		closeCodes = a.load("z"),
		intents = a.load("A"),
		opcodes = a.load("B"),
		receiveEvents = a.load("C"),
		sendEvents = a.load("D"),
		types = a.load("E"),
	},
}
