local provider = require("@self/embed/provider")
local field = require("@self/embed/field")
local thumbnail = require("@self/embed/thumbnail")
local embed = require("@self/embed/embed")
local author = require("@self/embed/author")
local image = require("@self/embed/image")
local footer = require("@self/embed/footer")
local video = require("@self/embed/video")
local emoji = require("@self/emoji")
local bitflagsGuildMember = require("@self/bitflags/guildMember")
local bitflagsChannel = require("@self/bitflags/channel")
local bitflagsApplication = require("@self/bitflags/application")
local bitflagsMessage = require("@self/bitflags/message")
local bitflagsSystemChannel = require("@self/bitflags/systemChannel")
local bitflagsThreadMember = require("@self/bitflags/threadMember")
local bitflagsAttachment = require("@self/bitflags/attachment")
local bitflagsRole = require("@self/bitflags/role")
local sticker = require("@self/sticker")
local reaction = require("@self/reaction/reaction")
local countDetails = require("@self/reaction/countDetails")
local activityActivity = require("@self/activity/activity")
local activityParty = require("@self/activity/activityParty")
local activitySecrets = require("@self/activity/activitySecrets")
local activityAssets = require("@self/activity/activityAssets")
local activityButton = require("@self/activity/activityButton")
local activityEmoji = require("@self/activity/activityEmoji")
local activityTimestamp = require("@self/activity/activityTimestamp")
local threadMetadata = require("@self/channels/threadMetadata")
local private = require("@self/channels/threads/private")
local threadForum = require("@self/channels/threads/forum")
local threadMedia = require("@self/channels/threads/media")
local public = require("@self/channels/threads/public")
local announcement = require("@self/channels/threads/announcement")
local forumTag = require("@self/channels/forumTag")
local guildAnnouncement = require("@self/channels/types/guildAnnouncement")
local groupDm = require("@self/channels/types/groupDm")
local dm = require("@self/channels/types/dm")
local guildText = require("@self/channels/types/guildText")
local guildStageVoice = require("@self/channels/types/guildStageVoice")
local guildDirectory = require("@self/channels/types/guildDirectory")
local guildCategory = require("@self/channels/types/guildCategory")
local guildVoice = require("@self/channels/types/guildVoice")
local overwrite = require("@self/channels/overwrite")
local behaviourGuild = require("@self/channels/behaviour/guild")
local forum = require("@self/channels/behaviour/forum")
local thread = require("@self/channels/behaviour/thread")
local channel = require("@self/channels/behaviour/channel")
local text = require("@self/channels/behaviour/text")
local groupDM = require("@self/channels/behaviour/groupDM")
local media = require("@self/channels/behaviour/media")
local voice = require("@self/channels/behaviour/voice")
local defaultReaction = require("@self/channels/defaultReaction")
local construct = require("@self/channels/construct")
local mention = require("@self/channels/mention")
local avatarDecoration = require("@self/avatarDecoration")
local user = require("@self/user")
local entitlement = require("@self/entitlement")
local guild = require("@self/guild/guild")
local voiceRegion = require("@self/guild/voiceRegion")
local preview = require("@self/guild/preview")
local invite = require("@self/guild/invite")
local roleTag = require("@self/guild/roleTag")
local unavailableGuild = require("@self/guild/unavailableGuild")
local widgetSettings = require("@self/guild/widget/widgetSettings")
local widget = require("@self/guild/widget/widget")
local welcomeScreen = require("@self/guild/welcomeScreen")
local scheduledEvent = require("@self/guild/scheduledEvent")
local onboardingOption = require("@self/guild/onboarding/option")
local prompt = require("@self/guild/onboarding/prompt")
local onboarding = require("@self/guild/onboarding/onboarding")
local welcomeScreenChannel = require("@self/guild/welcomeScreenChannel")
local ban = require("@self/guild/ban")
local vanityUrl = require("@self/guild/vanityUrl")
local role = require("@self/guild/role")
local guildMember = require("@self/guild/member")
local integration = require("@self/guild/integration/integration")
local integrationApplication = require("@self/guild/integration/application")
local account = require("@self/guild/integration/account")
local roleSubscriptionData = require("@self/message/roleSubscriptionData")
local activity = require("@self/message/activity")
local actionRow = require("@self/message/components/actionRow")
local textInput = require("@self/message/components/textInput")
local button = require("@self/message/components/button")
local selectMenuOption = require("@self/message/components/selectMenu/option")
local defaultValue = require("@self/message/components/selectMenu/defaultValue")
local selectMenu = require("@self/message/components/selectMenu/selectMenu")
local mediaObject = require("@self/message/poll/mediaObject")
local answerCount = require("@self/message/poll/answerCount")
local answer = require("@self/message/poll/answer")
local results = require("@self/message/poll/results")
local poll = require("@self/message/poll/poll")
local message = require("@self/message/message")
local stickerItem = require("@self/message/stickerItem")
local reference = require("@self/message/reference")
local ineractionMetadata = require("@self/message/ineractionMetadata")
local call = require("@self/message/call")
local messageInteraction = require("@self/message/interaction")
local threadMember = require("@self/threadMember")
local presence = require("@self/presence")
local resolved = require("@self/resolved")
local dataOption = require("@self/interaction/dataOption")
local ping = require("@self/interaction/types/ping")
local typesCommand = require("@self/interaction/types/command")
local autocomplete = require("@self/interaction/types/autocomplete")
local modal = require("@self/interaction/types/modal")
local component = require("@self/interaction/types/component")
local data = require("@self/interaction/data")
local interaction = require("@self/interaction/behaviour/interaction")
local attachment = require("@self/attachment")
local application = require("@self/application/application")
local option = require("@self/application/command/option")
local command = require("@self/application/command/command")
local choice = require("@self/application/command/choice")
local installParams = require("@self/application/installParams")
local team = require("@self/application/team/team")
local member = require("@self/application/team/member")
local permission = require("@self/permission")
local automoderationRule = require("@self/automoderation/rule")
local automoderationAction = require("@self/automoderation/action/action")
local automoderationActionMetadata = require("@self/automoderation/action/metadata")
local automoderationTriggerMetadata = require("@self/automoderation/trigger/metadata")

export type Provider = provider.Provider
export type Permission = permission.Permission
export type Application = application.Application
export type Team = team.Team
export type TeamMember = member.Member
export type InstallParams = installParams.InstallParams
export type CommandChoice = choice.Choice
export type Command = command.Command
export type CommandOption = option.Option
export type Attachment = attachment.Attachment
export type Interaction = interaction.Interaction
export type InteractionData = data.Data
export type Component = component.Component
export type Modal = modal.Modal
export type Autocomplete = autocomplete.Autocomplete
export type TypesCommand = typesCommand.Command
export type Ping = ping.Ping
export type DataOption<T> = dataOption.DataOption<T>
export type Resolved = resolved.Resolved
export type Presence = presence.Presence
export type ThreadMember = threadMember.ThreadMember
export type MessageInteraction = messageInteraction.Interaction
export type Call = call.Call
export type InteractionMetadata = ineractionMetadata.IneractionMetadata
export type Reference = reference.Reference
export type StickerItem = stickerItem.StickerItem
export type Message = message.Message
export type Poll = poll.Poll
export type PollResults = results.Results
export type PollAnswer = answer.Answer
export type AnswerCount = answerCount.AnswerCount
export type MediaObject = mediaObject.MediaObject
export type SelectMenu = selectMenu.SelectMenu
export type DefaultValue = defaultValue.DefaultValue
export type SelectMenuOption = selectMenuOption.Option
export type Button = button.Button
export type TextInput = textInput.TextInput
export type ActionRow = actionRow.ActionRow
export type Activity = activity.Activity
export type RoleSubscriptionData = roleSubscriptionData.RoleSubscriptionData
export type Account = account.Account
export type IntegrationApplication = integrationApplication.Application
export type Integration = integration.Integration
export type GuildMember = guildMember.Member
export type Role = role.Role
export type VanityUrl = vanityUrl.VanityUrl
export type Ban = ban.Ban
export type WelcomeScreenChannel = welcomeScreenChannel.WelcomeScreenChannel
export type Onboarding = onboarding.Onboarding
export type Prompt = prompt.Prompt
export type OnboardingOption = onboardingOption.Option
export type ScheduledEvent = scheduledEvent.ScheduledEvent
export type WelcomeScreen = welcomeScreen.WelcomeScreen
export type Widget = widget.Widget
export type WidgetSettings = widgetSettings.WidgetSettings
export type UnavailableGuild = unavailableGuild.UnavailableGuild
export type RoleTag = roleTag.RoleTag
export type Invite = invite.Invite
export type Preview = preview.Preview
export type VoiceRegion = voiceRegion.VoiceRegion
export type Guild = guild.Guild
export type Entitlement = entitlement.Entitlement
export type User = user.User
export type AvatarDecoration = avatarDecoration.AvatarDecoration
export type Mention = mention.ChannelMention
export type DefaultReaction = defaultReaction.DefaultReaction
export type Voice = voice.VoiceBehaviour
export type Media = media.MediaBehaviour
export type GroupDM = groupDM.GroupDMBehaviour
export type Text = text.TextBehaviour
export type Channel = channel.ChannelBehaviour
export type Thread = thread.ThreadBehaviour
export type Forum = forum.ForumBehaviour
export type BehaviourGuild = behaviourGuild.GuildBehaviour
export type Overwrite = overwrite.Overwrite
export type GuildVoice = guildVoice.GuildVoice
export type GuildCategory = guildCategory.GuildCategory
export type GuildDirectory = guildDirectory.GuildDirectory
export type GuildStageVoice = guildStageVoice.GuildStageVoice
export type GuildText = guildText.GuildText
export type DM = dm.DM
export type GroupDm = groupDm.GroupDM
export type GuildAnnouncement = guildAnnouncement.GuildAnnouncement
export type ForumTag = forumTag.ForumTag
export type Announcement = announcement.Announcement
export type Public = public.Public
export type ThreadMedia = threadMedia.Media
export type ThreadForum = threadForum.Forum
export type Private = private.Private
export type ThreadMetadata = threadMetadata.ThreadMetadata
export type ActivityTimestamp = activityTimestamp.ActivityTimestamp
export type ActivityEmoji = activityEmoji.ActivityEmoji
export type ActivityButton = activityButton.ActivityButton
export type ActivityAssets = activityAssets.ActivityAssets
export type ActivitySecrets = activitySecrets.ActivitySecrets
export type ActivityParty = activityParty.ActivityParty
export type ActivityActivity = activityActivity.Activity
export type CountDetails = countDetails.CountDetails
export type Reaction = reaction.Reaction
export type Sticker = sticker.Sticker
export type BitflagsRole = bitflagsRole.RoleBitflag
export type BitflagsAttachment = bitflagsAttachment.AttachmentBitflag
export type BitflagsThreadMember = bitflagsThreadMember.ThreadMemberBitflag
export type BitflagsSystemChannel = bitflagsSystemChannel.SystemChannelBitflag
export type BitflagsMessage = bitflagsMessage.MessageBitflag
export type BitflagsApplication = bitflagsApplication.ApplicationBitflag
export type BitflagsChannel = bitflagsChannel.ChannelBitflag
export type BitflagsGuildMember = bitflagsGuildMember.GuildMemberBitflag
export type Emoji = emoji.Emoji
export type Video = video.Video
export type Footer = footer.Footer
export type Image = image.Image
export type Author = author.Author
export type Embed = embed.Embed
export type Thumbnail = thumbnail.Thumbnail
export type Field = field.Field
export type AutomoderationRule = automoderationRule.AutomoderationRule
export type AutomoderationAction = automoderationAction.Action
export type AutomoderationActionMetadata = automoderationActionMetadata.ActionMetadata
export type AutomoderationTriggerMetadata = automoderationTriggerMetadata.TriggerMetadata

return {
	permission = permission,
	automoderation = {
		rule = automoderationRule,
		action = {
			action = automoderationAction,
			metadata = automoderationActionMetadata,
		},
		triggerMetadata = automoderationTriggerMetadata,
	},
	application = {
		team = {
			member = member,
			team = team,
		},
		installParams = installParams,
		command = {
			choice = choice,
			command = command,
			option = option,
		},
		application = application,
	},
	attachment = attachment,
	interaction = {
		behaviour = {
			interaction = interaction,
		},
		data = data,
		types = {
			component = component,
			modal = modal,
			autocomplete = autocomplete,
			command = typesCommand,
			ping = ping,
		},
		dataOption = dataOption,
	},
	resolved = resolved,
	presence = presence,
	threadMember = threadMember,
	message = {
		interaction = messageInteraction,
		call = call,
		ineractionMetadata = ineractionMetadata,
		reference = reference,
		stickerItem = stickerItem,
		message = message,
		poll = {
			poll = poll,
			results = results,
			answer = answer,
			answerCount = answerCount,
			mediaObject = mediaObject,
		},
		components = {
			selectMenu = {
				selectMenu = selectMenu,
				defaultValue = defaultValue,
				option = selectMenuOption,
			},
			button = button,
			textInput = textInput,
			actionRow = actionRow,
		},
		activity = activityActivity,
		roleSubscriptionData = roleSubscriptionData,
	},
	guild = {
		integration = {
			account = account,
			application = integrationApplication,
			integration = integration,
		},
		member = guildMember,
		role = role,
		vanityUrl = vanityUrl,
		ban = ban,
		welcomeScreenChannel = welcomeScreenChannel,
		onboarding = {
			onboarding = onboarding,
			prompt = prompt,
			option = onboardingOption,
		},
		scheduledEvent = scheduledEvent,
		welcomeScreen = welcomeScreen,
		widget = {
			widget = widget,
			widgetSettings = widgetSettings,
		},
		unavailableGuild = unavailableGuild,
		roleTag = roleTag,
		invite = invite,
		preview = preview,
		voiceRegion = voiceRegion,
		guild = guild,
	},
	entitlement = entitlement,
	user = user,
	avatarDecoration = avatarDecoration,
	channels = {
		mention = mention,
		construct = construct,
		defaultReaction = defaultReaction,
		behaviour = {
			voice = voice,
			media = media,
			groupDM = groupDM,
			text = text,
			channel = channel,
			thread = thread,
			forum = forum,
			guild = behaviourGuild,
		},
		overwrite = overwrite,
		types = {
			guildVoice = guildVoice,
			guildCategory = guildCategory,
			guildDirectory = guildDirectory,
			guildStageVoice = guildStageVoice,
			guildText = guildText,
			dm = dm,
			groupDm = groupDm,
			guildAnnouncement = guildAnnouncement,
		},
		forumTag = forumTag,
		threads = {
			announcement = announcement,
			public = public,
			media = threadMedia,
			forum = threadForum,
			private = private,
		},
		threadMetadata = threadMetadata,
	},
	activity = {
		activityTimestamp = activityTimestamp,
		activityEmoji = activityEmoji,
		activityButton = activityButton,
		activityAssets = activityAssets,
		activitySecrets = activitySecrets,
		activityParty = activityParty,
		activity = activity,
	},
	reaction = {
		countDetails = countDetails,
		reaction = reaction,
	},
	sticker = sticker,
	bitflags = {
		role = bitflagsRole,
		attachment = bitflagsAttachment,
		threadMember = bitflagsThreadMember,
		systemChannel = bitflagsSystemChannel,
		message = bitflagsMessage,
		application = bitflagsApplication,
		channel = bitflagsChannel,
		guildMember = bitflagsGuildMember,
	},
	emoji = emoji,
	embed = {
		video = video,
		footer = footer,
		image = image,
		author = author,
		embed = embed,
		thumbnail = thumbnail,
		field = field,
		provider = provider,
	},
}
